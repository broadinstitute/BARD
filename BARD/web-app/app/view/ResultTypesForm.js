/*
 * File: app/view/ResultTypesForm.js
 * Date: Mon Apr 23 2012 15:52:23 GMT-0400 (EDT)
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BARD.view.ResultTypesForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.resulttypesform',

    height: 591,
    width: 992,
    bodyPadding: 10,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    height: 459,
                    width: 817,
                    layout: {
                        type: 'border'
                    },
                    title: 'Measures/Result Types',
                    items: [
                        {
                            xtype: 'gridpanel',
                            autoScroll: true,
                            store: 'assayStore',
                            flex: 1,
                            region: 'center',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'resultType',
                                    flex: 2,
                                    text: 'Result Type'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'entryUnit',
                                    text: 'Unit of Measure'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'measureContext',
                                    flex: 1,
                                    text: 'Context'
                                }
                            ],
                            viewConfig: {

                            }
                        },
                        {
                            xtype: 'fieldset',
                            width: 210,
                            region: 'east',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Add Measure'
                                },
                                {
                                    xtype: 'button',
                                    text: 'Del Measure'
                                },
                                {
                                    xtype: 'button',
                                    text: 'Edit Measure'
                                },
                                {
                                    xtype: 'displayfield',
                                    name: 'helpText',
                                    value: 'Help:\nAdd measures (aka end-points, result types) from the dictionary.\nFor each measure select which will be the \'parent\' measure to form a hierarchy of measures.\nSelect an appropriate Unit of Measure to be used for data entry.\n\nFor each measure a context is named. If you wish to use the same context for several measures, edit their context names to be the same. Contexts (aka measure groups, readout groups) are not formed until you click Submit.',
                                    anchor: '100%'
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            border: '1px solid black',
                            text: 'Submit/Next'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});