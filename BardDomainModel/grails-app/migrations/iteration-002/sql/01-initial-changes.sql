
-- Sequence Alter SQL
DROP SEQUENCE RESULT_TYPE_ID_SEQ;

DROP SEQUENCE PROJECT_ASSAY_ID_SEQ;

CREATE SEQUENCE PROJECT_EXPERIMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 2
    NOORDER;

CREATE SEQUENCE EXTERNAL_REFERENCE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 2
    NOORDER;


-- Standard Alter Table SQL
DROP INDEX UI_ELEMENT_LOWER_LABEL;

DROP INDEX FK_PROJECT_EXPERIMENT;

ALTER TABLE EXPERIMENT DROP CONSTRAINT FK_PROJECT_EXPERIMENT;

ALTER TABLE EXPERIMENT DROP (PROJECT_ID);

DROP INDEX FK_RESULT_QUALIFIER;


-- Drop Referencing Constraint SQL

ALTER TABLE ASSAY_DOCUMENT DROP CONSTRAINT FK_ASSAY_DOCUMENT_ASSAY;

ALTER TABLE EXPERIMENT DROP CONSTRAINT FK_EXPERIMENT_ASSAY;

ALTER TABLE MEASURE DROP CONSTRAINT FK_MEASURE_ASSAY;

ALTER TABLE MEASURE_CONTEXT DROP CONSTRAINT FK_MEASURE_CONTEXT_ASSAY;

ALTER TABLE MEASURE_CONTEXT_ITEM DROP CONSTRAINT FK_M_CONTEXT_ITEM_ASSAY;

ALTER TABLE EXTERNAL_ASSAY DROP CONSTRAINT FK_EXT_ASSAY_ASSAY;

ALTER TABLE PROJECT_ASSAY DROP CONSTRAINT FK_PROJECT_ASSAY_RELATED_ASSAY;

ALTER TABLE PROJECT_ASSAY DROP CONSTRAINT FK_PROJECT_ASSAY_ASSAY;

-- Drop Constraint, Rename and Create Table SQL

ALTER TABLE ASSAY DROP PRIMARY KEY DROP INDEX;

ALTER TABLE ASSAY DROP CONSTRAINT CK_ASSAY_EXTRACTION;

ALTER TABLE ASSAY DROP CONSTRAINT CK_ASSAY_STATUS;

DROP INDEX IDX_ASSAY_NAME_VERSION;

ALTER TABLE ASSAY RENAME TO ASSAY_06202012001641000;

CREATE TABLE ASSAY
(
    ASSAY_ID             NUMBER(19)     NOT NULL,
    ASSAY_STATUS         VARCHAR2(20)   DEFAULT 'Pending' NOT NULL,
    ASSAY_NAME           VARCHAR2(1000) NOT NULL,
    ASSAY_VERSION        VARCHAR2(10)   DEFAULT 1 NOT NULL,
    ASSAY_TYPE           VARCHAR2(20)   DEFAULT 'Regular'     NULL,
    DESIGNED_BY          VARCHAR2(100)      NULL,
    READY_FOR_EXTRACTION VARCHAR2(20)   DEFAULT 'Ready' NOT NULL,
    VERSION              NUMBER(38)     DEFAULT 0 NOT NULL,
    DATE_CREATED         TIMESTAMP(6)   DEFAULT sysdate NOT NULL,
    LAST_UPDATED         TIMESTAMP(6)       NULL,
    MODIFIED_BY          VARCHAR2(40)       NULL
);

COMMENT ON COLUMN ASSAY.VERSION IS
'Update_version is used by Hibernate to resolve the "lost Update" problem when used in optimistic locking';



ALTER TABLE EXTERNAL_ASSAY DROP CONSTRAINT FK_EXT_ASSAY_EXT_SYSTEM;

ALTER TABLE EXTERNAL_ASSAY DROP PRIMARY KEY DROP INDEX;

DROP INDEX FK_EXT_ASSAY_ASSAY;

DROP INDEX "FK_EXT_ASSAY_EXT_SYSTEM";

ALTER TABLE EXTERNAL_ASSAY RENAME TO EXTERNAL_A_06202012001646000;

CREATE TABLE EXTERNAL_REFERENCE
(
    EXTERNAL_REFERENCE_ID NUMBER(19)    NOT NULL,
    EXTERNAL_SYSTEM_ID    NUMBER(19)    NOT NULL,
    EXPERIMENT_ID         NUMBER(19)        NULL,
    PROJECT_ID            NUMBER(19)        NULL,
    EXT_ASSAY_REF         VARCHAR2(128) NOT NULL,
    VERSION               NUMBER(38)    DEFAULT 0 NOT NULL,
    DATE_CREATED          TIMESTAMP(6)  DEFAULT sysdate NOT NULL,
    LAST_UPDATED          TIMESTAMP(6)      NULL,
    MODIFIED_BY           VARCHAR2(40)      NULL
);

COMMENT ON COLUMN EXTERNAL_REFERENCE.VERSION IS
'Update_version is used by Hibernate to resolve the "lost Update" problem when used in optimistic locking';


ALTER TABLE PROJECT_ASSAY DROP CONSTRAINT FK_PROJECT_ASSAY_PROJECT;



ALTER TABLE PROJECT_ASSAY DROP CONSTRAINT FK_PROJECT_ASSAY_STAGE;

ALTER TABLE PROJECT_ASSAY DROP PRIMARY KEY DROP INDEX;

DROP INDEX FK_PROJECT_ASSAY_ASSAY;

DROP INDEX FK_PROJECT_ASSAY_PROJECT;

DROP INDEX FK_PROJECT_ASSAY_RELATED_ASSAY;

ALTER TABLE PROJECT_ASSAY RENAME TO PROJECT_AS_06202012001648000;

CREATE TABLE PROJECT_EXPERIMENT
(
    PROJECT_EXPERIMENT_ID NUMBER(19)     NOT NULL,
    PROJECT_ID            NUMBER(19)     NOT NULL,
    STAGE_ID              NUMBER(19)         NULL,
    EXPERIMENT_ID         NUMBER(19)     NOT NULL,
    FOLLOWS_EXPERIMENT_ID NUMBER(19)         NULL,
    DESCRIPTION           VARCHAR2(1000)     NULL,
    VERSION               NUMBER(38)     DEFAULT 0 NOT NULL,
    DATE_CREATED          TIMESTAMP(6)   DEFAULT sysdate NOT NULL,
    LAST_UPDATED          TIMESTAMP(6)       NULL,
    MODIFIED_BY           VARCHAR2(40)       NULL
);

COMMENT ON COLUMN PROJECT_EXPERIMENT.VERSION IS 'Update_version is used by Hibernate to resolve the "lost Update" problem when used in optimistic locking';
-- Insert Data SQL

ALTER SESSION ENABLE PARALLEL DML;

INSERT INTO ASSAY(
                  ASSAY_ID,
                  ASSAY_STATUS,
                  ASSAY_NAME,
                  ASSAY_VERSION,
                  ASSAY_TYPE,
                  DESIGNED_BY,
                  READY_FOR_EXTRACTION,
                  VERSION,
                  DATE_CREATED,
                  LAST_UPDATED,
                  MODIFIED_BY
                 )
           SELECT
                  ASSAY_ID,
                  ASSAY_STATUS,
                  ASSAY_NAME,
                  ASSAY_VERSION,
                  'Regular',
                  DESIGNED_BY,
                  READY_FOR_EXTRACTION,
                  VERSION,
                  DATE_CREATED,
                  LAST_UPDATED,
                  MODIFIED_BY
             FROM ASSAY_06202012001641000;

COMMIT;

ALTER TABLE ASSAY LOGGING;

ALTER SESSION ENABLE PARALLEL DML;

INSERT INTO EXTERNAL_REFERENCE(
                           EXTERNAL_REFERENCE_ID,
                           EXTERNAL_SYSTEM_ID,
                           EXPERIMENT_ID,
                           PROJECT_ID,
                           EXT_ASSAY_REF,
                           VERSION,
                           DATE_CREATED,
                           LAST_UPDATED,
                           MODIFIED_BY
                          )
                    SELECT
                           EXTERNAL_REFERENCE_ID_SEQ.NEXTVAL,
                           a.EXTERNAL_SYSTEM_ID,
                           e.experiment_id,
                           NULL,
                           a.EXT_ASSAY_ID,
                           a.VERSION,
                           a.DATE_CREATED,
                           a.LAST_UPDATED,
                           a.MODIFIED_BY
                      FROM EXTERNAL_A_06202012001646000 a,
                           EXPERIMENT e
                      WHERE a.assay_id = e.assay_id;

COMMIT;

ALTER TABLE EXTERNAL_REFERENCE LOGGING;

ALTER SESSION ENABLE PARALLEL DML;

INSERT INTO PROJECT_EXPERIMENT(
                           PROJECT_EXPERIMENT_ID,
                           PROJECT_ID,
                           STAGE_ID,
                           EXPERIMENT_ID,
                           FOLLOWS_EXPERIMENT_ID,
                           DESCRIPTION,
                           VERSION,
                           DATE_CREATED,
                           LAST_UPDATED,
                           MODIFIED_BY
                          )
                    SELECT
                           a.PROJECT_ASSAY_ID,
                           a.PROJECT_ID,
                           a.STAGE_ID,
                           e.experiment_id,
                           NULL,
                           a.PROMOTION_CRITERIA,
                           a.VERSION,
                           a.DATE_CREATED,
                           a.LAST_UPDATED,
                           a.MODIFIED_BY
                      FROM PROJECT_AS_06202012001648000 a,
                           EXPERIMENT e
                      WHERE a.assay_id = e.assay_id;

COMMIT;

ALTER TABLE PROJECT_EXPERIMENT LOGGING;

-- Add Indexes SQL

CREATE INDEX IDX_ASSAY_NAME_VERSION
    ON ASSAY(ASSAY_NAME,ASSAY_VERSION);

-- Add Constraint SQL

ALTER TABLE ASSAY ADD CONSTRAINT PK_ASSAY
PRIMARY KEY (ASSAY_ID);

ALTER TABLE ASSAY ADD CONSTRAINT CK_ASSAY_EXTRACTION
CHECK (ready_for_extraction IN ('Ready', 'Started', 'Complete'));

ALTER TABLE ASSAY ADD CONSTRAINT CK_ASSAY_STATUS
CHECK (Assay_Status IN ('Pending', 'Active', 'Superceded', 'Retired'));

ALTER TABLE ASSAY ADD CONSTRAINT CK_ASSAY_TYPE
CHECK (Assay_Type IN ('Regular', 'Panel - Array', 'Panel - Group'));

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT PK_EXTERNAL_REFERENCE
PRIMARY KEY (EXTERNAL_REFERENCE_ID);


ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT CK_PROJECT_EXPERIMENT_NULLS
CHECK ((Project_ID is null and experiment_ID is not null)
 or
(Project_ID is not null and experiment_ID is null));


ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT PK_PROJECT_EXPERIMENT
PRIMARY KEY (PROJECT_EXPERIMENT_ID);


-- Alter Index SQL

ALTER INDEX FK_PROTOCOL_ASSAY
    RENAME  TO FK_ASSAY_DOCUMENT_ASSAY;

CREATE UNIQUE INDEX IDX_ELEMENT_LOWER_LABEL
    ON ELEMENT(LOWER("LABEL"));

CREATE INDEX FK_EXT_REFERENCE_EXT_SYSTEM
    ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID);

CREATE INDEX FK_EXT_REFERENCE_EXPERIMENT
    ON EXTERNAL_REFERENCE(EXPERIMENT_ID);

CREATE INDEX FK_EXT_REFERENCE_PROJECT
    ON EXTERNAL_REFERENCE(PROJECT_ID);

CREATE UNIQUE INDEX AK_EXT_REFERENCE
    ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID,EXPERIMENT_ID,PROJECT_ID);

CREATE INDEX FK_PROJECT_EXPRMNT_PROJECT
    ON PROJECT_EXPERIMENT(PROJECT_ID);

CREATE INDEX FK_PROJECT_EXPRMNT_EXPERIMENT
    ON PROJECT_EXPERIMENT(EXPERIMENT_ID);

CREATE INDEX FK_PROJECT_EXPRMNT_STAGE
    ON PROJECT_EXPERIMENT(STAGE_ID);

CREATE INDEX FK_PROJECT_EXPRMNT_FLW_EXPRMNT
    ON PROJECT_EXPERIMENT(FOLLOWS_EXPERIMENT_ID);


-- Add Referencing Foreign Keys SQL

ALTER TABLE ASSAY_DOCUMENT ADD CONSTRAINT FK_ASSAY_DOCUMENT_ASSAY
FOREIGN KEY (ASSAY_ID)
REFERENCES ASSAY (ASSAY_ID)
ENABLE VALIDATE;

ALTER TABLE EXPERIMENT ADD CONSTRAINT FK_EXPERIMENT_ASSAY
FOREIGN KEY (ASSAY_ID)
REFERENCES ASSAY (ASSAY_ID)
ENABLE VALIDATE;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_ASSAY
FOREIGN KEY (ASSAY_ID)
REFERENCES ASSAY (ASSAY_ID)
ENABLE VALIDATE;

ALTER TABLE MEASURE_CONTEXT ADD CONSTRAINT FK_MEASURE_CONTEXT_ASSAY
FOREIGN KEY (ASSAY_ID)
REFERENCES ASSAY (ASSAY_ID)
ENABLE VALIDATE;

ALTER TABLE MEASURE_CONTEXT_ITEM ADD CONSTRAINT FK_M_CONTEXT_ITEM_ASSAY
FOREIGN KEY (ASSAY_ID)
REFERENCES ASSAY (ASSAY_ID)
ENABLE VALIDATE;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_PROJECT
FOREIGN KEY (PROJECT_ID)
REFERENCES PROJECT (PROJECT_ID)
ENABLE VALIDATE;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXPERIMENT
FOREIGN KEY (EXPERIMENT_ID)
REFERENCES EXPERIMENT (EXPERIMENT_ID)
ENABLE VALIDATE;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXT_SYTEM
FOREIGN KEY (EXTERNAL_SYSTEM_ID)
REFERENCES EXTERNAL_SYSTEM (EXTERNAL_SYSTEM_ID)
ENABLE VALIDATE;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PROJECT_EXPRMNT_PROJECT
FOREIGN KEY (PROJECT_ID)
REFERENCES PROJECT (PROJECT_ID)
ENABLE VALIDATE;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PROJECT_EXPRMNT_STAGE
FOREIGN KEY (STAGE_ID)
REFERENCES ELEMENT (ELEMENT_ID)
ENABLE VALIDATE;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PROJECT_EXPRMNT_FLW_EXPRMNT
FOREIGN KEY (FOLLOWS_EXPERIMENT_ID)
REFERENCES EXPERIMENT (EXPERIMENT_ID)
ENABLE VALIDATE;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PROJECT_EXPRMNT_EXPERIMENT
FOREIGN KEY (EXPERIMENT_ID)
REFERENCES EXPERIMENT (EXPERIMENT_ID)
ENABLE VALIDATE;
