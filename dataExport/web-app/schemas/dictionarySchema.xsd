<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:include schemaLocation="coreSchema.xsd"/>
    <xs:annotation>
        <xs:documentation>All of the individual schema needed to do a data export</xs:documentation>
    </xs:annotation>
    <xs:element name="element">
        <xs:annotation>
            <xs:documentation>Models a dictionary element.
Doing an HTTP get to the href of a link of type application/vnd.bard.cap+xml;type=element
will give you this element

</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="label"/>
                <xs:element minOccurs="0" ref="description"/>
                <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
                <xs:element minOccurs="0" name="externalUrl" type="xs:anyURI"/>
                <xs:element minOccurs="0" name="ontologies">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="ontology">
                                <xs:complexType>
                                    <xs:attribute name="name" type="xs:string" use="required"/>
                                    <xs:attribute name="abbreviation" type="xs:string"/>
                                    <xs:attribute name="sourceUrl" type="xs:string"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element maxOccurs="unbounded" ref="link"/>
            </xs:sequence>
            <xs:attribute name="elementId" type="bardID" use="required"/>
            <xs:attribute name="elementStatus">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Pending"/>
                        <xs:enumeration value="Published"/>
                        <xs:enumeration value="Deprecated"/>
                        <xs:enumeration value="Retired"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="abbreviation" type="xs:string"/>
            <xs:attribute ref="readyForExtraction" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="stage">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="stageName">
                    <xs:annotation>
                        <xs:documentation>The current stage
                        </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="128"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element minOccurs="0" ref="description">
                    <xs:annotation>
                        <xs:documentation>
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" ref="link"/>
            </xs:sequence>
            <xs:attribute name="stageElement" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>The label on the element that this stage refers ti</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="parentStageName" type="xs:string" use="optional">
                <xs:annotation>
                    <xs:documentation>The parent stage name of this stage</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="resultType">
        <xs:annotation>
            <xs:documentation>Models a result type from the dictionary.
maps to the mime type :
application/vnd.bard.cap+xml;type=resultType</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="resultTypeName" type="xs:string"/>
                <xs:element minOccurs="0" ref="description"/>
                <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
                <xs:element minOccurs="0" ref="link"/>
            </xs:sequence>
            <xs:attribute name="resultTypeElement" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>The label on the element that this result type refers to</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="parentResultType" type="xs:string" use="optional">
                <xs:annotation>
                    <xs:documentation>The label on the parent result type</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="abbreviation" type="xs:string"/>
            <xs:attribute name="baseUnit" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A reference to a unit</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="resultTypeStatus" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Published"/>
                        <xs:enumeration value="Pending"/>
                        <xs:enumeration value="Deprecated"/>
                        <xs:enumeration value="Retired"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="dictionary">
        <xs:annotation>
            <xs:documentation>Holds the whole dictionary
Doing an HTTP get with a link of type
application/vnd.bard.cap+xml;type=dictionary should give the client the entire dictionary</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="elements">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="element"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="elementHierarchies">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="elementHierarchy" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="childElement">
                                            <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element minOccurs="0" ref="link"/>
                                                </xs:sequence>
                                                <xs:attribute name="childElement" type="xs:string"
                                                  use="required">
                                                  <xs:annotation>
                                                  <xs:documentation>The label on the element that this child points to</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element minOccurs="0" name="parentElement">
                                            <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element ref="link"/>
                                                </xs:sequence>
                                                <xs:attribute name="parentElement" type="xs:string"
                                                  use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>The label on the element that this parent points to</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="relationshipType" type="xs:string">
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="resultTypes">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="resultType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="stages">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="stage"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="descriptors">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="descriptor"
                                type="descriptorType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="laboratories">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="laboratory">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="laboratoryName" type="xs:string"/>
                                        <xs:element minOccurs="0" ref="description"/>
                                        <xs:element minOccurs="0" ref="link"/>
                                    </xs:sequence>
                                    <xs:attribute name="laboratoryElement" type="xs:string"
                                        use="required">
                                        <xs:annotation>
                                            <xs:documentation>References an element label</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="parentLaboratory" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>Name of the parent laboratory</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="units">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="unit">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" ref="description"/>
                                        <xs:element minOccurs="0" ref="link"/>
                                    </xs:sequence>
                                    <xs:attribute name="unitElement" type="xs:string" use="required"/>
                                    <xs:attribute name="parentUnit" type="xs:string" use="optional"
                                    />
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element minOccurs="0" name="unitConversions">
                    <xs:complexType>
                        <xs:sequence minOccurs="0">
                            <xs:element maxOccurs="unbounded" name="unitConversion" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" name="formula" type="xs:string"/>
                                        <xs:element minOccurs="0" ref="link"/>
                                    </xs:sequence>
                                    <xs:attribute name="fromUnit" type="xs:string" use="required"/>
                                    <xs:attribute name="toUnit" type="xs:string" use="required"/>
                                    <xs:attribute name="multiplier" type="xs:double"/>
                                    <xs:attribute name="offset" type="xs:double"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="Element_Key">
            <xs:annotation>
                <xs:documentation>A definition to say that the elementId attribute on an element must be unique throughout this document</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="elements/element"/>
            <xs:field xpath="@elementId"/>
        </xs:key>
        <xs:key name="Element_Label_Key">
            <xs:selector xpath="elements/element"/>
            <xs:field xpath="label"/>
        </xs:key>
        <xs:keyref name="Element_LabelKeyRef" refer="Element_Label_Key">
            <xs:selector xpath="elementHierarchies/elementHierarchy"/>
            <xs:field xpath="@parentElement | @childElement"/>
        </xs:keyref>
        <xs:keyref name="Element_LabelResultTypeKeyRef" refer="Element_Label_Key">
            <xs:selector xpath="elementHierarchies/elementHierarchy"/>
            <xs:field xpath="@element"/>
        </xs:keyref>
        <xs:keyref name="Element_LabelStageElementKeyRef" refer="Element_Label_Key">
            <xs:selector xpath="stages/stage"/>
            <xs:field xpath="@stageElement"/>
        </xs:keyref>
        <xs:keyref name="Element_LabKeyRef" refer="Element_Label_Key">
            <xs:selector xpath="laboratories/laboratory"/>
            <xs:field xpath="@laboratoryElement"/>
        </xs:keyref>

    </xs:element>
    <xs:complexType name="descriptorType">
        <xs:sequence>
            <xs:element name="elementStatus" type="xs:string"/>
            <xs:element name="label" type="xs:string"/>
            <xs:element minOccurs="0" ref="description"/>
            <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
            <xs:element minOccurs="0" ref="link"/>
        </xs:sequence>
        <xs:attribute name="parentDescriptorLabel" type="xs:string">
            <xs:annotation>
                <xs:documentation>The label on the parent descriptor</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="descriptorElement" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>The label on the element that this descriptor refers to.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="abbreviation" type="xs:string"/>
        <xs:attribute name="externalUrl" type="xs:string"/>
        <xs:attribute name="unit" type="xs:string"/>
        <xs:attribute name="descriptor" type="xs:string" use="required"/>
    </xs:complexType>
</xs:schema>
