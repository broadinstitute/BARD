<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:include schemaLocation="coreSchema.xsd"/>
    <xs:annotation>
        <xs:documentation>All of the individual schema needed to do a data export</xs:documentation>
    </xs:annotation>
    <xs:element name="element">
        <xs:annotation>
            <xs:documentation>Models a dictionary element.
Doing an HTTP get to the href of a link of type application/vnd.bard.cap+xml;type=element
will give you this element

</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="label" type="xs:string"/>
                <xs:element minOccurs="0" ref="description"/>
                <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
                <xs:element minOccurs="0" name="externalUrl" type="xs:anyURI"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="link"/>
            </xs:sequence>
            <xs:attribute name="elementId" type="bardID" use="required"/>
            <xs:attribute name="elementStatus">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Pending"/>
                        <xs:enumeration value="Published"/>
                        <xs:enumeration value="Deprecated"/>
                        <xs:enumeration value="Retired"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="abbreviation" type="xs:string"/>
            <xs:attribute name="unit" type="xs:string"/>
            <xs:attribute ref="readyForExtraction" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="stage">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="stageName">
                    <xs:annotation>
                        <xs:documentation>The current stage
                        </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:maxLength value="128"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element minOccurs="0" ref="description">
                    <xs:annotation>
                        <xs:documentation>
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="stageId" type="bardID" use="required"/>
            <xs:attribute name="parentStageId" type="bardID" use="optional"/>
            <xs:attribute name="stageStatus" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="resultType">
        <xs:annotation>
            <xs:documentation>Models a result type from the dictionary.
maps to the mime type :
application/vnd.bard.cap+xml;type=resultType</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="resultTypeName" type="xs:string"/>
                <xs:element minOccurs="0" ref="description"/>
                <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
            </xs:sequence>
            <xs:attribute name="resultTypeId" type="bardID" use="required"> </xs:attribute>
            <xs:attribute name="parentResultTypeId" type="bardID" use="optional"> </xs:attribute>
            <xs:attribute name="abbreviation" type="xs:string"/>
            <xs:attribute name="baseUnit" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A reference to a unit</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="resultTypeStatus" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Published"/>
                        <xs:enumeration value="Pending"/>
                        <xs:enumeration value="Deprecated"/>
                        <xs:enumeration value="Retired"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="dictionary">
        <xs:annotation>
            <xs:documentation>Holds the whole dictionary
Doing an HTTP get with a link of type
application/vnd.bard.cap+xml;type=dictionary should give the client the entire dictionary</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="elements">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="element"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="elementHierarchies">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="elementHierarchy" maxOccurs="unbounded">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="relationshipType">
                                            <xs:simpleType>
                                                <xs:restriction base="xs:string">
                                                  <xs:enumeration value="supported by"/>
                                                  <xs:enumeration value="child of"/>
                                                  <xs:enumeration value="has_a"/>
                                                  <xs:enumeration value="derives from"/>
                                                  <xs:enumeration value="is_a"/>
                                                </xs:restriction>
                                            </xs:simpleType>
                                        </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="parentElementId" type="bardID"
                                        use="optional"/>
                                    <xs:attribute name="childElementId" type="bardID" use="required"
                                    />
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="resultTypes">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="resultType"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="ResultType_Key">
                        <xs:selector xpath="resultType"/>
                        <xs:field xpath="@resultTypeId"/>
                    </xs:key>
                    <xs:keyref name="ResultType_KeyRef" refer="ResultType_Key">
                        <xs:selector xpath="resultType"/>
                        <xs:field xpath="@parentResultTypeId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="stages">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="stage"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Stage_Key">
                        <xs:selector xpath="stage"/>
                        <xs:field xpath="@stageId"/>
                    </xs:key>
                    <xs:keyref name="Stage_KeyRef" refer="Stage_Key">
                        <xs:selector xpath="stage"/>
                        <xs:field xpath="@parentStageId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="biologyDescriptors">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="biologyDescriptor"
                                type="descriptorType"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Biology_Descriptor_Key">
                        <xs:selector xpath="biologyDescriptor"/>
                        <xs:field xpath="@descriptorId"/>
                    </xs:key>
                    <xs:keyref name="Biology_Descriptor_KeyRef" refer="Biology_Descriptor_Key">
                        <xs:selector xpath="biologyDescriptor"/>
                        <xs:field xpath="@parentDescriptorId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="assayDescriptors">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="assayDescriptor"
                                type="descriptorType"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Assay_Descriptor_Key">
                        <xs:selector xpath="assayDescriptor"/>
                        <xs:field xpath="@descriptorId"/>
                    </xs:key>
                    <xs:keyref name="Assay_Descriptor_KeyRef" refer="Assay_Descriptor_Key">
                        <xs:selector xpath="assayDescriptor"/>
                        <xs:field xpath="@parentDescriptorId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="instanceDescriptors">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="instanceDescriptor"
                                type="descriptorType"/>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Instance_Descriptor_Key">
                        <xs:selector xpath="instanceDescriptor"/>
                        <xs:field xpath="@descriptorId"/>
                    </xs:key>
                    <xs:keyref name="Instance_Descriptor_KeyRef" refer="Instance_Descriptor_Key">
                        <xs:selector xpath="instanceDescriptor"/>
                        <xs:field xpath="@parentDescriptorId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="laboratories">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="laboratory">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="laboratoryName" type="xs:string"/>
                                        <xs:element minOccurs="0" ref="description"/>
                                    </xs:sequence>
                                    <xs:attribute name="laboratoryId" type="bardID" use="required"/>
                                    <xs:attribute name="parentLaboratoryId" type="bardID"/>
                                    <xs:attribute name="laboratoryStatus" type="xs:string"
                                        use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Laboratory_Key">
                        <xs:selector xpath="laboratory"/>
                        <xs:field xpath="@laboratoryId"/>
                    </xs:key>
                    <xs:keyref name="Laboratory_KeyRef" refer="Laboratory_Key">
                        <xs:selector xpath="laboratory"/>
                        <xs:field xpath="@parentLaboratoryId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="units">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="unit">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" ref="description"/>
                                    </xs:sequence>
                                    <xs:attribute name="unitId" type="bardID" use="required"/>
                                    <xs:attribute name="parentUnitId" type="bardID" use="optional"/>
                                    <xs:attribute name="unit" type="xs:string" use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                    <xs:key name="Unit_Key">
                        <xs:selector xpath="units/unit"/>
                        <xs:field xpath="@unitId"/>
                    </xs:key>
                    <xs:keyref name="Unit_KeyRef" refer="Unit_Key">
                        <xs:selector xpath="units/unit"/>
                        <xs:field xpath="@parentUnitId"/>
                    </xs:keyref>
                </xs:element>
                <xs:element minOccurs="0" name="unitConversions">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" name="unitConversion">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element minOccurs="0" name="formula" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="fromUnit" type="xs:string" use="required"/>
                                    <xs:attribute name="toUnit" type="xs:string" use="required"/>
                                    <xs:attribute name="multiplier" type="xs:double"/>
                                    <xs:attribute name="offset" type="xs:double"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="Element_Key">
            <xs:annotation>
                <xs:documentation>A definition to say that the elementId attribute on an element must be unique throughout this document</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="dictionary/elements/element"/>
            <xs:field xpath="@elementId"/>
        </xs:key>
        <xs:keyref name="Element_KeyRef" refer="Element_Key">
            <xs:annotation>
                <xs:documentation>Any element that references an elementId</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="dictionary/elementHierarchies/elementHierarchy"/>
            <xs:field xpath="@parentElementId | @childElementId"/>
        </xs:keyref>
        <xs:key name="Unit_Key_Name">
            <xs:annotation>
                <xs:documentation>Signifies that the unit attribute on a Unit element must be unique throughout this document</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="units/unit"/>
            <xs:field xpath="@unit"/>
        </xs:key>
        <xs:keyref name="Element_Unit_KeyNameRef" refer="Unit_Key_Name">
            <xs:annotation>
                <xs:documentation>The unit attribute on an element object must reference a Unit Key in this document</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="elements/element"/>
            <xs:field xpath="@unit"/>
        </xs:keyref>
        <xs:keyref name="Unit_Descriptor_KeyRef" refer="Unit_Key_Name">
            <xs:annotation>
                <xs:documentation>The unit attribute on the descriptors (instance, ass and biology)
should reference a unit</xs:documentation>
            </xs:annotation>
            <xs:selector
                xpath="assayDescriptiors/assayDescriptor|biologyDescriptiors/biologyDescriptor|instanceDescriptiors/instanceDescriptor"/>
            <xs:field xpath="@unit"/>
        </xs:keyref>
        <xs:keyref name="ResultType_BaseUnit_KeyNameRef" refer="Unit_Key_Name">
            <xs:selector xpath="resultTypes/resultType"/>
            <xs:field xpath="@baseUnit"/>
        </xs:keyref>
        <xs:keyref name="UnitConversion_FromUnit_KeyNameRef" refer="Unit_Key_Name">
            <xs:selector xpath="unitConversions/unitConversion"/>
            <xs:field xpath="@fromUnit"/>
        </xs:keyref>
        <xs:keyref name="UnitConversion_ToUnit_KeyNameRef" refer="Unit_Key_Name">
            <xs:selector xpath="unitConversions/unitConversion"/>
            <xs:field xpath="@toUnit"/>
        </xs:keyref>
    </xs:element>
    <xs:complexType name="descriptorType">
        <xs:sequence>
            <xs:element name="elementStatus" type="xs:string"/>
            <xs:element minOccurs="0" name="label" type="xs:string"/>
            <xs:element minOccurs="0" ref="description"/>
            <xs:element minOccurs="0" name="synonyms" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="descriptorId" type="bardID" use="required"/>
        <xs:attribute name="parentDescriptorId" type="bardID"/>
        <xs:attribute name="elementId" type="bardID"/>
        <xs:attribute name="abbreviation" type="xs:string"/>
        <xs:attribute name="externalUrl" type="xs:string"/>
        <xs:attribute name="unit" type="xs:string"/>
    </xs:complexType>
</xs:schema>
