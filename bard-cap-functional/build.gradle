apply plugin: "groovy"
apply plugin: "idea"

repositories {
    //mavenCentral()
    maven {
        url "http://bard-repo.broadinstitute.org:8081/artifactory/bard-virtual-repo"
    }
}

configurations {
    testCompile.transitive = true
}
dependencies {
    testCompile 'com.oracle:ojdbc6:11.2.0.2.0'
    testCompile "org.codehaus.groovy:groovy-all:2.0.7"

    testCompile "org.gebish:geb-spock:0.9.2"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"

    // Need a driver implementation
    def seleniumVersion = "2.35.0"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-ie-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    testCompile "xml-apis:xml-apis:1.4.01"


    testCompile "junit:junit:4.11"
}

sourceSets {
    test {
        groovy {
            srcDirs = ['test/functional']
        }
    }
}

test {
    systemProperties = System.getProperties()
    outputs.upToDateWhen { false }
    systemProperties "geb.build.reportsDir": "${reporting.baseDir}/geb"
}

task createDirs << {
    sourceSets*.allSource.srcDirs*.each { dir ->
        ant.touch(file: new File(dir, ".gitignore"), mkdirs: true)
    }
    sourceSets*.resources.srcDirs*.each { dir ->
        ant.touch(file: new File(dir, ".gitignore"), mkdirs: true)
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = "1.8"
}

task(console, dependsOn: "classes", type: JavaExec) {
    main = "groovy.ui.Console"
    classpath = sourceSets.main.runtimeClasspath
}
