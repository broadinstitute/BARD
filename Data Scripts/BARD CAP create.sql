--
-- ER/Studio Data Architect 9.1 SQL Code Generation
-- Project :      CAP and Data entry.DM1
--
-- Date Created : Friday, February 7th 2013 09:09:12
-- Target DBMS : Oracle 11g
--

DROP TABLE ASSAY CASCADE CONSTRAINTS
;
DROP TABLE Assay_Context CASCADE CONSTRAINTS
;
DROP TABLE Assay_Context_Item CASCADE CONSTRAINTS
;
DROP TABLE ASSAY_CONTEXT_MEASURE CASCADE CONSTRAINTS
;
DROP TABLE Assay_Descriptor_Tree CASCADE CONSTRAINTS
;
DROP TABLE bard_Tree CASCADE CONSTRAINTS
;
DROP TABLE ext_ontology_Tree CASCADE CONSTRAINTS
;
DROP TABLE ASSAY_DOCUMENT CASCADE CONSTRAINTS
;
DROP TABLE Biology_Descriptor_tree CASCADE CONSTRAINTS
;
DROP TABLE DICTIONARY_TREE CASCADE CONSTRAINTS
;
DROP TABLE ELEMENT CASCADE CONSTRAINTS
;
DROP TABLE ELEMENT_HIERARCHY CASCADE CONSTRAINTS
;
DROP TABLE ERROR_LOG CASCADE CONSTRAINTS
;
DROP TABLE EXPERIMENT CASCADE CONSTRAINTS
;
DROP TABLE EXPERIMENT_FILE CASCADE CONSTRAINTS
;
DROP TABLE EXPRMT_CONTEXT CASCADE CONSTRAINTS
;
DROP TABLE EXPRMT_CONTEXT_ITEM CASCADE CONSTRAINTS
;
DROP TABLE EXPRMT_MEASURE CASCADE CONSTRAINTS
;
DROP TABLE EXTERNAL_REFERENCE CASCADE CONSTRAINTS
;
DROP TABLE EXTERNAL_SYSTEM CASCADE CONSTRAINTS
;
DROP TABLE FAVORITE CASCADE CONSTRAINTS
;
DROP TABLE IDENTIFIER_MAPPING CASCADE CONSTRAINTS
;
DROP TABLE Instance_Descriptor_tree CASCADE CONSTRAINTS
;
DROP TABLE Laboratory_tree CASCADE CONSTRAINTS
;
DROP TABLE MEASURE CASCADE CONSTRAINTS
;
DROP TABLE MIGRATION_ACTION CASCADE CONSTRAINTS
;
DROP TABLE MIGRATION_AID CASCADE CONSTRAINTS
;
DROP TABLE MIGRATION_DAY CASCADE CONSTRAINTS
;
DROP TABLE MIGRATION_EVENT CASCADE CONSTRAINTS
;
DROP TABLE MIGRATION_PERSON CASCADE CONSTRAINTS
;
DROP TABLE ONTOLOGY CASCADE CONSTRAINTS
;
DROP TABLE ONTOLOGY_ITEM CASCADE CONSTRAINTS
;
DROP TABLE PERSON CASCADE CONSTRAINTS
;
DROP TABLE PERSON_ROLE CASCADE CONSTRAINTS
;
DROP TABLE PRJCT_EXPRMT_CONTEXT CASCADE CONSTRAINTS
;
DROP TABLE prjct_exprmt_cntxt_ITEM CASCADE CONSTRAINTS
;
--DROP TABLE prjct_exprmt_context_ITEM CASCADE CONSTRAINTS
--;
DROP TABLE PROJECT CASCADE CONSTRAINTS
;
DROP TABLE PROJECT_CONTEXT CASCADE CONSTRAINTS
;
DROP TABLE Project_Context_Item CASCADE CONSTRAINTS
;
DROP TABLE PROJECT_DOCUMENT CASCADE CONSTRAINTS
;
DROP TABLE PROJECT_EXPERIMENT CASCADE CONSTRAINTS
;
DROP TABLE Project_Step CASCADE CONSTRAINTS
;
DROP TABLE RESULT CASCADE CONSTRAINTS
;
DROP TABLE RESULT_HIERARCHY CASCADE CONSTRAINTS
;
DROP TABLE Result_type_tree CASCADE CONSTRAINTS
;
DROP TABLE "ROLE" CASCADE CONSTRAINTS
;
DROP TABLE Rslt_Context_Item CASCADE CONSTRAINTS
;
--DROP TABLE Run_Context_Item CASCADE CONSTRAINTS
--;
DROP TABLE Stage_tree CASCADE CONSTRAINTS
;
DROP TABLE STATEMENT_LOG CASCADE CONSTRAINTS
;
DROP TABLE STATS_MODIFIER_TREE CASCADE CONSTRAINTS
;
DROP TABLE STEP_CONTEXT CASCADE CONSTRAINTS
;
DROP TABLE STEP_CONTEXT_ITEM CASCADE CONSTRAINTS
;
DROP TABLE SUBSTANCE CASCADE CONSTRAINTS
;
DROP TABLE TEAM CASCADE CONSTRAINTS
;
DROP TABLE TEAM_MEMBER CASCADE CONSTRAINTS
;
DROP TABLE TREE_ROOT CASCADE CONSTRAINTS
;
DROP TABLE UNIT_CONVERSION CASCADE CONSTRAINTS
;
DROP TABLE Unit_tree CASCADE CONSTRAINTS
;
DROP SEQUENCE ASSAY_CONTEXT_ID_SEQ
;
DROP SEQUENCE ASSAY_CONTEXT_ITEM_ID_SEQ
;
DROP SEQUENCE ASSAY_CONTEXT_MEASURE_ID_SEQ
;
DROP SEQUENCE ASSAY_DOCUMENT_ID_SEQ
;
DROP SEQUENCE ASSAY_ID_SEQ
;
--DROP SEQUENCE BARD_ONTOLOGY_SEQ
--;
DROP SEQUENCE ELEMENT_HIERARCHY_ID_SEQ
;
DROP SEQUENCE ELEMENT_ID_SEQ
;
DROP SEQUENCE ERROR_LOG_ID_SEQ
;
DROP SEQUENCE EXPERIMENT_ID_SEQ
;
DROP SEQUENCE EXPRMT_CONTEXT_ID_SEQ
;
DROP SEQUENCE EXPRMT_CONTEXT_ITEM_ID_SEQ
;
DROP SEQUENCE EXPRMT_MEASURE_ID_SEQ
;
DROP SEQUENCE EXTERNAL_REFERENCE_ID_SEQ
;
DROP SEQUENCE EXTERNAL_SYSTEM_ID_SEQ
;
DROP SEQUENCE FAVORITE_ID_SEQ
;
DROP SEQUENCE MEASURE_ID_SEQ
;
DROP SEQUENCE ONTOLOGY_ID_SEQ
;
DROP SEQUENCE ONTOLOGY_ITEM_ID_SEQ
;
DROP SEQUENCE PERSON_ID_SEQ
;
DROP SEQUENCE PERSON_ROLE_ID_SEQ
;
DROP SEQUENCE PROJECT_EXPERIMENT_ID_SEQ
;
DROP SEQUENCE PRJCT_EXPRMT_CONTEXT_ID_SEQ
;
DROP SEQUENCE PRJCT_EXPRMT_CNTXT_ITEM_ID_SEQ
;
DROP SEQUENCE PROJECT_CONTEXT_ID_SEQ
;
DROP SEQUENCE PROJECT_CONTEXT_ITEM_ID_SEQ
;
DROP SEQUENCE PROJECT_ID_SEQ
;
DROP SEQUENCE PROJECT_STEP_ID_SEQ
;
DROP SEQUENCE RESULT_HIERARCHY_ID_SEQ
;
DROP SEQUENCE RESULT_ID_SEQ
;
DROP SEQUENCE ROLE_ID_SEQ
;
DROP SEQUENCE RSLT_CONTEXT_ITEM_ID_SEQ
;
DROP SEQUENCE STEP_CONTEXT_ID_SEQ
;
DROP SEQUENCE STEP_CONTEXT_ITEM_ID_SEQ
;
DROP SEQUENCE TEAM_ID_SEQ
;
DROP SEQUENCE TEAM_MEMBER_ID_SEQ
;
DROP SEQUENCE UNIT_CONVERSION_ID_SEQ
;
--
-- SEQUENCE: ASSAY_CONTEXT_ID_SEQ
--

CREATE SEQUENCE ASSAY_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE ASSAY_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_CONTEXT_MEASURE_ID_SEQ
--

CREATE SEQUENCE ASSAY_CONTEXT_MEASURE_ID_SEQ
    START WITH 111
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 200
    NOORDER
;

--
-- SEQUENCE: ASSAY_DOCUMENT_ID_SEQ
--

CREATE SEQUENCE ASSAY_DOCUMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_ID_SEQ
--

CREATE SEQUENCE ASSAY_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: BARD_ONTOLOGY_SEQ
--

--CREATE SEQUENCE BARD_ONTOLOGY_SEQ
--    START WITH 1692
--    INCREMENT BY 1
--    NOMINVALUE
--    MAXVALUE 9999999
--    noCACHE
--    NOORDER
--;

--GRANT SELECT ON BARD_ONTOLOGY_SEQ TO ONTOLOGY_HELPER
--;
--
-- SEQUENCE: ELEMENT_HIERARCHY_ID_SEQ
--

CREATE SEQUENCE ELEMENT_HIERARCHY_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPERIMENT_FILE_ID_SEQ
--

CREATE SEQUENCE EXPERIMENT_FILE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ELEMENT_ID_SEQ
--

CREATE SEQUENCE ELEMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ERROR_LOG_ID_SEQ
--

CREATE SEQUENCE ERROR_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPERIMENT_ID_SEQ
--

CREATE SEQUENCE EXPERIMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPRMT_CONTEXT_ID_SEQ
--

CREATE SEQUENCE EXPRMT_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPRMT_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE EXPRMT_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPRMT_MEASURE_ID_SEQ
--

CREATE SEQUENCE EXPRMT_MEASURE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXTERNAL_REFERENCE_ID_SEQ
--

CREATE SEQUENCE EXTERNAL_REFERENCE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXTERNAL_SYSTEM_ID_SEQ
--

CREATE SEQUENCE EXTERNAL_SYSTEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    NOCACHE
    NOORDER
;

--
-- SEQUENCE: FAVORITE_ID_SEQ
--

CREATE SEQUENCE FAVORITE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: MEASURE_ID_SEQ
--

CREATE SEQUENCE MEASURE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ONTOLOGY_ID_SEQ
--

CREATE SEQUENCE ONTOLOGY_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ONTOLOGY_ITEM_ID_SEQ
--

CREATE SEQUENCE ONTOLOGY_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PERSON_ID_SEQ
--

CREATE SEQUENCE PERSON_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PERSON_ROLE_ID_SEQ
--

CREATE SEQUENCE PERSON_ROLE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PRJCT_EXPRMT_CONTEXT_ID_SEQ
--

CREATE SEQUENCE PRJCT_EXPRMT_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PRJCT_EXPRMT_CNTXT_ITEM_ID_SEQ
--

CREATE SEQUENCE PRJCT_EXPRMT_CNTXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_CONTEXT_ID_SEQ
--

CREATE SEQUENCE PROJECT_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE PROJECT_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 200
    NOORDER
;

--
-- SEQUENCE: PROJECT_EXPERIMENT_ID_SEQ
--

CREATE SEQUENCE PROJECT_EXPERIMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_ID_SEQ
--

CREATE SEQUENCE PROJECT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_STEP_ID_SEQ
--

CREATE SEQUENCE PROJECT_STEP_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 200
    NOORDER
;

--
-- SEQUENCE: RESULT_ID_SEQ
--

CREATE SEQUENCE RESULT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 999999999999999999
    NOCYCLE
    CACHE 1000
    NOORDER
;

--
-- SEQUENCE: ROLE_ID_SEQ
--

CREATE SEQUENCE ROLE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: RSLT_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE RSLT_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 999999999999999999
    NOCYCLE
    CACHE 1000
    NOORDER
;

--
-- SEQUENCE: STEP_CONTEXT_ID_SEQ
--

CREATE SEQUENCE STEP_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: STEP_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE STEP_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: TEAM_ID_SEQ
--

CREATE SEQUENCE TEAM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: TEAM_MEMBER_ID_SEQ
--

CREATE SEQUENCE TEAM_MEMBER_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: UNIT_CONVERSION_ID_SEQ
--

CREATE SEQUENCE UNIT_CONVERSION_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- TABLE: ASSAY
--

CREATE TABLE ASSAY(
    ASSAY_ID                NUMBER(19, 0)     NOT NULL,
    ASSAY_STATUS            VARCHAR2(20)      DEFAULT 'Draft' NOT NULL,
    Assay_Short_Name        VARCHAR2(250)     DEFAULT ' ' NOT NULL,
    ASSAY_NAME              VARCHAR2(1000 CHAR) NOT NULL,
    ASSAY_VERSION           VARCHAR2(10)      DEFAULT 1 NOT NULL,
    ASSAY_TYPE              VARCHAR2(20)      DEFAULT 'Regular' NOT NULL,
    DESIGNED_BY             VARCHAR2(100),
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Not Ready' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_ASSAY_STATUS CHECK (Assay_Status IN ('Draft', 'Witnessed', 'Finished', 'Measures Done', 'Annotations Done', 'Retired')),
    CONSTRAINT CK_ASSAY_EXTRACTION CHECK (ready_for_extraction IN ('Not Ready', 'Ready', 'Started', 'Complete')),
    CONSTRAINT CK_ASSAY_TYPE CHECK (Assay_Type IN ('Regular', 'Panel - Array', 'Panel - Group', 'Template')),
    CONSTRAINT PK_ASSAY PRIMARY KEY (ASSAY_ID)
)
;



--
-- TABLE: Assay_Context
--

CREATE TABLE Assay_Context(
    Assay_Context_ID    NUMBER(19, 0)    NOT NULL,
    ASSAY_ID            NUMBER(19, 0)    NOT NULL,
    CONTEXT_NAME        VARCHAR2(128),
    Context_Group       VARCHAR2(256),
    DISPLAY_ORDER       NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    VERSION             NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created        TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT PK_ASSAY_CONTEXT PRIMARY KEY (Assay_Context_ID)
)
;



COMMENT ON COLUMN Assay_Context.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
--
-- TABLE: Assay_Context_Item
--

CREATE TABLE Assay_Context_Item(
    Assay_Context_Item_ID    NUMBER(19, 0)     NOT NULL,
    Assay_Context_ID         NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER            NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    ATTRIBUTE_TYPE           VARCHAR2(20)      NOT NULL,
    ATTRIBUTE_ID             NUMBER(19, 0)     NOT NULL,
    VALUE_ID                 NUMBER(19, 0),
    EXT_VALUE_ID             VARCHAR2(60),
    QUALIFIER                CHAR(2),
    VALUE_DISPLAY            VARCHAR2(500),
    VALUE_NUM                NUMBER(30, 15),
    VALUE_MIN                NUMBER(30, 15),
    VALUE_MAX                NUMBER(30, 15),
    VERSION                  NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created             TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT CK_ATTRIBUTE_TYPE CHECK (Attribute_Type in ('Fixed', 'List', 'Range', 'Free')),
    CONSTRAINT CK_ASSAY_CONTEXT_ITEM_QALFR CHECK (QUALIFIER IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_ASSAY_CONTEXT_ITEM PRIMARY KEY (Assay_Context_Item_ID)
)
;



COMMENT ON COLUMN Assay_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: ASSAY_CONTEXT_MEASURE
--

CREATE TABLE ASSAY_CONTEXT_MEASURE(
    ASSAY_CONTEXT_MEASURE_ID    NUMBER(19, 0)    NOT NULL,
    Assay_Context_ID            NUMBER(19, 0)    NOT NULL,
    MEASURE_ID                  NUMBER(19, 0)    NOT NULL,
    VERSION                     NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED                TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED                TIMESTAMP(6),
    MODIFIED_BY                 VARCHAR2(40),
    CONSTRAINT PK_ASSAY_CONTEXT_MEASURE PRIMARY KEY (ASSAY_CONTEXT_MEASURE_ID)
)
;



--
-- TABLE: Assay_Descriptor_Tree
--

CREATE TABLE Assay_Descriptor_Tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_ASSAY_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: ASSAY_DOCUMENT
--

CREATE TABLE ASSAY_DOCUMENT(
    Assay_document_ID    NUMBER(19, 0)    NOT NULL,
    ASSAY_ID             NUMBER(19, 0)    NOT NULL,
    Document_Name        VARCHAR2(500)    NOT NULL,
    DOCUMENT_TYPE        VARCHAR2(20)     DEFAULT 'Description' NOT NULL,
    DOCUMENT_CONTENT     CLOB             DEFAULT EMPTY_CLOB(),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT CK_ASSAY_DOCUMENT_TYPE CHECK (Document_Type IN ('Description', 'Protocol', 'Comments', 'Publication', 'Paper', 'External URL', 'Other')),
    CONSTRAINT PK_ASSAY_DOCUMENT PRIMARY KEY (Assay_document_ID)
)
;


--
-- TABLE: BARD_TREE
--

CREATE TABLE BARD_TREE(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_BARD_TREE PRIMARY KEY (NODE_ID)
)
;


--
-- TABLE: Biology_Descriptor_tree
--

CREATE TABLE Biology_Descriptor_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_BIOLOGY_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: DICTIONARY_TREE
--

CREATE TABLE DICTIONARY_TREE(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_DICTIONARY_TREE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: ELEMENT
--

CREATE TABLE ELEMENT(
    ELEMENT_ID              NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS          VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    LABEL                   VARCHAR2(128)     NOT NULL,
    UNIT_ID                 NUMBER(19, 0),
    ABBREVIATION            VARCHAR2(20),
    BARD_URI                VARCHAR2(250),
    DESCRIPTION             VARCHAR2(1000),
    SYNONYMS                VARCHAR2(1000),
    EXTERNAL_URL            VARCHAR2(1000),
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Not Ready' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_ELEMENT_STATUS CHECK (Element_Status IN ('Pending', 'Published', 'Deprecated', 'Retired')),
    CONSTRAINT CK_ELEMENT_EXTRACTION CHECK (ready_for_extraction IN ('Not Ready', 'Ready', 'Started', 'Complete')),
    CONSTRAINT PK_ELEMENT PRIMARY KEY (ELEMENT_ID)
)
;



--
-- TABLE: ELEMENT_HIERARCHY
--

CREATE TABLE ELEMENT_HIERARCHY(
    ELEMENT_HIERARCHY_ID    NUMBER(19, 0)    NOT NULL,
    PARENT_ELEMENT_ID       NUMBER(19, 0),
    CHILD_ELEMENT_ID        NUMBER(19, 0)    NOT NULL,
    RELATIONSHIP_TYPE       VARCHAR2(40)     NOT NULL,
    VERSION                 NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED            TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT PK_ELEMENT_HIERARCHY PRIMARY KEY (ELEMENT_HIERARCHY_ID)
)
;



--
-- TABLE: ERROR_LOG
--

CREATE TABLE ERROR_LOG(
    ERROR_LOG_ID      NUMBER(19, 0)     NOT NULL,
    ERROR_DATE        DATE              DEFAULT sysdate NOT NULL,
    PROCEDURE_NAME    VARCHAR2(120)     NOT NULL,
    ERR_NUM           NUMBER(19, 0)     NOT NULL,
    ERR_MSG           VARCHAR2(1000),
    ERR_COMMENT       VARCHAR2(4000),
    CONSTRAINT PK_ERROR_LOG PRIMARY KEY (ERROR_LOG_ID)
)
;



--
-- TABLE: EXPERIMENT
--

CREATE TABLE EXPERIMENT(
    EXPERIMENT_ID           NUMBER(19, 0)     NOT NULL,
    EXPERIMENT_NAME         VARCHAR2(1000)    NOT NULL,
    EXPERIMENT_STATUS       VARCHAR2(20)      DEFAULT 'Draft' NOT NULL,
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Not Ready' NOT NULL,
    ASSAY_ID                NUMBER(19, 0)     NOT NULL,
    RUN_DATE_FROM           DATE,
    RUN_DATE_TO             DATE,
    HOLD_UNTIL_DATE         DATE,
    CONFIDENCE_LEVEL        NUMBER(3,0),
    DESCRIPTION             VARCHAR2(1000),
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_EXPERIMENT_STATUS CHECK (Experiment_Status IN ('Draft', 'Approved', 'Rejected')),
    CONSTRAINT CK_EXPERIMENT_EXTRACTION CHECK (ready_for_extraction IN ('Not Ready', 'Ready', 'Started', 'Complete')),
    CONSTRAINT PK_EXPERIMENT PRIMARY KEY (EXPERIMENT_ID)
)
;



COMMENT ON COLUMN EXPERIMENT.HOLD_UNTIL_DATE IS 'can only be set a max of 1 year in the future'
;

CREATE TABLE EXPERIMENT_FILE(
    EXPERIMENT_FILE_ID    NUMBER(19, 0)     NOT NULL,
    EXPERIMENT_ID         NUMBER(19, 0)     NOT NULL,
    SUBMISSION_VERSION    NUMBER(19, 0)     NOT NULL,
    ORIGINAL_FILE         VARCHAR2(1000 CHAR) NOT NULL,
    EXPORT_FILE           VARCHAR2(1000 CHAR),
    VERSION               NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED          TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED          TIMESTAMP(6),
    MODIFIED_BY           VARCHAR2(40),
    CONSTRAINT PK_EXPERIMENT_FILE PRIMARY KEY (EXPERIMENT_FILE_ID)
)
;



--
-- TABLE: EXPRMT_CONTEXT
--

CREATE TABLE EXPRMT_CONTEXT(
    EXPRMT_CONTEXT_ID    NUMBER(19, 0)    NOT NULL,
    EXPERIMENT_ID        NUMBER(19, 0)    NOT NULL,
    CONTEXT_NAME         VARCHAR2(128),
    CONTEXT_GROUP        VARCHAR2(256),
    DISPLAY_ORDER        NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT PK_EXPRMT_CONTEXT PRIMARY KEY (EXPRMT_CONTEXT_ID)
)
;



COMMENT ON COLUMN EXPRMT_CONTEXT.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
--
-- TABLE: EXPRMT_CONTEXT_ITEM
--

CREATE TABLE EXPRMT_CONTEXT_ITEM(
    EXPRMT_CONTEXT_ITEM_ID    NUMBER(19, 0)     NOT NULL,
    EXPRMT_CONTEXT_ID         NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER             NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    ATTRIBUTE_ID              NUMBER(19, 0)     NOT NULL,
    VALUE_ID                  NUMBER(19, 0),
    EXT_VALUE_ID              VARCHAR2(60),
    QUALIFIER                 CHAR(2),
    VALUE_NUM                 NUMBER(30, 15),
    VALUE_MIN                 NUMBER(30, 15),
    VALUE_MAX                 NUMBER(30, 15),
    VALUE_DISPLAY             VARCHAR2(500),
    VERSION                   NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED              TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED              TIMESTAMP(6),
    MODIFIED_BY               VARCHAR2(40),
    CONSTRAINT CK_EXPRMT_CNTXT_ITM_QUALFR CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_EXPRMT_CONTEXT_ITEM PRIMARY KEY (EXPRMT_CONTEXT_ITEM_ID)
)
;



COMMENT ON COLUMN EXPRMT_CONTEXT_ITEM.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: EXPRMT_MEASURE
--

CREATE TABLE EXPRMT_MEASURE(
    EXPRMT_MEASURE_ID            NUMBER(19, 0)    NOT NULL,
    PARENT_EXPRMT_MEASURE_ID     NUMBER(19, 0),
    PARENT_CHILD_RELATIONSHIP    VARCHAR2(20),
    EXPERIMENT_ID                NUMBER(19, 0)    NOT NULL,
    MEASURE_ID                   NUMBER(19, 0)    NOT NULL,
    VERSION                      NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED                 TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED                 TIMESTAMP(6),
    MODIFIED_BY                  VARCHAR2(40),
    CONSTRAINT CK_EXPRMT_MEASURE_RELATIONSHIP CHECK (Parent_Child_Relationship in('Derived from', 'has Child', 'has Sibling')),
    CONSTRAINT PK_EXPRMT_MEASURE PRIMARY KEY (EXPRMT_MEASURE_ID)
)
;


--
-- TABLE: EXT_ONTOLOGY_TREE
--

CREATE TABLE EXT_ONTOLOGY_TREE(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_EXT_ONTOLOGY_TREE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: EXTERNAL_REFERENCE
--

CREATE TABLE EXTERNAL_REFERENCE(
    EXTERNAL_REFERENCE_ID    NUMBER(19, 0)    NOT NULL,
    EXTERNAL_SYSTEM_ID       NUMBER(19, 0)    NOT NULL,
    EXPERIMENT_ID            NUMBER(19, 0),
    PROJECT_ID               NUMBER(19, 0),
    EXT_ASSAY_REF            VARCHAR2(128)    NOT NULL,
    VERSION                  NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED             TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT CK_PROJECT_EXPERIMENT_NULLS CHECK ((Project_ID is null and experiment_ID is not null)
 or
(Project_ID is not null and experiment_ID is null)),
    CONSTRAINT PK_EXTERNAL_REFERENCE PRIMARY KEY (EXTERNAL_REFERENCE_ID)
)
;



--
-- TABLE: EXTERNAL_SYSTEM
--

CREATE TABLE EXTERNAL_SYSTEM(
    EXTERNAL_SYSTEM_ID    NUMBER(19, 0)     NOT NULL,
    SYSTEM_NAME           VARCHAR2(128)     NOT NULL,
    OWNER                 VARCHAR2(128),
    SYSTEM_URL            VARCHAR2(1000),
    VERSION               NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created          TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated          TIMESTAMP(6),
    MODIFIED_BY           VARCHAR2(40),
    CONSTRAINT PK_EXTERNAL_SYSTEM PRIMARY KEY (EXTERNAL_SYSTEM_ID)
)
;



--
-- TABLE: FAVORITE
--

CREATE TABLE FAVORITE(
    FAVORITE_ID      NUMBER(19, 0)     NOT NULL,
    PERSON_ID        NUMBER(19, 0)     NOT NULL,
    FAVORITE_URL     VARCHAR2(1000),
    FAVORITE_TYPE    VARCHAR2(20)      DEFAULT 'Favorite' NOT NULL,
    FAVORITE_NAME    VARCHAR2(255)     NOT NULL,
    DISPLAY_ORDER    NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    VERSION          NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    DATE_CREATED     DATE              DEFAULT sysdate,
    LAST_UPDATED     DATE,
    MODIFIED_BY      VARCHAR2(40),
    CONSTRAINT CK_FAVORITE_TYPE CHECK (Favorite_Type IN ('Favorite', 'Recently Used')),
    CONSTRAINT PK_FAVORITE PRIMARY KEY (FAVORITE_ID)
)
;



--
-- TABLE: IDENTIFIER_MAPPING
--

CREATE TABLE IDENTIFIER_MAPPING(
    SOURCE_ID        NUMBER(19, 0)    NOT NULL,
    "TABLE_NAME"     VARCHAR2(31)     NOT NULL,
    SOURCE_SCHEMA    VARCHAR2(31)     NOT NULL,
    TARGET_ID        NUMBER(19, 0)    NOT NULL,
    CONSTRAINT PK_IDENTIFIER_MAPPING PRIMARY KEY (SOURCE_ID, "TABLE_NAME", SOURCE_SCHEMA)
)
;



--
-- TABLE: Instance_Descriptor_tree
--

CREATE TABLE Instance_Descriptor_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_INSTANCE_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: Laboratory_tree
--

CREATE TABLE Laboratory_tree(
    NODE_ID              NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID       NUMBER(19, 0),
    LABORATORY_ID        NUMBER(19, 0)     NOT NULL,
    LABORATORY_STATUS    VARCHAR2(20)      NOT NULL,
    LABORATORY           VARCHAR2(128)     NOT NULL,
    DESCRIPTION          VARCHAR2(1000),
    CONSTRAINT PK_LABORATORY PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: MEASURE
--

CREATE TABLE MEASURE(
    MEASURE_ID           NUMBER(19, 0)    NOT NULL,
    ASSAY_ID             NUMBER(19, 0)    NOT NULL,
    RESULT_TYPE_ID       NUMBER(19, 0)    NOT NULL,
    Stats_Modifier_ID    NUMBER(19, 0),
    ENTRY_UNIT_ID        NUMBER(19, 0),
    PARENT_MEASURE_ID    NUMBER(19, 0),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT PK_MEASURE PRIMARY KEY (MEASURE_ID)
)
;



--
-- TABLE: MIGRATION_ACTION
--

CREATE TABLE MIGRATION_ACTION(
    ACTION_REF          NUMBER(38, 0)     NOT NULL,
    COMPLETED_ACTION    VARCHAR2(200),
    COUNT_NAME          VARCHAR2(20),
    DESCRIPTION         VARCHAR2(1000),
    COUNT_SQL           VARCHAR2(4000),
    CONSTRAINT PK_MIG_ACTION PRIMARY KEY (ACTION_REF)
)
;



--
-- TABLE: MIGRATION_AID
--

CREATE TABLE MIGRATION_AID(
    AID              VARCHAR2(20)     NOT NULL,
    CENTER           VARCHAR2(250),
    BAO_ANNOTATED    CHAR(1),
    PROBE            VARCHAR2(20),
    DNA_REPAIR       CHAR(1),
    CONSTRAINT PK_AID PRIMARY KEY (AID)
)
;



--
-- TABLE: MIGRATION_DAY
--

CREATE TABLE MIGRATION_DAY(
    DAY_REF           NUMBER(38, 0)    NOT NULL,
    MIGRATION_DATE    DATE,
    "YEAR"            NUMBER           NOT NULL,
    "MONTH"           NUMBER           NOT NULL,
    QUARTER           VARCHAR2(20)     NOT NULL,
    WEEK              NUMBER           NOT NULL,
    DAY_OF_WEEK       VARCHAR2(10),
    CONSTRAINT PK_MIG_DAY PRIMARY KEY (DAY_REF)
)
;



--
-- TABLE: MIGRATION_EVENT
--

CREATE TABLE MIGRATION_EVENT(
    ASSAY_ID         NUMBER(19, 0),
    EXPERIMENT_ID    NUMBER(19, 0),
    PROJECT_ID       NUMBER(19, 0),
    EVENT_COUNT      NUMBER(19, 0),
    PERSON_REF       NUMBER(38, 0),
    ACTION_REF       NUMBER(38, 0),
    DAY_REF          NUMBER(38, 0),
    AID              VARCHAR2(20)     NOT NULL
)
;



--
-- TABLE: MIGRATION_PERSON
--

CREATE TABLE MIGRATION_PERSON(
    PERSON_REF     NUMBER(38, 0)    NOT NULL,
    PERSON_NAME    VARCHAR2(100),
    CONSTRAINT PK_MIG_PERSON PRIMARY KEY (PERSON_REF)
)
;



--
-- TABLE: ONTOLOGY
--

CREATE TABLE ONTOLOGY(
    ONTOLOGY_ID      NUMBER(19, 0)     NOT NULL,
    ONTOLOGY_NAME    VARCHAR2(256)     NOT NULL,
    ABBREVIATION     VARCHAR2(20),
    SYSTEM_URL       VARCHAR2(1000),
    VERSION          NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created     TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated     TIMESTAMP(6),
    MODIFIED_BY      VARCHAR2(40),
    CONSTRAINT PK_ONTOLOGY PRIMARY KEY (ONTOLOGY_ID)
)
;



COMMENT ON TABLE ONTOLOGY IS 'an external ontology or dictionary or other source of reference data'
;
--
-- TABLE: ONTOLOGY_ITEM
--

CREATE TABLE ONTOLOGY_ITEM(
    ONTOLOGY_ITEM_ID    NUMBER(19, 0)    NOT NULL,
    ONTOLOGY_ID         NUMBER(19, 0)    NOT NULL,
    ELEMENT_ID          NUMBER(19, 0),
    ITEM_REFERENCE      VARCHAR2(20),
    VERSION             NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created        TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT PK_ONTOLOGY_ITEM PRIMARY KEY (ONTOLOGY_ITEM_ID)
)
;



COMMENT ON COLUMN ONTOLOGY_ITEM.ITEM_REFERENCE IS 'Concatenate this with the Ontology.system_URL for a full URI for the item'
;
--
-- TABLE: PERSON
--

CREATE TABLE PERSON(
    PERSON_ID           NUMBER(19, 0)    NOT NULL,
    USERNAME            VARCHAR2(255),
    email_address       VARCHAR2(255),
    ACCOUNT_EXPIRED     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ACCOUNT_LOCKED      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ACCOUNT_ENABLED     NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    VERSION             NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED        DATE             DEFAULT sysdate,
    LAST_UPDATED        DATE,
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT PK_PERSON PRIMARY KEY (PERSON_ID)
)
;



--
-- TABLE: PERSON_ROLE
--

CREATE TABLE PERSON_ROLE(
    PERSON_ROLE_ID    NUMBER(19, 0)    NOT NULL,
    ROLE_ID           NUMBER(19, 0)    NOT NULL,
    PERSON_ID         NUMBER(19, 0)    NOT NULL,
    VERSION           NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED      DATE             DEFAULT sysdate,
    LAST_UPDATED      DATE,
    MODIFIED_BY       VARCHAR2(40),
    CONSTRAINT PK_PERSON_ROLE PRIMARY KEY (PERSON_ROLE_ID)
)
;



--
-- TABLE: PRJCT_EXPRMT_CONTEXT
--

CREATE TABLE PRJCT_EXPRMT_CONTEXT(
    PRJCT_EXPRMT_CONTEXT_ID    NUMBER(19, 0)    NOT NULL,
    PROJECT_EXPERIMENT_ID      NUMBER(20, 0)    NOT NULL,
    CONTEXT_NAME               VARCHAR2(128),
    CONTEXT_GROUP              VARCHAR2(256),
    DISPLAY_ORDER              NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    VERSION                    NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED               TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED               TIMESTAMP(6),
    MODIFIED_BY                VARCHAR2(40),
    CONSTRAINT PK_PRJCT_EXPRMT_CONTEXT PRIMARY KEY (PRJCT_EXPRMT_CONTEXT_ID)
)
;



COMMENT ON COLUMN PRJCT_EXPRMT_CONTEXT.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
--
-- TABLE: prjct_exprmt_cntxt_ITEM
--

CREATE TABLE prjct_exprmt_cntxt_ITEM(
    prjct_exprmt_cntxt_Item_ID    NUMBER(19, 0)     NOT NULL,
    PRJCT_EXPRMT_CONTEXT_ID         NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER                   NUMBER(5, 0)      NOT NULL,
    ATTRIBUTE_ID                    NUMBER(19, 0)     NOT NULL,
    VALUE_ID                        NUMBER(19, 0),
    EXT_VALUE_ID                    VARCHAR2(60),
    QUALIFIER                       CHAR(2),
    VALUE_NUM                       NUMBER(30, 15),
    VALUE_MIN                       NUMBER(30, 15),
    VALUE_MAX                       NUMBER(30, 15),
    VALUE_DISPLAY                   VARCHAR2(500),
    VERSION                         NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED                    TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED                    TIMESTAMP(6),
    MODIFIED_BY                     VARCHAR2(40),
    CONSTRAINT CK_PRJCT_EXPRMT_CNTXT_ITM_QUAL CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_prjct_exprmt_cntxt_ITEM PRIMARY KEY (prjct_exprmt_cntxt_Item_ID)
)
;



COMMENT ON COLUMN prjct_exprmt_cntxt_ITEM.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: PROJECT
--

CREATE TABLE PROJECT(
    PROJECT_ID              NUMBER(19, 0)     NOT NULL,
    PROJECT_NAME            VARCHAR2(256)     NOT NULL,
    GROUP_TYPE              VARCHAR2(20)      DEFAULT 'Project' NOT NULL,
    DESCRIPTION             VARCHAR2(1000),
    ready_for_extraction    VARCHAR2(20)      DEFAULT 'Not Ready' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_PROJECT_EXTRACTION CHECK (ready_for_extraction IN ('Not Ready', 'Ready', 'Started', 'Complete')),
    CONSTRAINT CK_PROJECT_TYPE CHECK (GROUP_TYPE in ('Project', 'Probe Report', 'Campaign', 'Panel', 'Study', 'Template')),
    CONSTRAINT PK_PROJECT PRIMARY KEY (PROJECT_ID)
)
;



--
-- TABLE: PROJECT_CONTEXT
--

CREATE TABLE PROJECT_CONTEXT(
    PROJECT_CONTEXT_ID    NUMBER(19, 0)    NOT NULL,
    PROJECT_ID            NUMBER(19, 0)    NOT NULL,
    CONTEXT_NAME          VARCHAR2(128),
    Context_Group         VARCHAR2(256),
    DISPLAY_ORDER         NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    VERSION               NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED          TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED          TIMESTAMP(6),
    MODIFIED_BY           VARCHAR2(40),
    CONSTRAINT PK_PROJECT_CONTEXT PRIMARY KEY (PROJECT_CONTEXT_ID)
)
;



COMMENT ON COLUMN PROJECT_CONTEXT.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
--
-- TABLE: Project_Context_Item
--

CREATE TABLE Project_Context_Item(
    project_Context_Item_ID    NUMBER(19, 0)     NOT NULL,
    PROJECT_CONTEXT_ID         NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER              NUMBER(5, 0)      NOT NULL,
    ATTRIBUTE_ID               NUMBER(19, 0)     NOT NULL,
    VALUE_ID                   NUMBER(19, 0),
    EXT_VALUE_ID               VARCHAR2(60),
    QUALIFIER                  CHAR(2),
    VALUE_NUM                  NUMBER(30, 15),
    VALUE_MIN                  NUMBER(30, 15),
    VALUE_MAX                  NUMBER(30, 15),
    VALUE_DISPLAY              VARCHAR2(500),
    VERSION                    NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED               TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED               TIMESTAMP(6),
    MODIFIED_BY                VARCHAR2(40),
    CONSTRAINT CK_PRJCT_CNTXT_ITEM_QUALIFIER CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_Project_Context_Item PRIMARY KEY (project_Context_Item_ID)
)
;



COMMENT ON COLUMN Project_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: PROJECT_DOCUMENT
--

CREATE TABLE PROJECT_DOCUMENT(
    PROJECT_DOCUMENT_ID    NUMBER(19, 0)    NOT NULL,
    PROJECT_ID             NUMBER(19, 0)    NOT NULL,
    DOCUMENT_NAME          VARCHAR2(500)    NOT NULL,
    DOCUMENT_TYPE          VARCHAR2(20)     NOT NULL,
    DOCUMENT_CONTENT       CLOB,
    VERSION                NUMBER(38, 0)    NOT NULL,
    DATE_CREATED           TIMESTAMP(6)     NOT NULL,
    LAST_UPDATED           TIMESTAMP(6),
    MODIFIED_BY            VARCHAR2(40),
    CONSTRAINT CK_PROJECT_DOCUMENT_TYPE CHECK (DOCUMENT_TYPE IN ('Description', 'Protocol', 'Comments', 'Publication', 'Paper', 'External URL', 'Other')),
    CONSTRAINT PK_PROJECT_DOCUMENT PRIMARY KEY (PROJECT_DOCUMENT_ID)
)
;



--
-- TABLE: PROJECT_EXPERIMENT
--

CREATE TABLE PROJECT_EXPERIMENT(
    PROJECT_EXPERIMENT_ID    NUMBER(20, 0)    NOT NULL,
    EXPERIMENT_ID            NUMBER(19, 0)    NOT NULL,
    PROJECT_ID               NUMBER(19, 0)    NOT NULL,
    STAGE_ID                 NUMBER(19, 0),
    VERSION                  NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED             TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT PK_PROJECT_EXPERIMENT PRIMARY KEY (PROJECT_EXPERIMENT_ID)
)
;



--
-- TABLE: Project_Step
--

CREATE TABLE Project_Step(
    Project_Step_ID               NUMBER(19, 0)    NOT NULL,
    NEXT_PROJECT_EXPERIMENT_ID    NUMBER(20, 0)    NOT NULL,
    PREV_PROJECT_EXPERIMENT_ID    NUMBER(20, 0)    NOT NULL,
    EDGE_NAME                     VARCHAR2(128),
    VERSION                       NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created                  TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated                  TIMESTAMP(6),
    MODIFIED_BY                   VARCHAR2(40),
    CONSTRAINT PK_Project_Step PRIMARY KEY (Project_Step_ID)
)
;



COMMENT ON TABLE Project_Step IS 'The annotations (context items) for a step show the annotations of the incoming arrowhead on the edge between the experiments and the "follows" experiment.  Thus the annotations can refer to the experiment or the step (aka decision) that instigated the experiment.  Bear in mind that the "follows" experiment can be null, i.e. this the experiment does not have a predecessor.  Primary screens tend to have this characteristic.'
;
--
-- TABLE: RESULT
--

CREATE TABLE RESULT
(
    RESULT_ID            NUMBER(19)    NOT NULL,
    PARENT_RESULT_ID     NUMBER(19)        NULL,
    HIERARCHY_TYPE       VARCHAR2(20)      NULL,
    RESULT_STATUS        VARCHAR2(20)  DEFAULT 'Pending' NOT NULL,
    READY_FOR_EXTRACTION VARCHAR2(20)  DEFAULT 'Pending' NOT NULL,
    EXPERIMENT_ID        NUMBER(19)    NOT NULL,
    RESULT_TYPE_ID       NUMBER(19)    NOT NULL,
    STATS_MODIFIER_ID    NUMBER(19)        NULL,
    SUBSTANCE_ID         NUMBER(19)    NOT NULL,
    REPLICATE_NO         NUMBER(5)         NULL,
    QUALIFIER            CHAR(2)           NULL,
    VALUE_ID             NUMBER(19)        NULL,
    VALUE_NUM            NUMBER(30,15)     NULL,
    VALUE_MIN            NUMBER(30,15)     NULL,
    VALUE_MAX            NUMBER(30,15)     NULL,
    VALUE_DISPLAY        VARCHAR2(256)     NULL,
    VERSION              NUMBER(38)    DEFAULT 0 NOT NULL,
    DATE_CREATED         TIMESTAMP(6)  DEFAULT sysdate NOT NULL,
    LAST_UPDATED         TIMESTAMP(6)      NULL,
    MODIFIED_BY          VARCHAR2(40)      NULL
)
;
COMMENT ON COLUMN RESULT.HIERARCHY_TYPE IS
'two types of hierarchy are allowed: parent/child where one result is dependant on or grouped with another; derived from where aresult is used to claculate another (e.g. PI used for IC50).  The hierarchy types are mutually exclusive.'
;
COMMENT ON COLUMN RESULT.SUBSTANCE_ID IS
'Has external reference to the PubChem SID'
;



COMMENT ON COLUMN RESULT.SUBSTANCE_ID IS 'Has external reference to the PubChem SID'
;

--
-- TABLE: Result_type_tree
--

CREATE TABLE Result_type_tree(
    NODE_ID               NUMBER(19, 0)     NOT NULL,
    Parent_node_id        NUMBER(19, 0),
    RESULT_TYPE_ID        NUMBER(19, 0)     NOT NULL,
    RESULT_TYPE_STATUS    VARCHAR2(20)      NOT NULL,
    RESULT_TYPE_NAME      VARCHAR2(128)     NOT NULL,
    IS_LEAF               CHAR(1)           NOT NULL,
    FULL_PATH             VARCHAR2(3000),
    DESCRIPTION           VARCHAR2(1000),
    ABBREVIATION          VARCHAR2(20),
    SYNONYMS              VARCHAR2(1000),
    BASE_UNIT_ID          NUMBER(19, 0),
    CONSTRAINT PK_RESULT_TYPE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: "ROLE"
--

CREATE TABLE "ROLE"(
    ROLE_ID         NUMBER(19, 0)    NOT NULL,
    AUTHORITY       VARCHAR2(255)    NOT NULL,
    VERSION         NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED    DATE             DEFAULT sysdate,
    LAST_UPDATED    DATE,
    MODIFIED_BY     VARCHAR2(40),
    CONSTRAINT PK_ROLE PRIMARY KEY (ROLE_ID)
)
;



--
-- TABLE: Rslt_Context_Item
--

CREATE TABLE Rslt_Context_Item(
    Rslt_Context_Item_ID    NUMBER(19, 0)     NOT NULL,
    RESULT_ID               NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER           NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    ATTRIBUTE_ID            NUMBER(19, 0)     NOT NULL,
    VALUE_ID                NUMBER(19, 0),
    EXT_VALUE_ID            VARCHAR2(60),
    QUALIFIER               CHAR(2),
    VALUE_NUM               NUMBER(30, 15),
    VALUE_MIN               NUMBER(30, 15),
    VALUE_MAX               NUMBER(30, 15),
    VALUE_DISPLAY           VARCHAR2(500),
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_RSLT_CONTEXT_ITEM_QULFR CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_RSLT_CONTEXT_ITEM PRIMARY KEY (Rslt_Context_Item_ID)
)
;



COMMENT ON COLUMN Rslt_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: Stage_tree
--

CREATE TABLE Stage_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    STAGE_ID          NUMBER(19, 0)     NOT NULL,
    STAGE_STATUS      VARCHAR2(20)      NOT NULL,
    STAGE             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    CONSTRAINT PK_STAGE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: STATEMENT_LOG
--

CREATE TABLE STATEMENT_LOG(
    "TABLE_NAME"   VARCHAR2(63)      NOT NULL,
    IDENTIFIER     NUMBER(19, 0)     NOT NULL,
    ACTION_DATE    DATE              DEFAULT sysdate NOT NULL,
    "ACTION"       VARCHAR2(20)      NOT NULL,
    DATA_CLAUSE    VARCHAR2(1000),
    CONSTRAINT PK_STATEMENT_LOG PRIMARY KEY ("TABLE_NAME", IDENTIFIER, ACTION_DATE, "ACTION")
)
;



--
-- TABLE: STATS_MODIFIER_TREE
--

CREATE TABLE STATS_MODIFIER_TREE(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(3000),
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT_ID           NUMBER(19, 0),
    CONSTRAINT PK_STATS_MODIFIER PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: STEP_CONTEXT
--

CREATE TABLE STEP_CONTEXT(
    STEP_CONTEXT_ID    NUMBER(19, 0)    NOT NULL,
    Project_Step_ID    NUMBER(19, 0)    NOT NULL,
    CONTEXT_NAME       VARCHAR2(128),
    Context_Group      VARCHAR2(256),
    DISPLAY_ORDER      NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    VERSION            NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED       TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED       TIMESTAMP(6),
    MODIFIED_BY        VARCHAR2(40),
    CONSTRAINT PK_STEP_CONTEXT PRIMARY KEY (STEP_CONTEXT_ID)
)
;



COMMENT ON COLUMN STEP_CONTEXT.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
--
-- TABLE: STEP_CONTEXT_ITEM
--

CREATE TABLE STEP_CONTEXT_ITEM(
    STEP_CONTEXT_ITEM_ID    NUMBER(19, 0)     NOT NULL,
    STEP_CONTEXT_ID         NUMBER(19, 0)     NOT NULL,
    DISPLAY_ORDER           NUMBER(5, 0)      NOT NULL,
    ATTRIBUTE_ID            NUMBER(19, 0)     NOT NULL,
    VALUE_ID                NUMBER(19, 0),
    EXT_VALUE_ID            VARCHAR2(60),
    QUALIFIER               CHAR(2),
    VALUE_NUM               NUMBER(30, 15),
    VALUE_MIN               NUMBER(30, 15),
    VALUE_MAX               NUMBER(30, 15),
    VALUE_DISPLAY           VARCHAR2(500),
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_STEP_CONTEXT_ITEM_QUALIFIER CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_STEP_CONTEXT_ITEM PRIMARY KEY (STEP_CONTEXT_ITEM_ID)
)
;



COMMENT ON COLUMN STEP_CONTEXT_ITEM.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
--
-- TABLE: SUBSTANCE
--

CREATE TABLE SUBSTANCE(
    SUBSTANCE_ID        NUMBER(19, 0)     NOT NULL,
--    COMPOUND_ID         NUMBER(38, 0),
    SMILES              VARCHAR2(4000),
--    MOLECULAR_WEIGHT    NUMBER(10, 3),
--    SUBSTANCE_TYPE      VARCHAR2(20)      DEFAULT 'small molecule' NOT NULL,
    VERSION             NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED        TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
--    CONSTRAINT CK_SUBSTANCE_TYPE CHECK (Substance_Type in ('small molecule', 'protein', 'peptide', 'antibody', 'cell', 'oligonucleotide')),
    CONSTRAINT PK_SUBSTANCE PRIMARY KEY (SUBSTANCE_ID)
)
;



COMMENT ON TABLE SUBSTANCE IS 'Substance is used a CACHE of data from PubChem.  This cache can be removed if we can be assured that availability and capacity (for API queries) of PubChem will support dynamic use.'
;
--
-- TABLE: TEAM
--

CREATE TABLE TEAM(
    TEAM_ID         NUMBER(19, 0)    NOT NULL,
    TEAM_NAME       VARCHAR2(255)    NOT NULL,
    LOCATION        VARCHAR2(255),
    VERSION         NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED    DATE             DEFAULT sysdate,
    LAST_UPDATED    DATE,
    MODIFIED_BY     VARCHAR2(40),
    CONSTRAINT PK_TEAM PRIMARY KEY (TEAM_ID)
)
;



--
-- TABLE: TEAM_MEMBER
--

CREATE TABLE TEAM_MEMBER(
    TEAM_MEMBER_ID       NUMBER(19, 0)    NOT NULL,
    TEAM_ID              NUMBER(19, 0)    NOT NULL,
    PERSON_ROLE_ID       NUMBER(19, 0)    NOT NULL,
    MEMBERSHIP_STATUS    VARCHAR2(20)     DEFAULT 'Active',
    VERSION              NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED         DATE             DEFAULT sysdate,
    LAST_UPDATED         DATE,
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT CK_TEAM_MEMBER_STATUS CHECK (Membership_Status IN ('Active', 'Suspended', 'Inactive')),
    CONSTRAINT PK_TEAM_MEMBER PRIMARY KEY (TEAM_MEMBER_ID)
)
;



--
-- TABLE: TREE_ROOT
--

CREATE TABLE TREE_ROOT(
    TREE_ROOT_ID         NUMBER(19, 0)    NOT NULL,
    TREE_NAME            VARCHAR2(30)     NOT NULL,
    ELEMENT_ID           NUMBER(19, 0)    NOT NULL,
    RELATIONSHIP_TYPE    VARCHAR2(20),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT PK_TREE_ROOT PRIMARY KEY (TREE_ROOT_ID)
)
;



--
-- TABLE: UNIT_CONVERSION
--

CREATE TABLE UNIT_CONVERSION(
    UNIT_CONVERSION_ID    NUMBER(19, 0)     NOT NULL,
    FROM_UNIT_ID          NUMBER(19, 0)     NOT NULL,
    TO_UNIT_ID            NUMBER(19, 0)     NOT NULL,
    MULTIPLIER            NUMBER(30, 15),
    OFFSET                NUMBER(30, 15),
    FORMULA               VARCHAR2(256),
    VERSION               NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created          TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated          TIMESTAMP(6),
    MODIFIED_BY           VARCHAR2(40),
    CONSTRAINT PK_UNIT_CONVERSION PRIMARY KEY (UNIT_CONVERSION_ID)
)
;



--
-- TABLE: Unit_tree
--

CREATE TABLE Unit_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    UNIT_ID           NUMBER(19, 0)     NOT NULL,
    UNIT              VARCHAR2(128)     NOT NULL,
    ABBREVIATION      VARCHAR2(20),
    IS_LEAF           CHAR(1)           NOT NULL,
    FULL_PATH         VARCHAR2(2000),
    DESCRIPTION       VARCHAR2(1000),
    CONSTRAINT PK_UNIT PRIMARY KEY (NODE_ID)
)
;



--
-- VIEW: ASSAY_ELEMENT
--

create or replace view ASSAY_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE ELEMENT_ID in (select adt.ELEMENT_ID from Assay_Descriptor_Tree adt)
;

COMMENT ON TABLE ASSAY_ELEMENT IS 'This view shows the unique list of elements used to assemble the assay_descriptor_tree'
;
--
-- VIEW: BIOLOGY_ELEMENT
--

create or replace view BIOLOGY_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select bdt.ELEMENT_ID from Biology_Descriptor_tree bdt)
;

--
-- VIEW: INSTANCE_ELEMENT
--

create or replace view INSTANCE_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select idt.ELEMENT_ID from Instance_Descriptor_tree idt)
;

--
-- VIEW: LABORATORY_ELEMENT
--

create or replace view LABORATORY_ELEMENT
(ELEMENT_ID, ELEMENT_STATUS, LABEL, DESCRIPTION, ABBREVIATION, SYNONYMS, UNIT_ID, BARD_URI, EXTERNAL_URL, READY_FOR_EXTRACTION, VERSION, DATE_CREATED, LAST_UPDATED, MODIFIED_BY) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT_ID, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE ELEMENT_ID in (select laboratory_ID from Laboratory_tree)
;

--
-- VIEW: RESULT_TYPE_ELEMENT
--

create or replace view RESULT_TYPE_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select RESULT_TYPE_ID from Result_type_tree)
;

--
-- VIEW: STAGE_ELEMENT
--

create or replace view STAGE_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select stage_ID from Stage_tree)
;

--
-- VIEW: UNIT_ELEMENT
--

create or replace view UNIT_ELEMENT AS
SELECT El.ELEMENT_ID Element_ID, El.ELEMENT_STATUS Element_Status, El.LABEL Label, El.DESCRIPTION Description, El.ABBREVIATION Abbreviation, El.SYNONYMS Synonyms, El.UNIT_ID Unit_ID, El.BARD_URI BARD_URI, El.EXTERNAL_URL External_URL, El.READY_FOR_EXTRACTION ready_for_extraction, El.VERSION Version, El.Date_Created Date_Created, El.Last_Updated Last_Updated, El.MODIFIED_BY Modified_by
FROM ELEMENT El
WHERE ELEMENT_ID in (select UNIT_ID from Unit_tree)
;

--
-- INDEX: IDX_ASSAY_NAME_VERSION
--

CREATE INDEX IDX_ASSAY_NAME_VERSION ON ASSAY(ASSAY_NAME, ASSAY_VERSION)
;
--
-- INDEX: AK_ASSAY_CONTEXT_ITEM
--

CREATE UNIQUE INDEX AK_ASSAY_CONTEXT_ITEM ON Assay_Context_Item(Assay_Context_ID, DISPLAY_ORDER, ATTRIBUTE_ID, ATTRIBUTE_TYPE, VALUE_DISPLAY)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_A_CONTEXT
--

CREATE INDEX FK_A_CONTEXT_ITEM_A_CONTEXT ON Assay_Context_Item(Assay_Context_ID)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_ATTRIBUTE
--

CREATE BITMAP INDEX FK_A_CONTEXT_ITEM_ATTRIBUTE ON Assay_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_VALUE
--

CREATE INDEX FK_A_CONTEXT_ITEM_VALUE ON Assay_Context_Item(VALUE_ID)
;
--
-- INDEX: FK_ACM_ASSAY_CONTEXT
--

CREATE INDEX FK_ACM_ASSAY_CONTEXT ON ASSAY_CONTEXT_MEASURE(Assay_Context_ID)
;
--
-- INDEX: FK_ACM_MEASURE
--

CREATE INDEX FK_ACM_MEASURE ON ASSAY_CONTEXT_MEASURE(MEASURE_ID)
;
--
-- INDEX: FK_ASSAY_DESCRIPTOR_PARENT_SLF
--

CREATE INDEX FK_ASSAY_DESCRIPTOR_PARENT_SLF ON Assay_Descriptor_Tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_ASSAY_DOCUMENT_ASSAY
--

CREATE INDEX FK_ASSAY_DOCUMENT_ASSAY ON ASSAY_DOCUMENT(ASSAY_ID)
;
--
-- INDEX: FK_BARD_TREE_PARENT
--

CREATE INDEX FK_BARD_TREE_PARENT ON BARD_TREE(PARENT_NODE_ID)
;
--
-- INDEX: FK_BIOLOGY_DESCRIPTOR_PRNT_SLF
--

CREATE INDEX FK_BIOLOGY_DESCRIPTOR_PRNT_SLF ON Biology_Descriptor_tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_DICTIONARY_TREE_PARENT
--

CREATE INDEX FK_DICTIONARY_TREE_PARENT ON DICTIONARY_TREE(PARENT_NODE_ID)
;
--
-- INDEX: IDX_ELEMENT_LOWER_LABEL
--

CREATE INDEX IDX_ELEMENT_LOWER_LABEL ON ELEMENT(LOWER("LABEL"))
;
--
-- INDEX: AK_ELEMENT_HIERARCHY
--

CREATE UNIQUE INDEX AK_ELEMENT_HIERARCHY ON ELEMENT_HIERARCHY(CHILD_ELEMENT_ID, PARENT_ELEMENT_ID, RELATIONSHIP_TYPE)
;
--
-- INDEX: FK_E_HIERARCHY_PARENT_ELEM_ID
--

CREATE INDEX FK_E_HIERARCHY_PARENT_ELEM_ID ON ELEMENT_HIERARCHY(PARENT_ELEMENT_ID)
;
--
-- INDEX: FK_E_HIERARCHY_CHILD_ELEM_ID
--

CREATE INDEX FK_E_HIERARCHY_CHILD_ELEM_ID ON ELEMENT_HIERARCHY(CHILD_ELEMENT_ID)
;
--
-- INDEX: FK_EXPERIMENT_ASSAY
--

CREATE INDEX FK_EXPERIMENT_ASSAY ON EXPERIMENT(ASSAY_ID)
;
--
-- INDEX: FK_E_CONTEXT_ITEM_EXPRMT_CNTXT
--

CREATE INDEX FK_E_CONTEXT_ITEM_EXPRMT_CNTXT ON EXPRMT_CONTEXT_ITEM(EXPRMT_CONTEXT_ID)
;
--
-- INDEX: FK_E_CONTEXT_ITEM_ATTRIBUTE
--

CREATE INDEX FK_E_CONTEXT_ITEM_ATTRIBUTE ON EXPRMT_CONTEXT_ITEM(ATTRIBUTE_ID)
;
--
-- INDEX: FK_E_CONTEXT_ITEM_VALUE
--

CREATE INDEX FK_E_CONTEXT_ITEM_VALUE ON EXPRMT_CONTEXT_ITEM(VALUE_ID)
;
--
-- INDEX: FK_EXPRMT_MEASURE_PARENT
--

CREATE INDEX FK_EXPRMT_MEASURE_PARENT ON EXPRMT_MEASURE(PARENT_CHILD_RELATIONSHIP)
;
--
-- INDEX: FK_EXPRMT_MEASURE_EXPRMT
--

CREATE INDEX FK_EXPRMT_MEASURE_EXPRMT ON EXPRMT_MEASURE(EXPERIMENT_ID)
;
--
-- INDEX: FK_EXPRMT_MEASURE_MEASURE
--

CREATE INDEX FK_EXPRMT_MEASURE_MEASURE ON EXPRMT_MEASURE(MEASURE_ID)
;
--
-- INDEX: FK_EXT_ONTOLOGY_TREE_PARENT
--

CREATE INDEX FK_EXT_ONTOLOGY_TREE_PARENT ON EXT_ONTOLOGY_TREE(PARENT_NODE_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_EXPERIMENT
--

CREATE INDEX FK_EXT_REFERENCE_EXPERIMENT ON EXTERNAL_REFERENCE(EXPERIMENT_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_EXT_SYSTEM
--

CREATE INDEX FK_EXT_REFERENCE_EXT_SYSTEM ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_PROJECT
--

CREATE INDEX FK_EXT_REFERENCE_PROJECT ON EXTERNAL_REFERENCE(PROJECT_ID)
;

create INDEX FK_EXPERIMENT_FILE_EXPERIMENT on experiment_file(experiment_id)
;


--
-- INDEX: AK_EXT_REFERENCE
--

CREATE UNIQUE INDEX AK_EXT_REFERENCE ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID, EXPERIMENT_ID, PROJECT_ID, EXT_ASSAY_REF)
;
--CREATE UNIQUE INDEX ak2_external_reference
--            ON external_reference (ext_assay_ref,
--                                   Decode(experiment_id, NULL,0,1),
--                                   Decode(project_id, NULL,0,1),
--                                   external_system_id);
--
-- INDEX: AK_FAVORITE
--

CREATE UNIQUE INDEX AK_FAVORITE ON FAVORITE(PERSON_ID, FAVORITE_NAME)
;
--
-- INDEX: FK_FAVORITE_PERSON
--

CREATE INDEX FK_FAVORITE_PERSON ON FAVORITE(PERSON_ID)
;
--
-- INDEX: IDX_IDENTIFIER_MAPPING_TARGET
--

CREATE INDEX IDX_IDENTIFIER_MAPPING_TARGET ON IDENTIFIER_MAPPING(TARGET_ID, "TABLE_NAME")
;
--
-- INDEX: FK_INSTANCE_DESCRIPTR_PRNT_SLF
--

CREATE INDEX FK_INSTANCE_DESCRIPTR_PRNT_SLF ON Instance_Descriptor_tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_MEASURE_ASSAY
--

CREATE INDEX FK_MEASURE_ASSAY ON MEASURE(ASSAY_ID)
;
--
-- INDEX: FK_MEASURE_PARENT_MEASURE_ID
--

CREATE INDEX FK_MEASURE_PARENT_MEASURE_ID ON MEASURE(PARENT_MEASURE_ID)
;
--
-- INDEX: FK_MEASURE_RESULT_TYPE
--

CREATE INDEX FK_MEASURE_RESULT_TYPE ON MEASURE(RESULT_TYPE_ID)
;
--
-- INDEX: AK_MEASURE
--

CREATE UNIQUE INDEX AK_MEASURE ON MEASURE(ASSAY_ID, RESULT_TYPE_ID, Stats_Modifier_ID, PARENT_MEASURE_ID)
;
--
-- INDEX: FK_MEASURE_STATS_MODIFIER
--

CREATE INDEX FK_MEASURE_STATS_MODIFIER ON MEASURE(Stats_Modifier_ID)
;
--
-- INDEX: IDX_MIG_ACTION
--

CREATE INDEX IDX_MIG_ACTION ON MIGRATION_ACTION(COMPLETED_ACTION)
;
--
-- INDEX: IDX_MIG_COUNT_NAME
--

CREATE INDEX IDX_MIG_COUNT_NAME ON MIGRATION_ACTION(COUNT_NAME)
;
--
-- INDEX: IDX_AID_CATEGORY
--

CREATE INDEX IDX_AID_CATEGORY ON MIGRATION_AID(BAO_ANNOTATED)
;
--
-- INDEX: IDX_AID_CENTER
--

CREATE INDEX IDX_AID_CENTER ON MIGRATION_AID(CENTER)
;
--
-- INDEX: IDX_MIG_YEAR
--

CREATE INDEX IDX_MIG_YEAR ON MIGRATION_DAY("YEAR")
;
--
-- INDEX: IDX_MIG_DATE
--

CREATE INDEX IDX_MIG_DATE ON MIGRATION_DAY(MIGRATION_DATE)
;
--
-- INDEX: IDX_MIG_MONTH
--

CREATE INDEX IDX_MIG_MONTH ON MIGRATION_DAY("MONTH")
;
--
-- INDEX: IDX_MIG_QUARTER
--

CREATE INDEX IDX_MIG_QUARTER ON MIGRATION_DAY(QUARTER)
;
--
-- INDEX: IDX_MIG_WEEK
--

CREATE INDEX IDX_MIG_WEEK ON MIGRATION_DAY(WEEK)
;
--
-- INDEX: IDX_MIG_DAY_OF_WEEK
--

CREATE INDEX IDX_MIG_DAY_OF_WEEK ON MIGRATION_DAY(DAY_OF_WEEK)
;
--
-- INDEX: IDX_MIG_ASSAY
--

CREATE INDEX IDX_MIG_ASSAY ON MIGRATION_EVENT(ASSAY_ID)
;
--
-- INDEX: IDX_MIG_EXPERIMENT
--

CREATE INDEX IDX_MIG_EXPERIMENT ON MIGRATION_EVENT(EXPERIMENT_ID)
;
--
-- INDEX: IDX_MIG_PROJECT
--

CREATE INDEX IDX_MIG_PROJECT ON MIGRATION_EVENT(PROJECT_ID)
;
--
-- INDEX: FK_EVENT_ACTION
--

CREATE INDEX FK_EVENT_ACTION ON MIGRATION_EVENT(ACTION_REF)
;
--
-- INDEX: FK_EVENT_PERSON
--

CREATE INDEX FK_EVENT_PERSON ON MIGRATION_EVENT(PERSON_REF)
;
--
-- INDEX: FK_EVENT_DAY
--

CREATE INDEX FK_EVENT_DAY ON MIGRATION_EVENT(DAY_REF)
;
--
-- INDEX: IDX_MIG_PERSON
--

CREATE INDEX IDX_MIG_PERSON ON MIGRATION_PERSON(PERSON_NAME)
;
--
-- INDEX: FK_ONTOLOGY_ITEM_ONTOLOGY
--

CREATE INDEX FK_ONTOLOGY_ITEM_ONTOLOGY ON ONTOLOGY_ITEM(ONTOLOGY_ID)
;
--
-- INDEX: FK_ONTOLOGY_ITEM_ELEMENT
--

CREATE INDEX FK_ONTOLOGY_ITEM_ELEMENT ON ONTOLOGY_ITEM(ELEMENT_ID)
;
--
-- INDEX: AK_PERSON
--

CREATE UNIQUE INDEX AK_PERSON ON PERSON(USERNAME)
;
CREATE UNIQUE INDEX AK_PERSON_email ON PERSON(email_address)
;
--
-- INDEX: AK_PERSON_ROLE
--

CREATE UNIQUE INDEX AK_PERSON_ROLE ON PERSON_ROLE(ROLE_ID, PERSON_ID)
;
--
-- INDEX: FK_PERSON_ROLE_PERSON
--

CREATE INDEX FK_PERSON_ROLE_PERSON ON PERSON_ROLE(PERSON_ID)
;
--
-- INDEX: FK_PERSON_ROLE_ROLE
--

CREATE INDEX FK_PERSON_ROLE_ROLE ON PERSON_ROLE(ROLE_ID)
;
--
-- INDEX: FK_PRJ_EXPRMT_CNTXT_PRJ_EXPRMT
--

CREATE INDEX FK_PRJ_EXPRMT_CNTXT_PRJ_EXPRMT ON PRJCT_EXPRMT_CONTEXT(PROJECT_EXPERIMENT_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_CNTXT_ITM_ATTR
--

CREATE INDEX FK_PRJCT_EXPRMT_CNTXT_ITM_ATTR ON prjct_exprmt_cntxt_ITEM(ATTRIBUTE_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_CNTXT_ITM_VAL
--

CREATE INDEX FK_PRJCT_EXPRMT_CNTXT_ITM_VAL ON prjct_exprmt_cntxt_ITEM(VALUE_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_CNTXT_ITM_CNTX
--

CREATE INDEX FK_PRJCT_EXPRMT_CNTXT_ITM_CNTX ON prjct_exprmt_cntxt_ITEM(PRJCT_EXPRMT_CONTEXT_ID)
;
--
-- INDEX: FK_PRJCT_CNTXT_ITEM_ATTRIBUTE
--

CREATE INDEX FK_PRJCT_CNTXT_ITEM_ATTRIBUTE ON Project_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_PRJCT_CNTXT_ITEM_VALUE
--

CREATE INDEX FK_PRJCT_CNTXT_ITEM_VALUE ON Project_Context_Item(VALUE_ID)
;
--
-- INDEX: FK_PRJCT_CNTXT_ITEM_PRCT_CNTXT
--

CREATE INDEX FK_PRJCT_CNTXT_ITEM_PRCT_CNTXT ON Project_Context_Item(PROJECT_CONTEXT_ID)
;
--
-- INDEX: FK_PROJECT_DOCUMENT_PROJECT
--

CREATE INDEX FK_PROJECT_DOCUMENT_PROJECT ON PROJECT_DOCUMENT(PROJECT_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_EXPERIMENT
--

CREATE INDEX FK_PRJCT_EXPRMT_EXPERIMENT ON PROJECT_EXPERIMENT(EXPERIMENT_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_PROJECT
--

CREATE INDEX FK_PRJCT_EXPRMT_PROJECT ON PROJECT_EXPERIMENT(PROJECT_ID)
;
--
-- INDEX: FK_PRJCT_EXPRMT_STAGE
--

CREATE INDEX FK_PRJCT_EXPRMT_STAGE ON PROJECT_EXPERIMENT(STAGE_ID)
;
--
-- INDEX: FK_PRJCT_STEP_NXT_PRJCT_EXPRMT
--

CREATE INDEX FK_PRJCT_STEP_NXT_PRJCT_EXPRMT ON Project_Step(NEXT_PROJECT_EXPERIMENT_ID)
;
--
-- INDEX: FK_PRJCT_STEP_PRV_PRJCT_EXPRMT
--

CREATE INDEX FK_PRJCT_STEP_PRV_PRJCT_EXPRMT ON Project_Step(PREV_PROJECT_EXPERIMENT_ID)
;
--
-- INDEX: FK_RESULT_EXPERIMENT
--

CREATE BITMAP INDEX FK_RESULT_EXPERIMENT ON RESULT(EXPERIMENT_ID)
;
--
-- INDEX: FK_RESULT_RESULT_TYPE
--

CREATE BITMAP INDEX FK_RESULT_RESULT_TYPE ON RESULT(RESULT_TYPE_ID)
;
--
-- INDEX: FK_RESULT_STATS_MODIFIER
--

CREATE INDEX FK_RESULT_STATS_MODIFIER ON RESULT(STATS_MODIFIER_ID)
;
--
-- INDEX: FK_RESULT_VALUE
--

CREATE INDEX FK_RESULT_VALUE ON RESULT(VALUE_ID)
;
--
-- INDEX: FK_RESULT_TYPE_PARENT_SELF
--

CREATE INDEX FK_RESULT_TYPE_PARENT_SELF ON Result_type_tree(Parent_node_id)
;
--
-- INDEX: AK_ROLE
--

CREATE UNIQUE INDEX AK_ROLE ON "ROLE"(AUTHORITY)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_ATTRIBUTE
--

CREATE INDEX FK_R_CONTEXT_ITEM_ATTRIBUTE ON Rslt_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_VALUE
--

CREATE INDEX FK_R_CONTEXT_ITEM_VALUE ON Rslt_Context_Item(VALUE_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_RESULT
--

CREATE INDEX FK_R_CONTEXT_ITEM_RESULT ON Rslt_Context_Item(RESULT_ID)
;
--
-- INDEX: IDX_R_CONTEXT_ITEM_EXT_VAL
--

CREATE INDEX IDX_R_CONTEXT_ITEM_EXT_VAL ON Rslt_Context_Item(EXT_VALUE_ID)
;
--
-- INDEX: FK_STATS_MODIFIER_PARENT
--

CREATE INDEX FK_STATS_MODIFIER_PARENT ON STATS_MODIFIER_TREE(PARENT_NODE_ID)
;
--
-- INDEX: FK_STEP_ITEM_VALUE
--

CREATE INDEX FK_STEP_ITEM_VALUE ON STEP_CONTEXT_ITEM(VALUE_ID)
;
--
-- INDEX: IDX_STEP_ITEM_IDX_VAL
--

CREATE INDEX IDX_STEP_ITEM_IDX_VAL ON STEP_CONTEXT_ITEM(EXT_VALUE_ID)
;
--
-- INDEX: FK_STEP_ITEM_STEP_CONTEXT
--

CREATE INDEX FK_STEP_ITEM_STEP_CONTEXT ON STEP_CONTEXT_ITEM(STEP_CONTEXT_ID)
;
--
-- INDEX: FK_STEP_ITEM_ATTRIBUTE
--

CREATE INDEX FK_STEP_ITEM_ATTRIBUTE ON STEP_CONTEXT_ITEM(ATTRIBUTE_ID)
;
--
-- INDEX: AK_TEAM
--

CREATE UNIQUE INDEX AK_TEAM ON TEAM(TEAM_NAME)
;
--
-- INDEX: AK_TEAM_MEMBER
--

CREATE UNIQUE INDEX AK_TEAM_MEMBER ON TEAM_MEMBER(TEAM_ID, PERSON_ROLE_ID)
;
--
-- INDEX: FK_TEAM_MEMBER_TEAM
--

CREATE INDEX FK_TEAM_MEMBER_TEAM ON TEAM_MEMBER(TEAM_ID)
;
--
-- INDEX: FK_TEAM_MEMBER_PERSON_ROLE
--

CREATE INDEX FK_TEAM_MEMBER_PERSON_ROLE ON TEAM_MEMBER(PERSON_ROLE_ID)
;
--
-- INDEX: AK_TREE_ROOT_NAME
--

CREATE UNIQUE INDEX AK_TREE_ROOT_NAME ON TREE_ROOT(TREE_NAME)
;
--
-- INDEX: FK_TREE_ROOT_ELEMENT
--

CREATE INDEX FK_TREE_ROOT_ELEMENT ON TREE_ROOT(ELEMENT_ID)
;
--
-- INDEX: FK_UNIT_PARENT_SELF
--

CREATE INDEX FK_UNIT_PARENT_SELF ON Unit_tree(PARENT_NODE_ID)
;
--
-- TABLE: ELEMENT
--

ALTER TABLE ELEMENT ADD
    CONSTRAINT AK_ELEMENT_LABEL UNIQUE (LABEL)
;

--
-- TABLE: UNIT_CONVERSION
--

ALTER TABLE UNIT_CONVERSION ADD
    CONSTRAINT AK_UNIT_CONVERSION UNIQUE (FROM_UNIT_ID, TO_UNIT_ID)
;

--
-- TABLE: Assay_Context
--

ALTER TABLE Assay_Context ADD CONSTRAINT FK_Assay_Context_Assay
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;


--
-- TABLE: Assay_Context_Item
--

ALTER TABLE Assay_Context_Item ADD CONSTRAINT FK_A_context_Item_A_Context
    FOREIGN KEY (Assay_Context_ID)
    REFERENCES Assay_Context(Assay_Context_ID)
;

ALTER TABLE Assay_Context_Item ADD CONSTRAINT FK_A_context_item_attribute
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Assay_Context_Item ADD CONSTRAINT FK_A_CONTEXT_ITEM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: ASSAY_CONTEXT_MEASURE
--

ALTER TABLE ASSAY_CONTEXT_MEASURE ADD CONSTRAINT FK_ACM_ASSAY_CONTEXT
    FOREIGN KEY (Assay_Context_ID)
    REFERENCES Assay_Context(Assay_Context_ID) ON DELETE CASCADE
;

ALTER TABLE ASSAY_CONTEXT_MEASURE ADD CONSTRAINT FK_ACM_MEASURE
    FOREIGN KEY (MEASURE_ID)
    REFERENCES MEASURE(MEASURE_ID) ON DELETE CASCADE
;


--
-- TABLE: Assay_Descriptor_Tree
--

ALTER TABLE Assay_Descriptor_Tree ADD CONSTRAINT FK_ASSAY_DESCRIPTOR_PARENT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Assay_Descriptor_Tree(NODE_ID)
;


--
-- TABLE: ASSAY_DOCUMENT
--

ALTER TABLE ASSAY_DOCUMENT ADD CONSTRAINT FK_Assay_document_assay
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;


--
-- TABLE: BARD_Tree
--

ALTER TABLE BARD_Tree ADD CONSTRAINT FK_BARD_TREE_PARENT
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES BARD_Tree(NODE_ID)
;


--
-- TABLE: Biology_Descriptor_tree
--

ALTER TABLE Biology_Descriptor_tree ADD CONSTRAINT FK_BIOLOGY_DESCRIPTOR_PRNT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Biology_Descriptor_tree(NODE_ID)
;


--
-- TABLE: DICTIONARY_TREE
--

ALTER TABLE DICTIONARY_TREE ADD CONSTRAINT FK_DICTIONARY_TREE_PARENT
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES DICTIONARY_TREE(NODE_ID)
;


--
-- TABLE: ELEMENT
--

ALTER TABLE ELEMENT ADD CONSTRAINT FK_Element_Unit
    FOREIGN KEY (UNIT_ID)
    REFERENCES ELEMENT(ELEMENT_ID)  DEFERRABLE INITIALLY DEFERRED
;


--
-- TABLE: ELEMENT_HIERARCHY
--

ALTER TABLE ELEMENT_HIERARCHY ADD CONSTRAINT FK_E_HIERARCHY_CHILD_ELEM_ID
    FOREIGN KEY (CHILD_ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;

ALTER TABLE ELEMENT_HIERARCHY ADD CONSTRAINT FK_E_HIERARCHY_PARENT_ELEM_ID
    FOREIGN KEY (PARENT_ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;


--
-- TABLE: EXPERIMENT
--

ALTER TABLE EXPERIMENT ADD CONSTRAINT FK_EXPERIMENT_ASSAY
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;

ALTER TABLE experiment_file ADD CONSTRAINT FK_EXPERIMENT_FILE_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;


--
-- TABLE: EXPRMT_CONTEXT
--

ALTER TABLE EXPRMT_CONTEXT ADD CONSTRAINT FK_E_CNTXT_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;


--
-- TABLE: EXPRMT_CONTEXT_ITEM
--

ALTER TABLE EXPRMT_CONTEXT_ITEM ADD CONSTRAINT FK_E_CNTXT_ITM_ATTRIBUTE
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE EXPRMT_CONTEXT_ITEM ADD CONSTRAINT FK_E_CNTXT_ITM_EXPRMT_CNTXT
    FOREIGN KEY (EXPRMT_CONTEXT_ID)
    REFERENCES EXPRMT_CONTEXT(EXPRMT_CONTEXT_ID)
;

ALTER TABLE EXPRMT_CONTEXT_ITEM ADD CONSTRAINT FK_E_CNTXT_ITM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: EXPRMT_MEASURE
--

ALTER TABLE EXPRMT_MEASURE ADD CONSTRAINT FK_EXPRMT_MEASURE_EXPRMT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE EXPRMT_MEASURE ADD CONSTRAINT FK_EXPRMT_MEASURE_MEASURE
    FOREIGN KEY (MEASURE_ID)
    REFERENCES MEASURE(MEASURE_ID)
;

ALTER TABLE EXPRMT_MEASURE ADD CONSTRAINT FK_EXPRMT_MEASURE_PARENT
    FOREIGN KEY (PARENT_EXPRMT_MEASURE_ID)
    REFERENCES EXPRMT_MEASURE(EXPRMT_MEASURE_ID)  DEFERRABLE INITIALLY DEFERRED
;

--
-- TABLE: EXT_ONTOLOGY_Tree
--

ALTER TABLE EXT_ONTOLOGY_Tree ADD CONSTRAINT FK_EXT_ONTOLOGY_TREE_PARENT
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES EXT_ONTOLOGY_Tree(NODE_ID)
;



--
-- TABLE: EXTERNAL_REFERENCE
--

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXT_SYSTEM
    FOREIGN KEY (EXTERNAL_SYSTEM_ID)
    REFERENCES EXTERNAL_SYSTEM(EXTERNAL_SYSTEM_ID)
;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: FAVORITE
--

ALTER TABLE FAVORITE ADD CONSTRAINT FK_FAVORITE_PERSON
    FOREIGN KEY (PERSON_ID)
    REFERENCES PERSON(PERSON_ID)
;


--
-- TABLE: Instance_Descriptor_tree
--

ALTER TABLE Instance_Descriptor_tree ADD CONSTRAINT FK_INSTANCE_DESCRIPTR_PRNT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Instance_Descriptor_tree(NODE_ID)
;


--
-- TABLE: Laboratory_tree
--

ALTER TABLE Laboratory_tree ADD CONSTRAINT FK_LABORATORY_PARENT_NODE_ID
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Laboratory_tree(NODE_ID)
;


--
-- TABLE: MEASURE
--

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_ASSAY
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_Measure_Element_Unit
    FOREIGN KEY (ENTRY_UNIT_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_PARENT_MEASURE_ID
    FOREIGN KEY (PARENT_MEASURE_ID)
    REFERENCES MEASURE(MEASURE_ID)  DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_RESULT_TYPE
    FOREIGN KEY (RESULT_TYPE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_STATS_MODIFIER
    FOREIGN KEY (Stats_Modifier_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: MIGRATION_EVENT
--

ALTER TABLE MIGRATION_EVENT ADD CONSTRAINT FK_EVENT_ACTION
    FOREIGN KEY (ACTION_REF)
    REFERENCES MIGRATION_ACTION(ACTION_REF)
;

ALTER TABLE MIGRATION_EVENT ADD CONSTRAINT FK_EVENT_DAY
    FOREIGN KEY (DAY_REF)
    REFERENCES MIGRATION_DAY(DAY_REF)
;

ALTER TABLE MIGRATION_EVENT ADD CONSTRAINT FK_EVENT_PERSON
    FOREIGN KEY (PERSON_REF)
    REFERENCES MIGRATION_PERSON(PERSON_REF)
;


--
-- TABLE: ONTOLOGY_ITEM
--

ALTER TABLE ONTOLOGY_ITEM ADD CONSTRAINT FK_ONTOLOGY_ITEM_ELEMENT
    FOREIGN KEY (ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;

ALTER TABLE ONTOLOGY_ITEM ADD CONSTRAINT FK_ONTOLOGY_ITEM_ONTOLOGY
    FOREIGN KEY (ONTOLOGY_ID)
    REFERENCES ONTOLOGY(ONTOLOGY_ID)
;


--
-- TABLE: PERSON_ROLE
--

ALTER TABLE PERSON ADD CONSTRAINT ck_person_email_address
    CHECK (email_address LIKE '%@%.%')
;

ALTER TABLE PERSON_ROLE ADD CONSTRAINT FK_PERSON_ROLE_PERSON
    FOREIGN KEY (PERSON_ID)
    REFERENCES PERSON(PERSON_ID)
;

ALTER TABLE PERSON_ROLE ADD CONSTRAINT FK_PERSON_ROLE_ROLE
    FOREIGN KEY (ROLE_ID)
    REFERENCES "ROLE"(ROLE_ID)
;



--
-- TABLE: PRJCT_EXPRMT_CONTEXT
--

ALTER TABLE PRJCT_EXPRMT_CONTEXT ADD CONSTRAINT FK_PRJ_EXPT_CNTXT_PRJ_EXPRMT
    FOREIGN KEY (PROJECT_EXPERIMENT_ID)
    REFERENCES PROJECT_EXPERIMENT(PROJECT_EXPERIMENT_ID)
;


--
-- TABLE: prjct_exprmt_cntxt_ITEM
--

ALTER TABLE prjct_exprmt_cntxt_ITEM ADD CONSTRAINT FK_PRJ_EXPT_CNTXT_ITM_ATTR
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE prjct_exprmt_cntxt_ITEM ADD CONSTRAINT FK_PRJ_EXPT_CNTXT_ITM_PRJ_EXPT
    FOREIGN KEY (PRJCT_EXPRMT_CONTEXT_ID)
    REFERENCES PRJCT_EXPRMT_CONTEXT(PRJCT_EXPRMT_CONTEXT_ID)
;

ALTER TABLE prjct_exprmt_cntxt_ITEM ADD CONSTRAINT FK_PRJ_EXPT_CNTXT_ITM_VAL
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: PROJECT_CONTEXT
--

ALTER TABLE PROJECT_CONTEXT ADD CONSTRAINT FK_PRJCT_CNTXT_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: Project_Context_Item
--

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PRJCT_CNTXT_ITEM_ATTRIBUTE
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PRJCT_CNTXT_ITEM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PRJCT_CNTXT_ITM_PRJCT_CNTXT
    FOREIGN KEY (PROJECT_CONTEXT_ID)
    REFERENCES PROJECT_CONTEXT(PROJECT_CONTEXT_ID)
;


--
-- TABLE: PROJECT_DOCUMENT
--

ALTER TABLE PROJECT_DOCUMENT ADD CONSTRAINT FK_PROJECT_DOCUMENT_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: PROJECT_EXPERIMENT
--

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PRJCT_EXPRMT_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PRJCT_EXPRMT_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;

ALTER TABLE PROJECT_EXPERIMENT ADD CONSTRAINT FK_PRJCT_EXPRMT_STAGE
    FOREIGN KEY (STAGE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: Project_Step
--

ALTER TABLE Project_Step ADD CONSTRAINT FK_PRJCT_STEP_NXT_PRJCT_EXPRMT
    FOREIGN KEY (NEXT_PROJECT_EXPERIMENT_ID)
    REFERENCES PROJECT_EXPERIMENT(PROJECT_EXPERIMENT_ID)
;

ALTER TABLE Project_Step ADD CONSTRAINT FK_PRJCT_STEP_PRV_PRJCT_EXPRMT
    FOREIGN KEY (PREV_PROJECT_EXPERIMENT_ID)
    REFERENCES PROJECT_EXPERIMENT(PROJECT_EXPERIMENT_ID)
;


--
-- TABLE: RESULT
--

ALTER TABLE RESULT ADD CONSTRAINT FK_RESULT_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE RESULT ADD CONSTRAINT FK_Result_Result_Type
    FOREIGN KEY (RESULT_TYPE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE RESULT ADD CONSTRAINT FK_Result_Value
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE RESULT ADD CONSTRAINT FK_RESULT_STATS_MODIFIER
    FOREIGN KEY (STATS_MODIFIER_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: Result_type_tree
--

ALTER TABLE Result_type_tree ADD CONSTRAINT FK_Result_Type_Parent_Self
    FOREIGN KEY (Parent_node_id)
    REFERENCES Result_type_tree(NODE_ID)
;


--
-- TABLE: Rslt_Context_Item
--

ALTER TABLE RESULT ADD CONSTRAINT PK_RESULT
    PRIMARY KEY (RESULT_ID)
;

    ALTER TABLE Rslt_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_ATTRIBUTE
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Rslt_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_RESULT
    FOREIGN KEY (RESULT_ID)
    REFERENCES RESULT(RESULT_ID)
;

ALTER TABLE Rslt_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: Stage_tree
--

ALTER TABLE Stage_tree ADD CONSTRAINT FK_STAGE_PARENT_NODE_ID
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Stage_tree(NODE_ID)
;


--
-- TABLE: STATS_MODIFIER_TREE
--

ALTER TABLE STATS_MODIFIER_TREE ADD CONSTRAINT FK_STATS_MODIFIER_PARENT
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES STATS_MODIFIER_TREE(NODE_ID)
;


--
-- TABLE: STEP_CONTEXT
--

ALTER TABLE STEP_CONTEXT ADD CONSTRAINT FK_STEP_CNTXT_STEP
    FOREIGN KEY (Project_Step_ID)
    REFERENCES Project_Step(Project_Step_ID)
;


--
-- TABLE: STEP_CONTEXT_ITEM
--

ALTER TABLE STEP_CONTEXT_ITEM ADD CONSTRAINT FK_STEP_CNTXT_ITEM_ATTR
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE STEP_CONTEXT_ITEM ADD CONSTRAINT FK_STEP_CNTXT_ITEM_VALUE
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE STEP_CONTEXT_ITEM ADD CONSTRAINT FK_STEP_CNTXT_ITM_STEP_CNTXT
    FOREIGN KEY (STEP_CONTEXT_ID)
    REFERENCES STEP_CONTEXT(STEP_CONTEXT_ID)
;


--
-- TABLE: TEAM_MEMBER
--

ALTER TABLE TEAM_MEMBER ADD CONSTRAINT FK_TEAM_MEMBER_MEMBER_ROLE
    FOREIGN KEY (PERSON_ROLE_ID)
    REFERENCES PERSON_ROLE(PERSON_ROLE_ID)
;

ALTER TABLE TEAM_MEMBER ADD CONSTRAINT FK_TEAM_MEMBER_TEAM
    FOREIGN KEY (TEAM_ID)
    REFERENCES TEAM(TEAM_ID)
;


--
-- TABLE: TREE_ROOT
--

ALTER TABLE TREE_ROOT ADD CONSTRAINT FK_TREE_ROOT_ELEMENT
    FOREIGN KEY (ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: UNIT_CONVERSION
--

ALTER TABLE UNIT_CONVERSION ADD CONSTRAINT FK_UNIT_CONVERSN_FRM_UNT_ELMNT
    FOREIGN KEY (FROM_UNIT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;

ALTER TABLE UNIT_CONVERSION ADD CONSTRAINT FK_UNIT_CONVERSN_TO_UNT_ELMNT
    FOREIGN KEY (TO_UNIT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;


--
-- TABLE: Unit_tree
--

ALTER TABLE Unit_tree ADD CONSTRAINT FK_UNIT_PARENT_SELF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Unit_tree(NODE_ID)
;


--------------------------------------------------------------------------------------
-- packages and procedures

-------------------------------------------
-- set up for auditing
CREATE OR REPLACE package p_pbs_context is
--
-- This package contains procedures that handle the application context.
--
-- Install this package in the PBS schema.
--

-- We are not using the application context more, because there are mulitple
-- PBS schemas in the same Oracle instances.  They cannot use the same
-- global database context.

--C_CONTEXT_NAME    constant varchar2(30) := 'CTX_PBS_SECURITY';

procedure set_username(i_username varchar2);

--
-- Removes the username from the context.
--
procedure clear_username;

--
-- Returns the username set in the context, always in lowercase. Or null if not set.
--
function  get_username return varchar2;

--
-- Enables Sammple VPD in CBIP and sets the context username.
--
-- Unlike result DB or gene data, CBIP cannot have a permanent VPD on the SAMPLE table.
-- There are only a small number of operations that require VPD. So VPD must be turned
-- on before the operations and off afterwards.
--
procedure enable_cbip_sample_vpd(i_username varchar2);

--
-- Disables Sample VPD in CBIP and clears the username.
--
procedure disable_cbip_sample_vpd;

--
-- Returns true if the Sample VPD is enabled in CBIP
--
function is_cbip_sample_vpd_enabled return boolean;

end;
/


CREATE OR REPLACE package body p_pbs_context is

--
-- package scope variables
--

v_username         varchar2(100) := null;
v_cbip_sample_vpd  boolean := false;

--
-- Forward declarations
--

procedure set_username(i_username varchar2) is

	i	integer;

begin

	i := instr(i_username, '@');
	if i = 0 then
		v_username := i_username;
	else
		v_username :=  substr(i_username, 1, i-1);	-- handle email address
	end if;

end;

procedure clear_username is
begin

	v_username := null;

end;

function get_username return varchar2 is
begin

	return lower(v_username);

end;

procedure enable_cbip_sample_vpd(i_username varchar2) is
begin

	set_username(i_username);
	v_cbip_sample_vpd := true;

end;

--
-- Disables Sample VPD in CBIP and clears the username.
--
procedure disable_cbip_sample_vpd is
begin

	clear_username;
	v_cbip_sample_vpd := false;

end;

--
-- Returns true if the Sample VPD is enabled in CBIP
--
function is_cbip_sample_vpd_enabled return boolean is
begin

	return v_cbip_sample_vpd;

end;

end;
/


