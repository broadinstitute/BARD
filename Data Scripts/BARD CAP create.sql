--
-- ER/Studio Data Architect 9.1 SQL Code Generation
-- Project :      CAP and Data entry.DM1
--
-- Date Created : Friday, August 24, 2012 10:55:38
-- Target DBMS : Oracle 11g
--

DROP VIEW ASSAY_ELEMENT
;
DROP VIEW BIOLOGY_ELEMENT
;
DROP VIEW INSTANCE_ELEMENT
;
DROP VIEW LABORATORY_ELEMENT
;
DROP VIEW RESULT_TYPE_ELEMENT
;
DROP VIEW STAGE_ELEMENT
;
DROP VIEW UNIT_ELEMENT
;
DROP TABLE ASSAY CASCADE CONSTRAINTS
;
DROP TABLE Assay_Context CASCADE CONSTRAINTS
;
DROP TABLE Assay_Context_Item CASCADE CONSTRAINTS
;
DROP TABLE Assay_Descriptor_Tree CASCADE CONSTRAINTS
;
--DROP TABLE measure_Context CASCADE CONSTRAINTS
--;
--DROP TABLE measure_Context_Item CASCADE CONSTRAINTS
--;
--DROP TABLE Assay_Descriptor CASCADE CONSTRAINTS
--;
DROP TABLE ASSAY_DOCUMENT CASCADE CONSTRAINTS
;
DROP TABLE Biology_Descriptor_tree CASCADE CONSTRAINTS
;
--DROP TABLE Biology_Descriptor CASCADE CONSTRAINTS
--;
DROP TABLE DATABASECHANGELOG CASCADE CONSTRAINTS
;
DROP TABLE DATABASECHANGELOGLOCK CASCADE CONSTRAINTS
;
DROP TABLE ELEMENT CASCADE CONSTRAINTS
;
DROP TABLE ELEMENT_HIERARCHY CASCADE CONSTRAINTS
;
DROP TABLE ERROR_LOG CASCADE CONSTRAINTS
;
DROP TABLE EXPERIMENT CASCADE CONSTRAINTS
;
DROP TABLE EXTERNAL_REFERENCE CASCADE CONSTRAINTS
;
DROP TABLE EXTERNAL_SYSTEM CASCADE CONSTRAINTS
;
DROP TABLE IDENTIFIER_MAPPING CASCADE CONSTRAINTS
;
DROP TABLE Instance_Descriptor_tree CASCADE CONSTRAINTS
;
DROP TABLE Laboratory_tree CASCADE CONSTRAINTS
;
--DROP TABLE Instance_Descriptor CASCADE CONSTRAINTS
--;
--DROP TABLE Laboratory CASCADE CONSTRAINTS
--;
DROP TABLE MEASURE CASCADE CONSTRAINTS
;
DROP TABLE ONTOLOGY CASCADE CONSTRAINTS
;
DROP TABLE ONTOLOGY_ITEM CASCADE CONSTRAINTS
;
DROP TABLE PROJECT CASCADE CONSTRAINTS
;
DROP TABLE Project_Context_Item CASCADE CONSTRAINTS
;
DROP TABLE PROJECT_DOCUMENT CASCADE CONSTRAINTS
;
DROP TABLE Project_Step CASCADE CONSTRAINTS
;
--DROP TABLE Project_Step_Item CASCADE CONSTRAINTS
--;
--DROP TABLE Project_Experiment CASCADE CONSTRAINTS
--;
DROP TABLE RESULT CASCADE CONSTRAINTS
;
DROP TABLE RESULT_HIERARCHY CASCADE CONSTRAINTS
;
DROP TABLE Result_type_tree CASCADE CONSTRAINTS
;
DROP TABLE Run_Context_Item CASCADE CONSTRAINTS
;
DROP TABLE Stage_tree CASCADE CONSTRAINTS
;
--DROP TABLE Result_type CASCADE CONSTRAINTS
--;
--DROP TABLE Result_Context_Item CASCADE CONSTRAINTS
--;
--DROP TABLE Stage CASCADE CONSTRAINTS
--;
DROP TABLE STATEMENT_LOG CASCADE CONSTRAINTS
;
DROP TABLE SUBSTANCE CASCADE CONSTRAINTS
;
DROP TABLE TREE_ROOT CASCADE CONSTRAINTS
;
DROP TABLE UNIT_CONVERSION CASCADE CONSTRAINTS
;
DROP TABLE Unit_tree CASCADE CONSTRAINTS
;
--DROP TABLE Unit CASCADE CONSTRAINTS
--;
DROP SEQUENCE ASSAY_CONTEXT_ID_SEQ
;
DROP SEQUENCE ASSAY_CONTEXT_ITEM_ID_SEQ
;
--DROP SEQUENCE measure_CONTEXT_ID_SEQ
--;
--DROP SEQUENCE measure_CONTEXT_ITEM_ID_SEQ
--;
DROP SEQUENCE ASSAY_DOCUMENT_ID_SEQ
;
DROP SEQUENCE ASSAY_ID_SEQ
;
--DROP SEQUENCE BARD_ONTOLOGY_SEQ
--;
DROP SEQUENCE ELEMENT_HIERARCHY_ID_SEQ
;
DROP SEQUENCE ELEMENT_ID_SEQ
;
DROP SEQUENCE ERROR_LOG_ID_SEQ
;
DROP SEQUENCE EXPERIMENT_ID_SEQ
;
DROP SEQUENCE EXTERNAL_REFERENCE_ID_SEQ
;
DROP SEQUENCE EXTERNAL_SYSTEM_ID_SEQ
;
DROP SEQUENCE MEASURE_ID_SEQ
;
DROP SEQUENCE ONTOLOGY_ID_SEQ
;
DROP SEQUENCE ONTOLOGY_ITEM_ID_SEQ
;
DROP SEQUENCE PROJECT_CONTEXT_ITEM_ID_SEQ
;
--DROP SEQUENCE PROJECT_step_ITEM_ID_SEQ
--;
DROP SEQUENCE PROJECT_ID_SEQ
;
DROP SEQUENCE PROJECT_STEP_ID_SEQ
;
--DROP SEQUENCE PROJECT_experiment_ID_SEQ
--;
DROP SEQUENCE RESULT_ID_SEQ
;
DROP SEQUENCE RUN_CONTEXT_ITEM_ID_SEQ
;
--DROP SEQUENCE Result_CONTEXT_ITEM_ID_SEQ
--;
--
-- SEQUENCE: ASSAY_CONTEXT_ID_SEQ
--

CREATE SEQUENCE ASSAY_CONTEXT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE ASSAY_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_DOCUMENT_ID_SEQ
--

CREATE SEQUENCE ASSAY_DOCUMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ASSAY_ID_SEQ
--

CREATE SEQUENCE ASSAY_ID_SEQ
    START WITH 3
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

/*
--
-- SEQUENCE: BARD_ONTOLOGY_SEQ
--

DROP SEQUENCE BARD_ONTOLOGY_SEQ
;
CREATE SEQUENCE BARD_ONTOLOGY_SEQ
    START WITH 873
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 9999999
    NOCACHE
    NOORDER
;
GRANT SELECT ON bard_ontology_seq TO ontology_helper
;

*/
--
-- SEQUENCE: ELEMENT_HIERARCHY_ID_SEQ
--

CREATE SEQUENCE ELEMENT_HIERARCHY_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ELEMENT_ID_SEQ
--

CREATE SEQUENCE ELEMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ERROR_LOG_ID_SEQ
--

CREATE SEQUENCE ERROR_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXPERIMENT_ID_SEQ
--

CREATE SEQUENCE EXPERIMENT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXTERNAL_REFERENCE_ID_SEQ
--

CREATE SEQUENCE EXTERNAL_REFERENCE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: EXTERNAL_SYSTEM_ID_SEQ
--

CREATE SEQUENCE EXTERNAL_SYSTEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE  20
    NOORDER
;

--
-- SEQUENCE: MEASURE_ID_SEQ
--

CREATE SEQUENCE MEASURE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ONTOLOGY_ID_SEQ
--

CREATE SEQUENCE ONTOLOGY_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: ONTOLOGY_ITEM_ID_SEQ
--

CREATE SEQUENCE ONTOLOGY_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE PROJECT_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_ID_SEQ
--

CREATE SEQUENCE PROJECT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: PROJECT_STEP_ID_SEQ
--

CREATE SEQUENCE PROJECT_STEP_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- SEQUENCE: RESULT_ID_SEQ
--

CREATE SEQUENCE RESULT_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 10000
    NOORDER
;

--
-- SEQUENCE: RUN_CONTEXT_ITEM_ID_SEQ
--

CREATE SEQUENCE RUN_CONTEXT_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    MAXVALUE 2147483648
    NOCYCLE
    CACHE 20
    NOORDER
;

--
-- TABLE: ASSAY
--

CREATE TABLE ASSAY(
    ASSAY_ID                NUMBER(19, 0)     NOT NULL,
    ASSAY_STATUS            VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    ASSAY_TITLE             VARCHAR2(250)     DEFAULT ' ' NOT NULL,
    ASSAY_NAME              VARCHAR2(1000 CHAR) NOT NULL,
    ASSAY_VERSION           VARCHAR2(10)      DEFAULT 1 NOT NULL,
    ASSAY_TYPE              VARCHAR2(20)      DEFAULT 'Regular' NOT NULL,
    DESIGNED_BY             VARCHAR2(100),
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_ASSAY_STATUS CHECK (Assay_Status IN ('Pending', 'Active', 'Superseded', 'Retired')),
    CONSTRAINT CK_ASSAY_EXTRACTION CHECK (ready_for_extraction IN ('Pending', 'Ready', 'Started', 'Complete')),
    CONSTRAINT CK_ASSAY_TYPE CHECK (Assay_Type IN ('Regular', 'Panel - Array', 'Panel - Group', 'Template', 'Admin Template')),
    CONSTRAINT PK_ASSAY PRIMARY KEY (ASSAY_ID)
)
;



GRANT SELECT ON ASSAY TO BALEXAND
;
GRANT SELECT ON ASSAY TO BARD_CI
;
GRANT SELECT ON ASSAY TO BARD_DEV
;
GRANT SELECT ON ASSAY TO BARD_QA
;
GRANT SELECT ON ASSAY TO DDURKIN
;
GRANT SELECT ON ASSAY TO DLAHR_BARD
;
GRANT SELECT ON ASSAY TO DSTONICH
;
GRANT SELECT ON ASSAY TO JASIEDU
;
GRANT SELECT ON ASSAY TO SBRUDZ
;
GRANT SELECT ON ASSAY TO SCHATWIN
;
GRANT SELECT ON ASSAY TO SOUTHERN
;
GRANT SELECT ON ASSAY TO YCRUZ
;

--
-- TABLE: Assay_Context
--

CREATE TABLE Assay_Context(
    Assay_Context_ID    NUMBER(19, 0)    NOT NULL,
    ASSAY_ID            NUMBER(19, 0)    NOT NULL,
    CONTEXT_NAME        VARCHAR2(128)    NOT NULL,
    VERSION             NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created        TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT PK_Assay_Context PRIMARY KEY (Assay_Context_ID)
)
;



COMMENT ON COLUMN Assay_Context.CONTEXT_NAME IS 'used as a title for the cards in the UI'
;
GRANT SELECT ON Assay_Context TO BALEXAND
;
GRANT SELECT ON Assay_Context TO BARD_CI
;
GRANT SELECT ON Assay_Context TO BARD_DEV
;
GRANT SELECT ON Assay_Context TO BARD_QA
;
GRANT SELECT ON ASSAY_CONTEXT TO DLAHR_BARD
;
GRANT SELECT ON Assay_Context TO DDURKIN
;
GRANT SELECT ON Assay_Context TO DSTONICH
;
GRANT SELECT ON Assay_Context TO JASIEDU
;
GRANT SELECT ON Assay_Context TO SBRUDZ
;
GRANT SELECT ON Assay_Context TO SCHATWIN
;
GRANT SELECT ON Assay_Context TO SOUTHERN
;
GRANT SELECT ON Assay_Context TO YCRUZ
;

--
-- TABLE: Assay_Context_Item
--

CREATE TABLE Assay_Context_Item(
    Assay_Context_Item_ID    NUMBER(19, 0)    NOT NULL,
    Assay_Context_ID         NUMBER(19, 0)    NOT NULL,
    DISPLAY_ORDER            NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    ATTRIBUTE_TYPE           VARCHAR2(20)     NOT NULL,
    ATTRIBUTE_ID             NUMBER(19, 0)    NOT NULL,
    QUALIFIER                CHAR(2),
    VALUE_ID                 NUMBER(19, 0),
    EXT_VALUE_ID             VARCHAR2(60),
    VALUE_DISPLAY            VARCHAR2(500),
    VALUE_NUM                FLOAT(126),
    VALUE_MIN                FLOAT(126),
    VALUE_MAX                FLOAT(126),
    VERSION                  NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created             TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT CK_ATTRIBUTE_TYPE CHECK (Attribute_Type in ('Fixed', 'List', 'Range', 'Free')),
    CONSTRAINT CK_ASSAY_CONTEXT_ITEM_QALFR CHECK (QUALIFIER IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_Assay_context_item PRIMARY KEY (Assay_Context_Item_ID)
)
;



COMMENT ON COLUMN Assay_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
GRANT SELECT ON Assay_Context_Item TO BALEXAND
;
GRANT SELECT ON Assay_Context_Item TO BARD_CI
;
GRANT SELECT ON Assay_Context_Item TO BARD_DEV
;
GRANT SELECT ON Assay_Context_Item TO BARD_QA
;
GRANT SELECT ON ASSAY_CONTEXT_ITEM TO DLAHR_BARD
;
GRANT SELECT ON Assay_Context_Item TO DDURKIN
;
GRANT SELECT ON Assay_Context_Item TO DSTONICH
;
GRANT SELECT ON Assay_Context_Item TO JASIEDU
;
GRANT SELECT ON Assay_Context_Item TO SBRUDZ
;
GRANT SELECT ON Assay_Context_Item TO SCHATWIN
;
GRANT SELECT ON Assay_Context_Item TO SOUTHERN
;
GRANT SELECT ON Assay_Context_Item TO YCRUZ
;

--
-- TABLE: Assay_Descriptor_Tree
--

CREATE TABLE Assay_Descriptor_Tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT              VARCHAR2(128),
    CONSTRAINT PK_ASSAY_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: ASSAY_DOCUMENT
--

CREATE TABLE ASSAY_DOCUMENT(
    Assay_document_ID    NUMBER(19, 0)    NOT NULL,
    ASSAY_ID             NUMBER(19, 0)    NOT NULL,
    Document_Name        VARCHAR2(500)    NOT NULL,
    DOCUMENT_TYPE        VARCHAR2(20)     DEFAULT 'Description' NOT NULL,
    DOCUMENT_CONTENT     CLOB             DEFAULT EMPTY_CLOB(),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT CK_ASSAY_DOCUMENT_TYPE CHECK (Document_Type IN ('Description', 'Protocol', 'Comments', 'Paper', 'External URL', 'Other')),
    CONSTRAINT PK_Assay_document PRIMARY KEY (Assay_document_ID)
)
;



GRANT SELECT ON ASSAY_DOCUMENT TO BALEXAND
;
GRANT SELECT ON ASSAY_DOCUMENT TO BARD_CI
;
GRANT SELECT ON ASSAY_DOCUMENT TO BARD_DEV
;
GRANT SELECT ON ASSAY_DOCUMENT TO BARD_QA
;
GRANT SELECT ON ASSAY_DOCUMENT TO DDURKIN
;
GRANT SELECT ON ASSAY_DOCUMENT TO DLAHR_BARD
;
GRANT SELECT ON ASSAY_DOCUMENT TO DSTONICH
;
GRANT SELECT ON ASSAY_DOCUMENT TO JASIEDU
;
GRANT SELECT ON ASSAY_DOCUMENT TO SBRUDZ
;
GRANT SELECT ON ASSAY_DOCUMENT TO SCHATWIN
;
GRANT SELECT ON ASSAY_DOCUMENT TO SOUTHERN
;
GRANT SELECT ON ASSAY_DOCUMENT TO YCRUZ
;

--
-- TABLE: Biology_Descriptor_tree
--

CREATE TABLE Biology_Descriptor_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT              VARCHAR2(128),
    CONSTRAINT PK_BIOLOGY_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: DATABASECHANGELOG
--

CREATE TABLE DATABASECHANGELOG(
    ID               VARCHAR2(63)     NOT NULL,
    AUTHOR           VARCHAR2(63)     NOT NULL,
    FILENAME         VARCHAR2(200)    NOT NULL,
    DATEEXECUTED     TIMESTAMP(6)     NOT NULL,
    ORDEREXECUTED    NUMBER           NOT NULL,
    EXECTYPE         VARCHAR2(10)     NOT NULL,
    MD5SUM           VARCHAR2(35),
    DESCRIPTION      VARCHAR2(255),
    COMMENTS         VARCHAR2(255),
    TAG              VARCHAR2(255),
    LIQUIBASE        VARCHAR2(20),
    CONSTRAINT PK_DATABASECHANGELOG PRIMARY KEY (ID, AUTHOR, FILENAME)
)
;



--
-- TABLE: DATABASECHANGELOGLOCK
--

CREATE TABLE DATABASECHANGELOGLOCK(
    ID             NUMBER           NOT NULL,
    LOCKED         NUMBER(1, 0)     NOT NULL,
    LOCKGRANTED    TIMESTAMP(6),
    LOCKEDBY       VARCHAR2(255),
    CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID)
)
;



--
-- TABLE: ELEMENT
--

CREATE TABLE ELEMENT(
    ELEMENT_ID              NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS          VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    LABEL                   VARCHAR2(128)     NOT NULL,
    DESCRIPTION             VARCHAR2(1000),
    ABBREVIATION            VARCHAR2(20),
    SYNONYMS                VARCHAR2(1000),
    UNIT                    VARCHAR2(128),
    BARD_URI                VARCHAR2(250),
    EXTERNAL_URL            VARCHAR2(1000),
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_ELEMENT_STATUS CHECK (Element_Status IN ('Pending', 'Published', 'Deprecated', 'Retired')),
    CONSTRAINT CK_ELEMENT_EXTRACTION CHECK (ready_for_extraction IN ('Pending', 'Ready', 'Started', 'Complete')),
    CONSTRAINT PK_ELEMENT PRIMARY KEY (ELEMENT_ID)
)
;



GRANT SELECT ON ELEMENT TO BALEXAND
;
GRANT SELECT ON ELEMENT TO BARD_CI
;
GRANT SELECT ON ELEMENT TO BARD_DEV
;
GRANT SELECT ON ELEMENT TO BARD_QA
;
GRANT SELECT ON ELEMENT TO DDURKIN
;
GRANT SELECT ON ELEMENT TO DLAHR_BARD
;
GRANT SELECT ON ELEMENT TO DSTONICH
;
GRANT SELECT ON ELEMENT TO JASIEDU
;
GRANT SELECT ON ELEMENT TO SBRUDZ
;
GRANT SELECT ON ELEMENT TO SCHATWIN
;
GRANT SELECT ON ELEMENT TO SOUTHERN
;
GRANT SELECT ON ELEMENT TO YCRUZ
;

--
-- TABLE: ELEMENT_HIERARCHY
--

CREATE TABLE ELEMENT_HIERARCHY(
    ELEMENT_HIERARCHY_ID    NUMBER(19, 0)    NOT NULL,
    PARENT_ELEMENT_ID       NUMBER(19, 0),
    CHILD_ELEMENT_ID        NUMBER(19, 0)    NOT NULL,
    RELATIONSHIP_TYPE       VARCHAR2(40)     NOT NULL,
    VERSION                 NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED            TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT PK_ELEMENT_HIERARCHY PRIMARY KEY (ELEMENT_HIERARCHY_ID)
)
;



GRANT SELECT ON ELEMENT_HIERARCHY TO BALEXAND
;
GRANT SELECT ON ELEMENT_HIERARCHY TO BARD_CI
;
GRANT SELECT ON ELEMENT_HIERARCHY TO BARD_DEV
;
GRANT SELECT ON ELEMENT_HIERARCHY TO BARD_QA
;
GRANT SELECT ON ELEMENT_HIERARCHY TO DDURKIN
;
GRANT SELECT ON ELEMENT_HIERARCHY TO DLAHR_BARD
;
GRANT SELECT ON ELEMENT_HIERARCHY TO DSTONICH
;
GRANT SELECT ON ELEMENT_HIERARCHY TO JASIEDU
;
GRANT SELECT ON ELEMENT_HIERARCHY TO SBRUDZ
;
GRANT SELECT ON ELEMENT_HIERARCHY TO SCHATWIN
;
GRANT SELECT ON ELEMENT_HIERARCHY TO SOUTHERN
;
GRANT SELECT ON ELEMENT_HIERARCHY TO YCRUZ
;

--
-- TABLE: ERROR_LOG
--

CREATE TABLE ERROR_LOG(
    ERROR_LOG_ID      NUMBER(19, 0)     NOT NULL,
    ERROR_DATE        DATE              DEFAULT sysdate NOT NULL,
    PROCEDURE_NAME    VARCHAR2(120)     NOT NULL,
    ERR_NUM           NUMBER(19, 0)     NOT NULL,
    ERR_MSG           VARCHAR2(1000),
    ERR_COMMENT       VARCHAR2(4000),
    CONSTRAINT PK_ERROR_LOG PRIMARY KEY (ERROR_LOG_ID)
)
;



GRANT SELECT ON ERROR_LOG TO SCHATWIN
;

--
-- TABLE: EXPERIMENT
--

CREATE TABLE EXPERIMENT(
    EXPERIMENT_ID           NUMBER(19, 0)     NOT NULL,
    EXPERIMENT_NAME         VARCHAR2(1000)    NOT NULL,
    EXPERIMENT_STATUS       VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    READY_FOR_EXTRACTION    VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    ASSAY_ID                NUMBER(19, 0)     NOT NULL,
    RUN_DATE_FROM           DATE,
    RUN_DATE_TO             DATE,
    HOLD_UNTIL_DATE         DATE,
    DESCRIPTION             VARCHAR2(1000),
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_EXPERIMENT_STATUS CHECK (Experiment_Status IN ('Pending', 'Approved', 'Rejected', 'Revised')),
    CONSTRAINT CK_EXPERIMENT_EXTRACTION CHECK (ready_for_extraction IN ('Pending', 'Ready', 'Started', 'Complete')),
    CONSTRAINT PK_EXPERIMENT PRIMARY KEY (EXPERIMENT_ID)
)
;



COMMENT ON COLUMN EXPERIMENT.HOLD_UNTIL_DATE IS 'can only be set a max of 1 year in the future'
;
GRANT SELECT ON EXPERIMENT TO BALEXAND
;
GRANT SELECT ON EXPERIMENT TO BARD_CI
;
GRANT SELECT ON EXPERIMENT TO BARD_DEV
;
GRANT SELECT ON EXPERIMENT TO BARD_QA
;
GRANT SELECT ON EXPERIMENT TO DDURKIN
;
GRANT SELECT ON EXPERIMENT TO DLAHR_BARD
;
GRANT SELECT ON EXPERIMENT TO DSTONICH
;
GRANT SELECT ON EXPERIMENT TO JASIEDU
;
GRANT SELECT ON EXPERIMENT TO SBRUDZ
;
GRANT SELECT ON EXPERIMENT TO SCHATWIN
;
GRANT SELECT ON EXPERIMENT TO SOUTHERN
;
GRANT SELECT ON EXPERIMENT TO YCRUZ
;

--
-- TABLE: EXTERNAL_REFERENCE
--

CREATE TABLE EXTERNAL_REFERENCE(
    EXTERNAL_REFERENCE_ID    NUMBER(19, 0)    NOT NULL,
    EXTERNAL_SYSTEM_ID       NUMBER(19, 0)    NOT NULL,
    EXPERIMENT_ID            NUMBER(19, 0),
    PROJECT_ID               NUMBER(19, 0),
    EXT_ASSAY_REF            VARCHAR2(128)    NOT NULL,
    VERSION                  NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED             TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT CK_PROJECT_EXPERIMENT_NULLS CHECK ((Project_ID is null and experiment_ID is not null)
 or
(Project_ID is not null and experiment_ID is null)),
    CONSTRAINT PK_EXTERNAL_REFERENCE PRIMARY KEY (EXTERNAL_REFERENCE_ID)
)
;



GRANT SELECT ON EXTERNAL_REFERENCE TO BALEXAND
;
GRANT SELECT ON EXTERNAL_REFERENCE TO BARD_CI
;
GRANT SELECT ON EXTERNAL_REFERENCE TO BARD_DEV
;
GRANT SELECT ON EXTERNAL_REFERENCE TO BARD_QA
;
GRANT SELECT ON EXTERNAL_REFERENCE TO DDURKIN
;
GRANT SELECT ON EXTERNAL_REFERENCE TO DLAHR_BARD
;
GRANT SELECT ON EXTERNAL_REFERENCE TO DSTONICH
;
GRANT SELECT ON EXTERNAL_REFERENCE TO JASIEDU
;
GRANT SELECT ON EXTERNAL_REFERENCE TO SBRUDZ
;
GRANT SELECT ON EXTERNAL_REFERENCE TO SCHATWIN
;
GRANT SELECT ON EXTERNAL_REFERENCE TO SOUTHERN
;
GRANT SELECT ON EXTERNAL_REFERENCE TO YCRUZ
;

--
-- TABLE: EXTERNAL_SYSTEM
--

CREATE TABLE EXTERNAL_SYSTEM(
    EXTERNAL_SYSTEM_ID    NUMBER(19, 0)     NOT NULL,
    SYSTEM_NAME           VARCHAR2(128)     NOT NULL,
    OWNER                 VARCHAR2(128),
    SYSTEM_URL            VARCHAR2(1000),
    VERSION               NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created          TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated          TIMESTAMP(6),
    MODIFIED_BY           VARCHAR2(40),
    CONSTRAINT PK_EXTERNAL_SYSTEM PRIMARY KEY (EXTERNAL_SYSTEM_ID)
)
;



GRANT SELECT ON EXTERNAL_SYSTEM TO BALEXAND
;
GRANT SELECT ON EXTERNAL_SYSTEM TO BARD_CI
;
GRANT SELECT ON EXTERNAL_SYSTEM TO BARD_DEV
;
GRANT SELECT ON EXTERNAL_SYSTEM TO BARD_QA
;
GRANT SELECT ON EXTERNAL_SYSTEM TO DDURKIN
;
GRANT SELECT ON EXTERNAL_SYSTEM TO DLAHR_BARD
;
GRANT SELECT ON EXTERNAL_SYSTEM TO DSTONICH
;
GRANT SELECT ON EXTERNAL_SYSTEM TO JASIEDU
;
GRANT SELECT ON EXTERNAL_SYSTEM TO SBRUDZ
;
GRANT SELECT ON EXTERNAL_SYSTEM TO SCHATWIN
;
GRANT SELECT ON EXTERNAL_SYSTEM TO SOUTHERN
;
GRANT SELECT ON EXTERNAL_SYSTEM TO YCRUZ
;

--
-- TABLE: IDENTIFIER_MAPPING
--

CREATE TABLE IDENTIFIER_MAPPING(
    "TABLE_NAME"     VARCHAR2(31)     NOT NULL,
    SOURCE_SCHEMA    VARCHAR2(31)     NOT NULL,
    SOURCE_ID        NUMBER(19, 0)    NOT NULL,
    TARGET_ID        NUMBER(19, 0)    NOT NULL,
    CONSTRAINT PK_IDENTIFIER_MAPPING PRIMARY KEY (SOURCE_ID, "TABLE_NAME", SOURCE_SCHEMA)
)
;



GRANT SELECT ON IDENTIFIER_MAPPING TO BALEXAND
;
GRANT SELECT ON IDENTIFIER_MAPPING TO BARD_CI
;
GRANT SELECT ON IDENTIFIER_MAPPING TO BARD_DEV
;
GRANT SELECT ON IDENTIFIER_MAPPING TO BARD_QA
;
GRANT SELECT ON IDENTIFIER_MAPPING TO DDURKIN
;
GRANT SELECT ON IDENTIFIER_MAPPING TO DLAHR_BARD
;
GRANT SELECT ON IDENTIFIER_MAPPING TO DSTONICH
;
GRANT SELECT ON IDENTIFIER_MAPPING TO JASIEDU
;
GRANT SELECT ON IDENTIFIER_MAPPING TO SBRUDZ
;
GRANT SELECT ON IDENTIFIER_MAPPING TO SCHATWIN
;
GRANT SELECT ON IDENTIFIER_MAPPING TO SOUTHERN
;
GRANT SELECT ON IDENTIFIER_MAPPING TO YCRUZ
;

--
-- TABLE: Instance_Descriptor_tree
--

CREATE TABLE Instance_Descriptor_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    ELEMENT_ID        NUMBER(19, 0)     NOT NULL,
    ELEMENT_STATUS    VARCHAR2(20)      NOT NULL,
    LABEL             VARCHAR2(128)     NOT NULL,
    DESCRIPTION       VARCHAR2(1000),
    ABBREVIATION      VARCHAR2(20),
    SYNONYMS          VARCHAR2(1000),
    EXTERNAL_URL      VARCHAR2(1000),
    UNIT              VARCHAR2(128),
    CONSTRAINT PK_INSTANCE_DESCRIPTOR PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: Laboratory_tree
--

CREATE TABLE Laboratory_tree(
    NODE_ID              NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID       NUMBER(19, 0),
    LABORATORY_ID        NUMBER(19, 0)     NOT NULL,
    LABORATORY_STATUS    VARCHAR2(20)      NOT NULL,
    LABORATORY           VARCHAR2(128)     NOT NULL,
    DESCRIPTION          VARCHAR2(1000),
    CONSTRAINT PK_LABORATORY PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: MEASURE
--

CREATE TABLE MEASURE(
    MEASURE_ID           NUMBER(19, 0)    NOT NULL,
    ASSAY_ID             NUMBER(19, 0)    NOT NULL,
    Assay_Context_ID     NUMBER(19, 0),
    PARENT_MEASURE_ID    NUMBER(19, 0),
    RESULT_TYPE_ID       NUMBER(19, 0)    NOT NULL,
    ENTRY_UNIT           VARCHAR2(128),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT PK_MEASURE PRIMARY KEY (MEASURE_ID)
)
;



GRANT SELECT ON MEASURE TO BALEXAND
;
GRANT SELECT ON MEASURE TO BARD_CI
;
GRANT SELECT ON MEASURE TO BARD_DEV
;
GRANT SELECT ON MEASURE TO BARD_QA
;
GRANT SELECT ON MEASURE TO DDURKIN
;
GRANT SELECT ON MEASURE TO DLAHR_BARD
;
GRANT SELECT ON MEASURE TO DSTONICH
;
GRANT SELECT ON MEASURE TO JASIEDU
;
GRANT SELECT ON MEASURE TO SBRUDZ
;
GRANT SELECT ON MEASURE TO SCHATWIN
;
GRANT SELECT ON MEASURE TO SOUTHERN
;
GRANT SELECT ON MEASURE TO YCRUZ
;

--
-- TABLE: ONTOLOGY
--

CREATE TABLE ONTOLOGY(
    ONTOLOGY_ID      NUMBER(19, 0)     NOT NULL,
    ONTOLOGY_NAME    VARCHAR2(256)     NOT NULL,
    ABBREVIATION     VARCHAR2(20),
    SYSTEM_URL       VARCHAR2(1000),
    VERSION          NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created     TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated     TIMESTAMP(6),
    MODIFIED_BY      VARCHAR2(40),
    CONSTRAINT PK_ONTOLOGY PRIMARY KEY (ONTOLOGY_ID)
)
;



COMMENT ON TABLE ONTOLOGY IS 'an external ontology or dictionary or other source of reference data'
;
GRANT SELECT ON ONTOLOGY TO BALEXAND
;
GRANT SELECT ON ONTOLOGY TO BARD_CI
;
GRANT SELECT ON ONTOLOGY TO BARD_DEV
;
GRANT SELECT ON ONTOLOGY TO BARD_QA
;
GRANT SELECT ON ONTOLOGY TO DDURKIN
;
GRANT SELECT ON ONTOLOGY TO DLAHR_BARD
;
GRANT SELECT ON ONTOLOGY TO DSTONICH
;
GRANT SELECT ON ONTOLOGY TO JASIEDU
;
GRANT SELECT ON ONTOLOGY TO SBRUDZ
;
GRANT SELECT ON ONTOLOGY TO SCHATWIN
;
GRANT SELECT ON ONTOLOGY TO SOUTHERN
;
GRANT SELECT ON ONTOLOGY TO YCRUZ
;

--
-- TABLE: ONTOLOGY_ITEM
--

CREATE TABLE ONTOLOGY_ITEM(
    ONTOLOGY_ITEM_ID    NUMBER(19, 0)    NOT NULL,
    ONTOLOGY_ID         NUMBER(19, 0)    NOT NULL,
    ELEMENT_ID          NUMBER(19, 0),
    ITEM_REFERENCE      VARCHAR2(20),
    VERSION             NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created        TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT PK_ONTOLOGY_ITEM PRIMARY KEY (ONTOLOGY_ITEM_ID)
)
;



COMMENT ON COLUMN ONTOLOGY_ITEM.ITEM_REFERENCE IS 'Concatenate this with the Ontology.system_URL for a full URI for the item'
;
GRANT SELECT ON ONTOLOGY_ITEM TO BALEXAND
;
GRANT SELECT ON ONTOLOGY_ITEM TO BARD_CI
;
GRANT SELECT ON ONTOLOGY_ITEM TO BARD_DEV
;
GRANT SELECT ON ONTOLOGY_ITEM TO BARD_QA
;
GRANT SELECT ON ONTOLOGY_ITEM TO DDURKIN
;
GRANT SELECT ON ONTOLOGY_ITEM TO DLAHR_BARD
;
GRANT SELECT ON ONTOLOGY_ITEM TO DSTONICH
;
GRANT SELECT ON ONTOLOGY_ITEM TO JASIEDU
;
GRANT SELECT ON ONTOLOGY_ITEM TO SBRUDZ
;
GRANT SELECT ON ONTOLOGY_ITEM TO SCHATWIN
;
GRANT SELECT ON ONTOLOGY_ITEM TO SOUTHERN
;
GRANT SELECT ON ONTOLOGY_ITEM TO YCRUZ
;

--
-- TABLE: PROJECT
--

CREATE TABLE PROJECT(
    PROJECT_ID              NUMBER(19, 0)     NOT NULL,
    PROJECT_NAME            VARCHAR2(256)     NOT NULL,
    GROUP_TYPE              VARCHAR2(20)      DEFAULT 'Project' NOT NULL,
    DESCRIPTION             VARCHAR2(1000),
    ready_for_extraction    VARCHAR2(20)      DEFAULT 'Pending' NOT NULL,
    VERSION                 NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_PROJECT_EXTRACTION CHECK (ready_for_extraction IN ('Pending', 'Ready', 'Started', 'Complete')),
    CONSTRAINT CK_PROJECT_TYPE CHECK (GROUP_TYPE in ('Project', 'Probe Report', 'Campaign', 'Panel', 'Study')),
    CONSTRAINT PK_PROJECT PRIMARY KEY (PROJECT_ID)
)
;



GRANT SELECT ON PROJECT TO BALEXAND
;
GRANT SELECT ON PROJECT TO BARD_CI
;
GRANT SELECT ON PROJECT TO BARD_DEV
;
GRANT SELECT ON PROJECT TO BARD_QA
;
GRANT SELECT ON PROJECT TO DDURKIN
;
GRANT SELECT ON PROJECT TO DLAHR_BARD
;
GRANT SELECT ON PROJECT TO DSTONICH
;
GRANT SELECT ON PROJECT TO JASIEDU
;
GRANT SELECT ON PROJECT TO SBRUDZ
;
GRANT SELECT ON PROJECT TO SCHATWIN
;
GRANT SELECT ON PROJECT TO SOUTHERN
;
GRANT SELECT ON PROJECT TO YCRUZ
;

--
-- TABLE: Project_Context_Item
--

CREATE TABLE Project_Context_Item(
    project_Context_Item_ID     NUMBER(19, 0)    NOT NULL,
    GROUP_PROJECT_CONTEXT_ID    NUMBER(19, 0),
    PROJECT_ID                  NUMBER(19, 0),
    Project_Step_ID             NUMBER(19, 0),
    DISCRIMINATOR               VARCHAR2(20)     DEFAULT 'Project' NOT NULL,
    ATTRIBUTE_ID                NUMBER(19, 0)    NOT NULL,
    VALUE_ID                    NUMBER(19, 0),
    EXT_VALUE_ID                VARCHAR2(60),
    QUALIFIER                   CHAR(2),
    VALUE_DISPLAY               VARCHAR2(500),
    VALUE_NUM                   FLOAT(126),
    VALUE_MIN                   FLOAT(126),
    VALUE_MAX                   FLOAT(126),
    VERSION                     NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED                TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED                TIMESTAMP(6),
    MODIFIED_BY                 VARCHAR2(40),
    CONSTRAINT CK_PROJECT_STEP_ITEM_QUALIFIER CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT CK_PROJ_CONTEXT_ITEM_DISCRIM CHECK ((discriminator = 'Project' AND project_id IS NOT NULL AND project_step_id IS NULL)
       OR
      (discriminator = 'Step' AND project_id IS NULL AND project_step_id IS NOT NULL)),
    CONSTRAINT PK_PROJECT_STEP_ITEM PRIMARY KEY (project_Context_Item_ID)
)
;



COMMENT ON COLUMN Project_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;

GRANT SELECT ON Project_Context_Item TO BALEXAND
;
GRANT SELECT ON Project_Context_Item TO BARD_CI
;
GRANT SELECT ON Project_Context_Item TO BARD_DEV
;
GRANT SELECT ON Project_Context_Item TO BARD_QA
;
GRANT SELECT ON Project_Context_Item TO DDURKIN
;
GRANT SELECT ON Project_Context_Item TO DLAHR_BARD
;
GRANT SELECT ON Project_Context_Item TO DSTONICH
;
GRANT SELECT ON Project_Context_Item TO JASIEDU
;
GRANT SELECT ON Project_Context_Item TO SBRUDZ
;
GRANT SELECT ON Project_Context_Item TO SCHATWIN
;
GRANT SELECT ON Project_Context_Item TO SOUTHERN
;
GRANT SELECT ON Project_Context_Item TO YCRUZ
;

--
-- TABLE: PROJECT_DOCUMENT
--

CREATE TABLE PROJECT_DOCUMENT(
    PROJECT_DOCUMENT_ID    NUMBER(19, 0)    NOT NULL,
    PROJECT_ID             NUMBER(19, 0)    NOT NULL,
    DOCUMENT_NAME          VARCHAR2(500)    NOT NULL,
    DOCUMENT_TYPE          VARCHAR2(20)     NOT NULL,
    DOCUMENT_CONTENT       CLOB,
    VERSION                NUMBER(38, 0)    NOT NULL,
    DATE_CREATED           TIMESTAMP(6)     NOT NULL,
    LAST_UPDATED           TIMESTAMP(6),
    MODIFIED_BY            VARCHAR2(40),
    CONSTRAINT CK_PROJECT_DOCUMENT_TYPE CHECK (DOCUMENT_TYPE IN ('Description', 'Protocol', 'Comments', 'Paper', 'External URL', 'Other')),
    CONSTRAINT PK_PROJECT_DOCUMENT PRIMARY KEY (PROJECT_DOCUMENT_ID)
)
;

GRANT SELECT ON PROJECT_DOCUMENT TO BALEXAND
;
GRANT SELECT ON PROJECT_DOCUMENT TO BARD_CI
;
GRANT SELECT ON PROJECT_DOCUMENT TO BARD_DEV
;
GRANT SELECT ON PROJECT_DOCUMENT TO BARD_QA
;
GRANT SELECT ON PROJECT_DOCUMENT TO DDURKIN
;
GRANT SELECT ON PROJECT_DOCUMENT TO DLAHR_BARD
;
GRANT SELECT ON PROJECT_DOCUMENT TO DSTONICH
;
GRANT SELECT ON PROJECT_DOCUMENT TO JASIEDU
;
GRANT SELECT ON PROJECT_DOCUMENT TO SBRUDZ
;
GRANT SELECT ON PROJECT_DOCUMENT TO SCHATWIN
;
GRANT SELECT ON PROJECT_DOCUMENT TO SOUTHERN
;
GRANT SELECT ON PROJECT_DOCUMENT TO YCRUZ
;

--
-- TABLE: Project_Step
--

CREATE TABLE Project_Step(
    Project_Step_ID          NUMBER(19, 0)     NOT NULL,
    PROJECT_ID               NUMBER(19, 0)     NOT NULL,
    EXPERIMENT_ID            NUMBER(19, 0)     NOT NULL,
    FOLLOWS_EXPERIMENT_ID    NUMBER(19, 0),
    DESCRIPTION              VARCHAR2(1000),
    VERSION                  NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    Date_Created             TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    Last_Updated             TIMESTAMP(6),
    MODIFIED_BY              VARCHAR2(40),
    CONSTRAINT PK_Project_Step PRIMARY KEY (Project_Step_ID)
)
;



GRANT SELECT ON Project_Step TO BALEXAND
;
GRANT SELECT ON Project_Step TO BARD_CI
;
GRANT SELECT ON Project_Step TO BARD_DEV
;
GRANT SELECT ON Project_Step TO BARD_QA
;
GRANT SELECT ON Project_Step TO DDURKIN
;
GRANT SELECT ON PROJECT_STEP TO DLAHR_BARD
;
GRANT SELECT ON Project_Step TO DSTONICH
;
GRANT SELECT ON Project_Step TO JASIEDU
;
GRANT SELECT ON Project_Step TO SBRUDZ
;
GRANT SELECT ON Project_Step TO SCHATWIN
;
GRANT SELECT ON Project_Step TO SOUTHERN
;
GRANT SELECT ON Project_Step TO YCRUZ
;

--
-- TABLE: RESULT
--

CREATE TABLE RESULT(
    RESULT_ID               NUMBER(19, 0)    NOT NULL,
    RESULT_STATUS           VARCHAR2(20)     DEFAULT 'Pending' NOT NULL,
    READY_FOR_EXTRACTION    VARCHAR2(20)     DEFAULT 'Pending' NOT NULL,
--    REPLICATE_NO            NUMBER(5,0),
    VALUE_DISPLAY           VARCHAR2(256),
    VALUE_NUM               FLOAT(126),
    VALUE_MIN               FLOAT(126),
    VALUE_MAX               FLOAT(126),
    QUALIFIER               CHAR(2),
    EXPERIMENT_ID           NUMBER(19, 0)    NOT NULL,
    SUBSTANCE_ID            NUMBER(19, 0)    NOT NULL,
    RESULT_TYPE_ID          NUMBER(19, 0)    NOT NULL,
    VERSION                 NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_RESULT_STATUS CHECK (Result_Status IN ('Pending', 'Approved', 'Rejected', 'Mark for Deletion')),
    CONSTRAINT CK_RESULT_EXTRACTION CHECK (ready_for_extraction IN ('Pending', 'Ready', 'Started', 'Complete')),
    CONSTRAINT CK_RESULT_QUALIFIER CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT PK_RESULT PRIMARY KEY (RESULT_ID)
)
;



COMMENT ON COLUMN RESULT.SUBSTANCE_ID IS 'Has external reference to the PubChem SID'
;
GRANT SELECT ON RESULT TO BARD_QA
;
GRANT SELECT ON RESULT TO DDURKIN
;
GRANT SELECT ON RESULT TO DLAHR_BARD
;
GRANT SELECT ON RESULT TO DSTONICH
;
GRANT SELECT ON RESULT TO JASIEDU
;
GRANT SELECT ON RESULT TO SBRUDZ
;
GRANT SELECT ON RESULT TO SCHATWIN
;
GRANT SELECT ON RESULT TO SOUTHERN
;
GRANT SELECT ON RESULT TO YCRUZ
;
GRANT SELECT ON RESULT TO BALEXAND
;
GRANT SELECT ON RESULT TO BARD_CI
;
GRANT SELECT ON RESULT TO BARD_DEV
;

--
-- TABLE: RESULT_HIERARCHY
--

CREATE TABLE RESULT_HIERARCHY(
    RESULT_ID           NUMBER(19, 0)    NOT NULL,
    PARENT_RESULT_ID    NUMBER(19, 0)    NOT NULL,
    HIERARCHY_TYPE      VARCHAR2(10)     NOT NULL,
    VERSION             NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created        TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT CK_RESULT_HIERARCHY_TYPE CHECK (HIERARCHY_TYPE in ('Child', 'Derives')),
    CONSTRAINT PK_RESULT_HIERARCHY PRIMARY KEY (RESULT_ID, PARENT_RESULT_ID)
)
;



COMMENT ON COLUMN RESULT_HIERARCHY.HIERARCHY_TYPE IS 'two types of hierarchy are allowed: parent/child where one result is dependant on or grouped with another; derived from where aresult is used to claculate another (e.g. PI used for IC50).  The hierarchy types are mutually exclusive.'
;
GRANT SELECT ON RESULT_HIERARCHY TO BALEXAND
;
GRANT SELECT ON RESULT_HIERARCHY TO BARD_CI
;
GRANT SELECT ON RESULT_HIERARCHY TO BARD_DEV
;
GRANT SELECT ON RESULT_HIERARCHY TO BARD_QA
;
GRANT SELECT ON RESULT_HIERARCHY TO DDURKIN
;
GRANT SELECT ON RESULT_HIERARCHY TO DLAHR_BARD
;
GRANT SELECT ON RESULT_HIERARCHY TO DSTONICH
;
GRANT SELECT ON RESULT_HIERARCHY TO JASIEDU
;
GRANT SELECT ON RESULT_HIERARCHY TO SBRUDZ
;
GRANT SELECT ON RESULT_HIERARCHY TO SCHATWIN
;
GRANT SELECT ON RESULT_HIERARCHY TO SOUTHERN
;
GRANT SELECT ON RESULT_HIERARCHY TO YCRUZ
;

--
-- TABLE: Result_type_tree
--

CREATE TABLE Result_type_tree(
    NODE_ID               NUMBER(19, 0)     NOT NULL,
    Parent_node_id        NUMBER(19, 0),
    RESULT_TYPE_ID        NUMBER(19, 0)     NOT NULL,
    RESULT_TYPE_STATUS    VARCHAR2(20)      NOT NULL,
    RESULT_TYPE_NAME      VARCHAR2(128)     NOT NULL,
    DESCRIPTION           VARCHAR2(1000),
    ABBREVIATION          VARCHAR2(20),
    SYNONYMS              VARCHAR2(1000),
    BASE_UNIT             VARCHAR2(128),
    CONSTRAINT PK_RESULT_TYPE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: Run_Context_Item
--

CREATE TABLE Run_Context_Item(
    Run_Context_Item_ID     NUMBER(19, 0)    NOT NULL,
    Group_Run_context_ID    NUMBER(19, 0),
    EXPERIMENT_ID           NUMBER(19, 0),
    RESULT_ID               NUMBER(19, 0),
    DISCRIMINATOR           VARCHAR2(20)     DEFAULT 'Result' NOT NULL,
    ATTRIBUTE_ID            NUMBER(19, 0)    NOT NULL,
    VALUE_ID                NUMBER(19, 0),
    EXT_VALUE_ID            VARCHAR2(60),
    QUALIFIER               CHAR(2),
    VALUE_NUM               FLOAT(126),
    VALUE_MIN               FLOAT(126),
    VALUE_MAX               FLOAT(126),
    VALUE_DISPLAY           VARCHAR2(500),
    VERSION                 NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created            TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated            TIMESTAMP(6),
    MODIFIED_BY             VARCHAR2(40),
    CONSTRAINT CK_RUN_CONTEXT_ITEM_QUALFR CHECK (Qualifier IN ('= ', '< ', '<=', '> ', '>=', '<<', '>>', '~ ')),
    CONSTRAINT CK_RUN_CONTEXT_ITEM_DISCRIM CHECK ((discriminator = 'Result' AND result_id IS NOT NULL AND experiment_id IS NULL)
       OR
      (discriminator = 'Experiment' AND result_id IS NULL AND experiment_id IS NOT NULL)),
    CONSTRAINT PK_Run_context_item PRIMARY KEY (Run_Context_Item_ID)
)
;



COMMENT ON COLUMN Run_Context_Item.VALUE_DISPLAY IS 'This is not a general text entry field, rather it is an easily displayable text version of the other value columns'
;
GRANT SELECT ON Run_Context_Item TO BALEXAND
;
GRANT SELECT ON Run_Context_Item TO BARD_CI
;
GRANT SELECT ON Run_Context_Item TO BARD_DEV
;
GRANT SELECT ON Run_Context_Item TO BARD_QA
;
GRANT SELECT ON Run_Context_Item TO DDURKIN
;
GRANT SELECT ON Run_Context_Item TO DLAHR_BARD
;
GRANT SELECT ON Run_Context_Item TO DSTONICH
;
GRANT SELECT ON Run_Context_Item TO JASIEDU
;
GRANT SELECT ON Run_Context_Item TO SBRUDZ
;
GRANT SELECT ON Run_Context_Item TO SCHATWIN
;
GRANT SELECT ON Run_Context_Item TO SOUTHERN
;
GRANT SELECT ON Run_Context_Item TO YCRUZ
;

--
-- TABLE: Stage_tree
--

CREATE TABLE Stage_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    STAGE_ID          NUMBER(19, 0)     NOT NULL,
    STAGE_STATUS      VARCHAR2(20)      NOT NULL,
    STAGE             VARCHAR2(128)     NOT NULL,
    DESCRIPTION       VARCHAR2(1000),
    CONSTRAINT PK_STAGE PRIMARY KEY (NODE_ID)
)
;



--
-- TABLE: STATEMENT_LOG
--

CREATE TABLE STATEMENT_LOG(
    "TABLE_NAME"   VARCHAR2(63)      NOT NULL,
    IDENTIFIER     NUMBER(19, 0)     NOT NULL,
    ACTION_DATE    DATE              DEFAULT sysdate NOT NULL,
    "ACTION"       VARCHAR2(20)      NOT NULL,
    DATA_CLAUSE    VARCHAR2(1000),
    CONSTRAINT PK_STATEMENT_LOG PRIMARY KEY ("TABLE_NAME", IDENTIFIER, ACTION_DATE, "ACTION")
)
;



GRANT SELECT ON STATEMENT_LOG TO SCHATWIN
;

--
-- TABLE: SUBSTANCE
--

CREATE TABLE SUBSTANCE(
    SUBSTANCE_ID        NUMBER(19, 0)     NOT NULL,
    COMPOUND_ID         NUMBER(38, 0),
    SMILES              VARCHAR2(4000),
    MOLECULAR_WEIGHT    NUMBER(10, 3),
    SUBSTANCE_TYPE      VARCHAR2(20)      NOT NULL,
    VERSION             NUMBER(38, 0)     DEFAULT 0 NOT NULL,
    DATE_CREATED        TIMESTAMP(6)      DEFAULT sysdate NOT NULL,
    LAST_UPDATED        TIMESTAMP(6),
    MODIFIED_BY         VARCHAR2(40),
    CONSTRAINT CK_SUBSTANCE_TYPE CHECK (Substance_Type in ('small molecule', 'protein', 'peptide', 'antibody', 'cell', 'oligonucleotide')),
    CONSTRAINT PK_SUBSTANCE PRIMARY KEY (SUBSTANCE_ID)
)
;



COMMENT ON TABLE SUBSTANCE IS 'Substance is used a CACHE of data from PubChem.  This cache can be removed if we can be assured that availability and capacity (for API queries) of PubChem will support dynamic use.'
;
GRANT SELECT ON SUBSTANCE TO BALEXAND
;
GRANT SELECT ON SUBSTANCE TO BARD_CI
;
GRANT SELECT ON SUBSTANCE TO BARD_DEV
;
GRANT SELECT ON SUBSTANCE TO BARD_QA
;
GRANT SELECT ON SUBSTANCE TO DDURKIN
;
GRANT SELECT ON SUBSTANCE TO DLAHR_BARD
;
GRANT SELECT ON SUBSTANCE TO DSTONICH
;
GRANT SELECT ON SUBSTANCE TO JASIEDU
;
GRANT SELECT ON SUBSTANCE TO SBRUDZ
;
GRANT SELECT ON SUBSTANCE TO SCHATWIN
;
GRANT SELECT ON SUBSTANCE TO SOUTHERN
;
GRANT SELECT ON SUBSTANCE TO YCRUZ
;

--
-- TABLE: TREE_ROOT
--

CREATE TABLE TREE_ROOT(
    TREE_ROOT_ID         NUMBER(19, 0)    NOT NULL,
    TREE_NAME            VARCHAR2(30)     NOT NULL,
    ELEMENT_ID           NUMBER(19, 0)    NOT NULL,
    RELATIONSHIP_TYPE    VARCHAR2(20),
    VERSION              NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    DATE_CREATED         TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    LAST_UPDATED         TIMESTAMP(6),
    MODIFIED_BY          VARCHAR2(40),
    CONSTRAINT PK_TREE_ROOT PRIMARY KEY (TREE_ROOT_ID)
)
;



GRANT SELECT ON TREE_ROOT TO BALEXAND
;
GRANT SELECT ON TREE_ROOT TO BARD_CI
;
GRANT SELECT ON TREE_ROOT TO BARD_DEV
;
GRANT SELECT ON TREE_ROOT TO BARD_QA
;
GRANT SELECT ON TREE_ROOT TO DDURKIN
;
GRANT SELECT ON TREE_ROOT TO DLAHR_BARD
;
GRANT SELECT ON TREE_ROOT TO DSTONICH
;
GRANT SELECT ON TREE_ROOT TO JASIEDU
;
GRANT SELECT ON TREE_ROOT TO SBRUDZ
;
GRANT SELECT ON TREE_ROOT TO SCHATWIN
;
GRANT SELECT ON TREE_ROOT TO SOUTHERN
;
GRANT SELECT ON TREE_ROOT TO YCRUZ
;

--
-- TABLE: UNIT_CONVERSION
--

CREATE TABLE UNIT_CONVERSION(
    FROM_UNIT       VARCHAR2(128)    NOT NULL,
    TO_UNIT         VARCHAR2(128)    NOT NULL,
    MULTIPLIER      FLOAT(126),
    OFFSET          FLOAT(126),
    FORMULA         VARCHAR2(256),
    VERSION         NUMBER(38, 0)    DEFAULT 0 NOT NULL,
    Date_Created    TIMESTAMP(6)     DEFAULT sysdate NOT NULL,
    Last_Updated    TIMESTAMP(6),
    MODIFIED_BY     VARCHAR2(40),
    CONSTRAINT PK_UNIT_CONVERSION PRIMARY KEY (FROM_UNIT, TO_UNIT)
)
;



GRANT SELECT ON UNIT_CONVERSION TO BALEXAND
;
GRANT SELECT ON UNIT_CONVERSION TO BARD_CI
;
GRANT SELECT ON UNIT_CONVERSION TO BARD_DEV
;
GRANT SELECT ON UNIT_CONVERSION TO BARD_QA
;
GRANT SELECT ON UNIT_CONVERSION TO DDURKIN
;
GRANT SELECT ON UNIT_CONVERSION TO DLAHR_BARD
;
GRANT SELECT ON UNIT_CONVERSION TO DSTONICH
;
GRANT SELECT ON UNIT_CONVERSION TO JASIEDU
;
GRANT SELECT ON UNIT_CONVERSION TO SBRUDZ
;
GRANT SELECT ON UNIT_CONVERSION TO SCHATWIN
;
GRANT SELECT ON UNIT_CONVERSION TO SOUTHERN
;
GRANT SELECT ON UNIT_CONVERSION TO YCRUZ
;

--
-- TABLE: Unit_tree
--

CREATE TABLE Unit_tree(
    NODE_ID           NUMBER(19, 0)     NOT NULL,
    PARENT_NODE_ID    NUMBER(19, 0),
    UNIT_ID           NUMBER(19, 0)     NOT NULL,
    UNIT              VARCHAR2(128)     NOT NULL,
    DESCRIPTION       VARCHAR2(1000),
    CONSTRAINT PK_UNIT PRIMARY KEY (NODE_ID)
)
;



--
-- VIEW: ASSAY_ELEMENT
--

CREATE VIEW ASSAY_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE ELEMENT_ID in (select ELEMENT_ID from Assay_Descriptor_Tree)
;

COMMENT ON TABLE ASSAY_ELEMENT IS 'This view shows the unique list of elements used to assemble the assay_descriptor_tree'
;
--
-- VIEW: BIOLOGY_ELEMENT
--

CREATE VIEW BIOLOGY_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select ELEMENT_ID from Biology_Descriptor_tree)
;

--
-- VIEW: INSTANCE_ELEMENT
--

CREATE VIEW INSTANCE_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select ELEMENT_ID from Instance_Descriptor_tree)
;

--
-- VIEW: LABORATORY_ELEMENT
--

CREATE VIEW LABORATORY_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE ELEMENT_ID in (select LABORATORY_ID from Laboratory_tree)
;

--
-- VIEW: RESULT_TYPE_ELEMENT
--

CREATE VIEW RESULT_TYPE_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select RESULT_TYPE_ID from Result_type_tree)
;

--
-- VIEW: STAGE_ELEMENT
--

CREATE VIEW STAGE_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE el.ELEMENT_ID in (select STAGE_ID from Stage_tree)
;

--
-- VIEW: UNIT_ELEMENT
--

CREATE VIEW UNIT_ELEMENT
(Element_ID, Element_Status, Label, Description, Abbreviation, Synonyms, Unit, BARD_URI, External_URL, ready_for_extraction, Version, Date_Created, Last_Updated, Modified_by) AS
SELECT El.ELEMENT_ID, El.ELEMENT_STATUS, El.LABEL, El.DESCRIPTION, El.ABBREVIATION, El.SYNONYMS, El.UNIT, El.BARD_URI, El.EXTERNAL_URL, El.READY_FOR_EXTRACTION, El.VERSION, El.Date_Created, El.Last_Updated, El.MODIFIED_BY
FROM ELEMENT El
WHERE ELEMENT_ID in (select UNIT_ID from Unit_tree)
;

--
-- INDEX: IDX_ASSAY_NAME_VERSION
--

CREATE INDEX IDX_ASSAY_NAME_VERSION ON ASSAY(ASSAY_NAME, ASSAY_VERSION)
;
--
-- INDEX: AK_Assay_Context_item
--

CREATE UNIQUE INDEX AK_Assay_Context_item ON Assay_Context_Item(Assay_Context_ID, DISPLAY_ORDER, ATTRIBUTE_ID, ATTRIBUTE_TYPE, VALUE_DISPLAY)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_A_CONTEXT
--

CREATE INDEX FK_A_CONTEXT_ITEM_A_CONTEXT ON Assay_Context_Item(Assay_Context_ID)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_ATTRIBUTE
--

CREATE BITMAP INDEX FK_A_CONTEXT_ITEM_ATTRIBUTE ON Assay_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_A_CONTEXT_ITEM_QUALIFIER
--

CREATE BITMAP INDEX FK_A_CONTEXT_ITEM_QUALIFIER ON Assay_Context_Item(QUALIFIER)
;
--
-- INDEX: FK_ASSAY_DESCRIPTOR_PARENT_SLF
--

CREATE INDEX FK_ASSAY_DESCRIPTOR_PARENT_SLF ON Assay_Descriptor_Tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_ASSAY_DOCUMENT_ASSAY
--

CREATE INDEX FK_ASSAY_DOCUMENT_ASSAY ON ASSAY_DOCUMENT(ASSAY_ID)
;
--
-- INDEX: FK_BIOLOGY_DESCRIPTOR_PRNT_SLF
--

CREATE INDEX FK_BIOLOGY_DESCRIPTOR_PRNT_SLF ON Biology_Descriptor_tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_ELEMENT_UNIT
--

CREATE INDEX FK_ELEMENT_UNIT ON ELEMENT(UNIT)
;
--
-- INDEX: IDX_ELEMENT_LOWER_LABEL
--

CREATE INDEX IDX_ELEMENT_LOWER_LABEL ON ELEMENT(LOWER("LABEL"))
;
--
-- INDEX: AK_ELEMENT_HIERARCHY
--

CREATE UNIQUE INDEX AK_ELEMENT_HIERARCHY ON ELEMENT_HIERARCHY(CHILD_ELEMENT_ID, PARENT_ELEMENT_ID, RELATIONSHIP_TYPE)
;
--
-- INDEX: FK_E_HIERARCHY_PARENT_ELEM_ID
--

CREATE INDEX FK_E_HIERARCHY_PARENT_ELEM_ID ON ELEMENT_HIERARCHY(PARENT_ELEMENT_ID)
;
--
-- INDEX: FK_E_HIERARCHY_CHILD_ELEM_ID
--

CREATE INDEX FK_E_HIERARCHY_CHILD_ELEM_ID ON ELEMENT_HIERARCHY(CHILD_ELEMENT_ID)
;
--
-- INDEX: FK_EXPERIMENT_ASSAY
--

CREATE INDEX FK_EXPERIMENT_ASSAY ON EXPERIMENT(ASSAY_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_EXPERIMENT
--

CREATE INDEX FK_EXT_REFERENCE_EXPERIMENT ON EXTERNAL_REFERENCE(EXPERIMENT_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_EXT_SYSTEM
--

CREATE INDEX FK_EXT_REFERENCE_EXT_SYSTEM ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID)
;
--
-- INDEX: FK_EXT_REFERENCE_PROJECT
--

CREATE INDEX FK_EXT_REFERENCE_PROJECT ON EXTERNAL_REFERENCE(PROJECT_ID)
;
--
-- INDEX: AK_EXT_REFERENCE
--

CREATE UNIQUE INDEX AK_EXT_REFERENCE ON EXTERNAL_REFERENCE(EXTERNAL_SYSTEM_ID, EXPERIMENT_ID, PROJECT_ID, EXT_ASSAY_REF)
;
--
-- INDEX: SI_IDENTIFIER_MAPPING_TARGET
--

CREATE INDEX SI_IDENTIFIER_MAPPING_TARGET ON IDENTIFIER_MAPPING(TARGET_ID, "TABLE_NAME")
;
--
-- INDEX: FK_INSTANCE_DESCRIPTR_PRNT_SLF
--

CREATE INDEX FK_INSTANCE_DESCRIPTR_PRNT_SLF ON Instance_Descriptor_tree(PARENT_NODE_ID)
;
--
-- INDEX: FK_MEASURE_ELEMENT_UNIT
--

CREATE INDEX FK_MEASURE_ELEMENT_UNIT ON MEASURE(ENTRY_UNIT)
;
--
-- INDEX: FK_MEASURE_ASSAY
--

CREATE INDEX FK_MEASURE_ASSAY ON MEASURE(ASSAY_ID)
;
--
-- INDEX: FK_MEASURE_PARENT_MEASURE_ID
--

CREATE INDEX FK_MEASURE_PARENT_MEASURE_ID ON MEASURE(PARENT_MEASURE_ID)
;
--
-- INDEX: FK_MEASURE_RESULT_TYPE
--

CREATE INDEX FK_MEASURE_RESULT_TYPE ON MEASURE(RESULT_TYPE_ID)
;
--
-- INDEX: FK_MEASURE_A_CONTEXT
--

CREATE INDEX FK_MEASURE_A_CONTEXT ON MEASURE(Assay_Context_ID)
;
--
-- INDEX: FK_ONTOLOGY_ITEM_ONTOLOGY
--

CREATE INDEX FK_ONTOLOGY_ITEM_ONTOLOGY ON ONTOLOGY_ITEM(ONTOLOGY_ID)
;
--
-- INDEX: FK_ONTOLOGY_ITEM_ELEMENT
--

CREATE INDEX FK_ONTOLOGY_ITEM_ELEMENT ON ONTOLOGY_ITEM(ELEMENT_ID)
;
--
-- INDEX: FK_PROJECT_STEP_ITEM_EXPRMNT
--

CREATE INDEX FK_PROJECT_STEP_ITEM_EXPRMNT ON Project_Context_Item(Project_Step_ID)
;
--
-- INDEX: FK_PROJECT_STEP_ITEM_ATTRIBUTE
--

CREATE INDEX FK_PROJECT_STEP_ITEM_ATTRIBUTE ON Project_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_PROJECT_STEP_ITEM_VALUE
--

CREATE INDEX FK_PROJECT_STEP_ITEM_VALUE ON Project_Context_Item(VALUE_ID)
;
--
-- INDEX: FK_PROJECT_STEP_ITEM_QUALIFIER
--

CREATE INDEX FK_PROJECT_STEP_ITEM_QUALIFIER ON Project_Context_Item(QUALIFIER)
;
--
-- INDEX: FK_PROJECT_STEP_ITEM_GROUP
--

CREATE INDEX FK_PROJECT_STEP_ITEM_GROUP ON Project_Context_Item(GROUP_PROJECT_CONTEXT_ID)
;
--
-- INDEX: FK_PROJECT_DOCUMENT_PROJECT
--

CREATE INDEX FK_PROJECT_DOCUMENT_PROJECT ON PROJECT_DOCUMENT(PROJECT_ID)
;
--
-- INDEX: FK_PROJECT_STEP_PROJECT
--

CREATE INDEX FK_PROJECT_STEP_PROJECT ON Project_Step(PROJECT_ID)
;
--
-- INDEX: FK_PROJECT_STEP_EXPERIMENT
--

CREATE INDEX FK_PROJECT_STEP_EXPERIMENT ON Project_Step(EXPERIMENT_ID)
;
--
-- INDEX: FK_PROJECT_STEP_FLLWS_EXPRMNT
--

CREATE INDEX FK_PROJECT_STEP_FLLWS_EXPRMNT ON Project_Step(FOLLOWS_EXPERIMENT_ID)
;
--
-- INDEX: FK_RESULT_EXPERIMENT
--

CREATE BITMAP INDEX FK_RESULT_EXPERIMENT ON RESULT(EXPERIMENT_ID)
;
--
-- INDEX: FK_RESULT_RESULT_TYPE
--

CREATE BITMAP INDEX FK_RESULT_RESULT_TYPE ON RESULT(RESULT_TYPE_ID)
;
--
-- INDEX: AK_RESULT_NATURAL
--

--CREATE UNIQUE INDEX AK_RESULT_NATURAL ON RESULT(EXPERIMENT_ID, SUBSTANCE_ID, RESULT_TYPE_ID, REPLICATE_NO)
--;
--
-- INDEX: FK_RESULT_HIERARCHY_RSLT_PRNT
--

CREATE INDEX FK_RESULT_HIERARCHY_RSLT_PRNT ON RESULT_HIERARCHY(RESULT_ID)
;
--
-- INDEX: FK_RESULT_HIERARCHY_RESULT
--

CREATE INDEX FK_RESULT_HIERARCHY_RESULT ON RESULT_HIERARCHY(PARENT_RESULT_ID)
;
--
-- INDEX: FK_RESULT_TYPE_PARENT_SELF
--

CREATE INDEX FK_RESULT_TYPE_PARENT_SELF ON Result_type_tree(Parent_node_id)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_EXPERIMENT
--

CREATE INDEX FK_R_CONTEXT_ITEM_EXPERIMENT ON Run_Context_Item(EXPERIMENT_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_ATTRIBUTE
--

CREATE INDEX FK_R_CONTEXT_ITEM_ATTRIBUTE ON Run_Context_Item(ATTRIBUTE_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_VALUE
--

CREATE INDEX FK_R_CONTEXT_ITEM_VALUE ON Run_Context_Item(VALUE_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_QUALIFIER
--

CREATE INDEX FK_R_CONTEXT_ITEM_QUALIFIER ON Run_Context_Item(QUALIFIER)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_RESULT
--

CREATE INDEX FK_R_CONTEXT_ITEM_RESULT ON Run_Context_Item(RESULT_ID)
;
--
-- INDEX: FK_R_CONTEXT_ITEM_GROUP
--

CREATE INDEX FK_R_CONTEXT_ITEM_GROUP ON Run_Context_Item(Group_Run_context_ID)
;
--
-- INDEX: AK_TREE_ROOT_NAME
--

CREATE UNIQUE INDEX AK_TREE_ROOT_NAME ON TREE_ROOT(TREE_NAME)
;
--
-- INDEX: FK_TREE_ROOT_ELEMENT
--

CREATE INDEX FK_TREE_ROOT_ELEMENT ON TREE_ROOT(ELEMENT_ID)
;
--
-- INDEX: FK_UNIT_CONVERSN_FRM_UNT_ELMNT
--

CREATE INDEX FK_UNIT_CONVERSN_FRM_UNT_ELMNT ON UNIT_CONVERSION(FROM_UNIT)
;
--
-- INDEX: FK_UNIT_CONVERSN_TO_UNT_ELMNT
--

CREATE INDEX FK_UNIT_CONVERSN_TO_UNT_ELMNT ON UNIT_CONVERSION(TO_UNIT)
;
--
-- INDEX: FK_UNIT_PARENT_SELF
--

CREATE INDEX FK_UNIT_PARENT_SELF ON Unit_tree(PARENT_NODE_ID)
;
--
-- TABLE: ELEMENT
--

ALTER TABLE ELEMENT ADD
    CONSTRAINT AK_ELEMENT_LABEL UNIQUE (LABEL)
;

--
-- TABLE: Assay_Context
--

ALTER TABLE Assay_Context ADD CONSTRAINT FK_Assay_Context_Assay
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;


--
-- TABLE: Assay_Context_Item
--

ALTER TABLE Assay_Context_Item ADD CONSTRAINT FK_A_context_Item_A_Context
    FOREIGN KEY (Assay_Context_ID)
    REFERENCES Assay_Context(Assay_Context_ID)
;

ALTER TABLE Assay_Context_Item ADD CONSTRAINT FK_A_context_item_attribute
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Assay_Context_Item ADD CONSTRAINT fk_A_context_item_value
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: Assay_Descriptor_Tree
--

ALTER TABLE Assay_Descriptor_Tree ADD CONSTRAINT FK_ASSAY_DESCRIPTOR_PARENT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Assay_Descriptor_Tree(NODE_ID)
;


--
-- TABLE: ASSAY_DOCUMENT
--

ALTER TABLE ASSAY_DOCUMENT ADD CONSTRAINT FK_Assay_document_assay
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;


--
-- TABLE: Biology_Descriptor_tree
--

ALTER TABLE Biology_Descriptor_tree ADD CONSTRAINT FK_BIOLOGY_DESCRIPTOR_PRNT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Biology_Descriptor_tree(NODE_ID)
;


--
-- TABLE: ELEMENT
--

ALTER TABLE ELEMENT ADD CONSTRAINT FK_Element_Unit
    FOREIGN KEY (UNIT)
    REFERENCES ELEMENT(LABEL)
;


--
-- TABLE: ELEMENT_HIERARCHY
--

ALTER TABLE ELEMENT_HIERARCHY ADD CONSTRAINT FK_E_HIERARCHY_CHILD_ELEM_ID
    FOREIGN KEY (CHILD_ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;

ALTER TABLE ELEMENT_HIERARCHY ADD CONSTRAINT FK_E_HIERARCHY_PARENT_ELEM_ID
    FOREIGN KEY (PARENT_ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;


--
-- TABLE: EXPERIMENT
--

ALTER TABLE EXPERIMENT ADD CONSTRAINT FK_EXPERIMENT_ASSAY
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;


--
-- TABLE: EXTERNAL_REFERENCE
--

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_EXT_SYSTEM
    FOREIGN KEY (EXTERNAL_SYSTEM_ID)
    REFERENCES EXTERNAL_SYSTEM(EXTERNAL_SYSTEM_ID)
;

ALTER TABLE EXTERNAL_REFERENCE ADD CONSTRAINT FK_EXT_REFERENCE_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: Instance_Descriptor_tree
--

ALTER TABLE Instance_Descriptor_tree ADD CONSTRAINT FK_INSTANCE_DESCRIPTR_PRNT_SLF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Instance_Descriptor_tree(NODE_ID)
;


--
-- TABLE: Laboratory_tree
--

ALTER TABLE Laboratory_tree ADD CONSTRAINT FK_LABORATORY_PARENT_NODE_ID
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Laboratory_tree(NODE_ID)
;


--
-- TABLE: MEASURE
--

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_A_CONTEXT
    FOREIGN KEY (Assay_Context_ID)
    REFERENCES Assay_Context(Assay_Context_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_ASSAY
    FOREIGN KEY (ASSAY_ID)
    REFERENCES ASSAY(ASSAY_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_Measure_Element_Unit
    FOREIGN KEY (ENTRY_UNIT)
    REFERENCES ELEMENT(LABEL)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_PARENT_MEASURE_ID
    FOREIGN KEY (PARENT_MEASURE_ID)
    REFERENCES MEASURE(MEASURE_ID)
;

ALTER TABLE MEASURE ADD CONSTRAINT FK_MEASURE_RESULT_TYPE
    FOREIGN KEY (RESULT_TYPE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: ONTOLOGY_ITEM
--

ALTER TABLE ONTOLOGY_ITEM ADD CONSTRAINT FK_ONTOLOGY_ITEM_ELEMENT
    FOREIGN KEY (ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID) ON DELETE CASCADE
;

ALTER TABLE ONTOLOGY_ITEM ADD CONSTRAINT FK_ONTOLOGY_ITEM_ONTOLOGY
    FOREIGN KEY (ONTOLOGY_ID)
    REFERENCES ONTOLOGY(ONTOLOGY_ID)
;


--
-- TABLE: Project_Context_Item
--

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PROJ_CONTEXT_ITEM_ATTR
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PROJ_CONTEXT_ITEM_Group
    FOREIGN KEY (GROUP_PROJECT_CONTEXT_ID)
    REFERENCES Project_Context_Item(project_Context_Item_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PROJ_CONTEXT_ITEM_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PROJ_CONTEXT_ITEM_STEP
    FOREIGN KEY (Project_Step_ID)
    REFERENCES Project_Step(Project_Step_ID)
;

ALTER TABLE Project_Context_Item ADD CONSTRAINT FK_PROJ_CONTEXT_ITEM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: PROJECT_DOCUMENT
--

ALTER TABLE PROJECT_DOCUMENT ADD CONSTRAINT FK_PROJECT_DOCUMENT_PROJECT
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: Project_Step
--

ALTER TABLE Project_Step ADD CONSTRAINT fk_project_step_experiment
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE Project_Step ADD CONSTRAINT FK_PROJECT_STEP_FLLWS_EXPRMNT
    FOREIGN KEY (FOLLOWS_EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE Project_Step ADD CONSTRAINT FK_project_step_project
    FOREIGN KEY (PROJECT_ID)
    REFERENCES PROJECT(PROJECT_ID)
;


--
-- TABLE: RESULT
--

ALTER TABLE RESULT ADD CONSTRAINT FK_RESULT_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE RESULT ADD CONSTRAINT FK_Result_Result_Type
    FOREIGN KEY (RESULT_TYPE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: RESULT_HIERARCHY
--

ALTER TABLE RESULT_HIERARCHY ADD CONSTRAINT FK_RESULT_HIERARCHY_RESULT
    FOREIGN KEY (PARENT_RESULT_ID)
    REFERENCES RESULT(RESULT_ID) ON DELETE CASCADE
;

ALTER TABLE RESULT_HIERARCHY ADD CONSTRAINT FK_RESULT_HIERARCHY_RSLT_PRNT
    FOREIGN KEY (RESULT_ID)
    REFERENCES RESULT(RESULT_ID) ON DELETE CASCADE
;


--
-- TABLE: Result_type_tree
--

ALTER TABLE Result_type_tree ADD CONSTRAINT FK_Result_Type_Parent_Self
    FOREIGN KEY (Parent_node_id)
    REFERENCES Result_type_tree(NODE_ID)
;


--
-- TABLE: Run_Context_Item
--

ALTER TABLE Run_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_ATTRIBUTE
    FOREIGN KEY (ATTRIBUTE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;

ALTER TABLE Run_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_EXPERIMENT
    FOREIGN KEY (EXPERIMENT_ID)
    REFERENCES EXPERIMENT(EXPERIMENT_ID)
;

ALTER TABLE Run_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_GROUP
    FOREIGN KEY (Group_Run_context_ID)
    REFERENCES Run_Context_Item(Run_Context_Item_ID)
;

ALTER TABLE Run_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_RESULT
    FOREIGN KEY (RESULT_ID)
    REFERENCES RESULT(RESULT_ID)
;

ALTER TABLE Run_Context_Item ADD CONSTRAINT FK_R_CONTEXT_ITEM_VALUE
    FOREIGN KEY (VALUE_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: Stage_tree
--

ALTER TABLE Stage_tree ADD CONSTRAINT FK_STAGE_PARENT_NODE_ID
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Stage_tree(NODE_ID)
;


--
-- TABLE: TREE_ROOT
--

ALTER TABLE TREE_ROOT ADD CONSTRAINT FK_TREE_ROOT_ELEMENT
    FOREIGN KEY (ELEMENT_ID)
    REFERENCES ELEMENT(ELEMENT_ID)
;


--
-- TABLE: UNIT_CONVERSION
--

ALTER TABLE UNIT_CONVERSION ADD CONSTRAINT FK_UNIT_CONVERSN_FRM_UNT_ELMNT
    FOREIGN KEY (FROM_UNIT)
    REFERENCES ELEMENT(LABEL)
;

ALTER TABLE UNIT_CONVERSION ADD CONSTRAINT FK_UNIT_CONVERSN_TO_UNT_ELMNT
    FOREIGN KEY (TO_UNIT)
    REFERENCES ELEMENT(LABEL)
;


--
-- TABLE: Unit_tree
--

ALTER TABLE Unit_tree ADD CONSTRAINT FK_UNIT_PARENT_SELF
    FOREIGN KEY (PARENT_NODE_ID)
    REFERENCES Unit_tree(NODE_ID)
;

--ALTER package manage_ontology COMPILE;
--ALTER package load_data COMPILE;
--ALTER package merge_migration COMPILE;
--ALTER PROCEDURE make_projects COMPILE;

--BEGIN
--    load_data.load_assay(To_Number(NULL));
--    COMMIT;
--    --load_data.reset_sequence;
--END;
--/

declare
    cursor cur_sequence
    is
    select sequence_name
    from user_sequences
    WHERE sequence_name LIKE '%_ID_SEQ';

    lv_max_sql  varchar2(1000);
    lv_drop_sql varchar2(1000);
    lv_create_sql   varchar2(1000);
    lv_grant_sql    varchar2(1000);
    lv_table_name   varchar2(50);
    lv_primary_key  varchar2(50);
    ln_max_id   number;

begin
    for rec_sequence in cur_sequence
    loop
        lv_table_name := replace(rec_sequence.sequence_name, '_ID_SEQ', null);
        lv_primary_key := replace(rec_sequence.sequence_name, '_SEQ', null);

        lv_max_sql := 'select nvl(max(' || lv_primary_key || '), 0) from ' || lv_table_name;
        begin
            --dbms_output.put_line(lv_max_sql);
            EXECUTE IMMEDIATE lv_max_sql INTO ln_max_ID;

            lv_drop_sql := 'drop sequence ' || rec_sequence.sequence_name;
            --dbms_output.put_line(lv_drop_sql);
            EXECUTE IMMEDIATE lv_drop_sql;

            lv_create_sql := 'create sequence ' || rec_sequence.sequence_name
                    || ' start with ' || to_char(ln_max_id + 1)
                    || ' increment by 1 nominvalue maxvalue 2147483648 nocycle ';
            IF rec_sequence.sequence_name = 'RESULT_ID_SEQ'
            THEN
                lv_create_sql := lv_create_sql || 'cache 10000 noorder';
            ELSE
                lv_create_sql := lv_create_sql || 'cache 20 noorder';
            END IF;
            --dbms_output.put_line(lv_create_sql);

            lv_grant_sql := 'grant select on ' || rec_sequence.sequence_name
                    || ' to schatwin';
            --dbms_output.put_line(lv_grant_sql);
            EXECUTE IMMEDIATE lv_create_sql;
            EXECUTE IMMEDIATE lv_grant_sql;

        exception
            when others
            then
                null;   --dbms_output.put_line (to_char(sqlcode) || ', ' || sqlerrm);

        end;

    end loop;

    if cur_sequence%isopen
    then
        close cur_sequence;
    end if;

end;
/

-- SELECT * FROM user_sequences;

